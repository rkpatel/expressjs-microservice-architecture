
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.6.1
 * Query Engine version: 694eea289a8462c80264df36757e4fdc129b1b32
 */
Prisma.prismaVersion = {
  client: "4.6.1",
  engine: "694eea289a8462c80264df36757e4fdc129b1b32"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.APIAuditScalarFieldEnum = makeEnum({
  id: 'id',
  ClientURL: 'ClientURL',
  UserEmail: 'UserEmail',
  Requestobject: 'Requestobject',
  Responseobject: 'Responseobject',
  Startime: 'Startime',
  EndTime: 'EndTime',
  AuditErrorLogId: 'AuditErrorLogId',
  Controller: 'Controller',
  Method: 'Method'
});

exports.Prisma.ErrorLogScalarFieldEnum = makeEnum({
  ErrorLogId: 'ErrorLogId',
  UserId: 'UserId',
  Message: 'Message',
  StackTrace: 'StackTrace',
  IPAddress: 'IPAddress',
  TimeStamp: 'TimeStamp',
  Event: 'Event',
  UserName: 'UserName',
  AuditErrorLogId: 'AuditErrorLogId'
});

exports.Prisma.ModuleMasterScalarFieldEnum = makeEnum({
  Id: 'Id',
  ParentId: 'ParentId',
  Name: 'Name',
  DisplayName: 'DisplayName',
  URL: 'URL',
  OrderNo: 'OrderNo',
  Description: 'Description',
  IsActive: 'IsActive',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  ModifiedDate: 'ModifiedDate',
  ModifiedBy: 'ModifiedBy',
  IsParentMenu: 'IsParentMenu',
  MenuIconClass: 'MenuIconClass'
});

exports.Prisma.ModulePermissionScalarFieldEnum = makeEnum({
  PermissionId: 'PermissionId',
  ModuleId: 'ModuleId',
  IsDefaultTrue: 'IsDefaultTrue',
  IsActive: 'IsActive',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy'
});

exports.Prisma.NotificationScalarFieldEnum = makeEnum({
  Id: 'Id',
  NotificationTemplateId: 'NotificationTemplateId',
  Sender: 'Sender',
  Phone: 'Phone',
  Recipient: 'Recipient',
  CCRecipient: 'CCRecipient',
  Subject: 'Subject',
  Body: 'Body',
  NotificationType: 'NotificationType',
  IsProcessed: 'IsProcessed',
  ErrorMessage: 'ErrorMessage',
  RetryCount: 'RetryCount',
  SentDate: 'SentDate',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  ModifiedBy: 'ModifiedBy',
  ModifiedDate: 'ModifiedDate'
});

exports.Prisma.NotificationTemplateScalarFieldEnum = makeEnum({
  Id: 'Id',
  Name: 'Name',
  Description: 'Description',
  Subject: 'Subject',
  Body: 'Body',
  Type: 'Type',
  IsActive: 'IsActive',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  ModifiedBy: 'ModifiedBy',
  ModifiedDate: 'ModifiedDate'
});

exports.Prisma.PermissionMasterScalarFieldEnum = makeEnum({
  Id: 'Id',
  Name: 'Name',
  DisplayName: 'DisplayName',
  Description: 'Description',
  IsActive: 'IsActive',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy',
  ModifiedDate: 'ModifiedDate',
  ModifiedBy: 'ModifiedBy'
});

exports.Prisma.RoleMasterScalarFieldEnum = makeEnum({
  Id: 'Id',
  Name: 'Name',
  Description: 'Description',
  IsActive: 'IsActive',
  CreateDate: 'CreateDate',
  CreatedBy: 'CreatedBy',
  ModifiedDate: 'ModifiedDate',
  ModifiedBy: 'ModifiedBy'
});

exports.Prisma.RolePermissionScalarFieldEnum = makeEnum({
  RoleId: 'RoleId',
  ModuleId: 'ModuleId',
  PermissionId: 'PermissionId',
  Permission: 'Permission',
  CreatedDate: 'CreatedDate',
  CreatedBy: 'CreatedBy'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.SysdiagramsScalarFieldEnum = makeEnum({
  name: 'name',
  principal_id: 'principal_id',
  diagram_id: 'diagram_id',
  version: 'version',
  definition: 'definition'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
  Snapshot: 'Snapshot'
});

exports.Prisma.UserResetCredentialScalarFieldEnum = makeEnum({
  Id: 'Id',
  UserId: 'UserId',
  ResetCode: 'ResetCode',
  IsActive: 'IsActive',
  TimeValid: 'TimeValid',
  EmailSentTime: 'EmailSentTime',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  ModifiedBy: 'ModifiedBy',
  ModifiedDate: 'ModifiedDate'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  Id: 'Id',
  FirstName: 'FirstName',
  LastName: 'LastName',
  EmailID: 'EmailID',
  UserName: 'UserName',
  Password: 'Password',
  IsActive: 'IsActive',
  LastAccess: 'LastAccess',
  CreatedBy: 'CreatedBy',
  CreatedDate: 'CreatedDate',
  ModifiedBy: 'ModifiedBy',
  ModifiedDate: 'ModifiedDate',
  IsVerified: 'IsVerified',
  ActivationCode: 'ActivationCode',
  PasswordResetDuration: 'PasswordResetDuration',
  RoleId: 'RoleId'
});


exports.Prisma.ModelName = makeEnum({
  APIAudit: 'APIAudit',
  ErrorLog: 'ErrorLog',
  ModuleMaster: 'ModuleMaster',
  ModulePermission: 'ModulePermission',
  Notification: 'Notification',
  NotificationTemplate: 'NotificationTemplate',
  PermissionMaster: 'PermissionMaster',
  RoleMaster: 'RoleMaster',
  RolePermission: 'RolePermission',
  sysdiagrams: 'sysdiagrams',
  User: 'User',
  UserResetCredential: 'UserResetCredential'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
