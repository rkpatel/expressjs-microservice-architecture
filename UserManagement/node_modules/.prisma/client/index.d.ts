
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model APIAudit
 * 
 */
export type APIAudit = {
  id: bigint
  ClientURL: string | null
  UserEmail: string | null
  Requestobject: string | null
  Responseobject: string | null
  Startime: Date | null
  EndTime: Date | null
  AuditErrorLogId: string | null
  Controller: string | null
  Method: string | null
}

/**
 * Model ErrorLog
 * 
 */
export type ErrorLog = {
  ErrorLogId: number
  UserId: number
  Message: string
  StackTrace: string
  IPAddress: string
  TimeStamp: Date
  Event: string
  UserName: string
  AuditErrorLogId: string | null
}

/**
 * Model ModuleMaster
 * 
 */
export type ModuleMaster = {
  Id: number
  ParentId: number
  Name: string
  DisplayName: string
  URL: string | null
  OrderNo: number
  Description: string | null
  IsActive: boolean
  CreatedDate: Date
  CreatedBy: number | null
  ModifiedDate: Date | null
  ModifiedBy: number | null
  IsParentMenu: boolean | null
  MenuIconClass: string | null
}

/**
 * Model ModulePermission
 * 
 */
export type ModulePermission = {
  PermissionId: number
  ModuleId: number
  IsDefaultTrue: boolean
  IsActive: boolean
  CreatedDate: Date
  CreatedBy: number
}

/**
 * Model Notification
 * 
 */
export type Notification = {
  Id: number
  NotificationTemplateId: number
  Sender: string | null
  Phone: string | null
  Recipient: string | null
  CCRecipient: string | null
  Subject: string | null
  Body: string
  NotificationType: string
  IsProcessed: boolean
  ErrorMessage: string | null
  RetryCount: number | null
  SentDate: Date
  CreatedBy: number
  CreatedDate: Date
  ModifiedBy: number | null
  ModifiedDate: Date | null
}

/**
 * Model NotificationTemplate
 * 
 */
export type NotificationTemplate = {
  Id: number
  Name: string
  Description: string
  Subject: string
  Body: string
  Type: string
  IsActive: boolean
  CreatedBy: number
  CreatedDate: Date
  ModifiedBy: number | null
  ModifiedDate: Date | null
}

/**
 * Model PermissionMaster
 * 
 */
export type PermissionMaster = {
  Id: number
  Name: string
  DisplayName: string
  Description: string | null
  IsActive: boolean
  CreatedDate: Date
  CreatedBy: number
  ModifiedDate: Date | null
  ModifiedBy: number | null
}

/**
 * Model RoleMaster
 * 
 */
export type RoleMaster = {
  Id: number
  Name: string
  Description: string | null
  IsActive: boolean
  CreateDate: Date
  CreatedBy: number | null
  ModifiedDate: Date | null
  ModifiedBy: number | null
}

/**
 * Model RolePermission
 * 
 */
export type RolePermission = {
  RoleId: number
  ModuleId: number
  PermissionId: number
  Permission: boolean
  CreatedDate: Date
  CreatedBy: number
}

/**
 * Model sysdiagrams
 * 
 */
export type sysdiagrams = {
  name: string
  principal_id: number
  diagram_id: number
  version: number | null
  definition: Buffer | null
}

/**
 * Model User
 * 
 */
export type User = {
  Id: number
  FirstName: string
  LastName: string
  EmailID: string
  UserName: string | null
  Password: string | null
  IsActive: boolean
  LastAccess: Date | null
  CreatedBy: number
  CreatedDate: Date
  ModifiedBy: number | null
  ModifiedDate: Date | null
  IsVerified: boolean | null
  ActivationCode: string | null
  PasswordResetDuration: Date | null
  RoleId: number | null
}

/**
 * Model UserResetCredential
 * 
 */
export type UserResetCredential = {
  Id: number
  UserId: number
  ResetCode: string
  IsActive: boolean
  TimeValid: number
  EmailSentTime: Date
  CreatedBy: number
  CreatedDate: Date
  ModifiedBy: number | null
  ModifiedDate: Date | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more APIAudits
 * const aPIAudits = await prisma.aPIAudit.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more APIAudits
   * const aPIAudits = await prisma.aPIAudit.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<UnwrapTuple<P>>;

      /**
   * `prisma.aPIAudit`: Exposes CRUD operations for the **APIAudit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more APIAudits
    * const aPIAudits = await prisma.aPIAudit.findMany()
    * ```
    */
  get aPIAudit(): Prisma.APIAuditDelegate<GlobalReject>;

  /**
   * `prisma.errorLog`: Exposes CRUD operations for the **ErrorLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ErrorLogs
    * const errorLogs = await prisma.errorLog.findMany()
    * ```
    */
  get errorLog(): Prisma.ErrorLogDelegate<GlobalReject>;

  /**
   * `prisma.moduleMaster`: Exposes CRUD operations for the **ModuleMaster** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModuleMasters
    * const moduleMasters = await prisma.moduleMaster.findMany()
    * ```
    */
  get moduleMaster(): Prisma.ModuleMasterDelegate<GlobalReject>;

  /**
   * `prisma.modulePermission`: Exposes CRUD operations for the **ModulePermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModulePermissions
    * const modulePermissions = await prisma.modulePermission.findMany()
    * ```
    */
  get modulePermission(): Prisma.ModulePermissionDelegate<GlobalReject>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<GlobalReject>;

  /**
   * `prisma.notificationTemplate`: Exposes CRUD operations for the **NotificationTemplate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NotificationTemplates
    * const notificationTemplates = await prisma.notificationTemplate.findMany()
    * ```
    */
  get notificationTemplate(): Prisma.NotificationTemplateDelegate<GlobalReject>;

  /**
   * `prisma.permissionMaster`: Exposes CRUD operations for the **PermissionMaster** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PermissionMasters
    * const permissionMasters = await prisma.permissionMaster.findMany()
    * ```
    */
  get permissionMaster(): Prisma.PermissionMasterDelegate<GlobalReject>;

  /**
   * `prisma.roleMaster`: Exposes CRUD operations for the **RoleMaster** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RoleMasters
    * const roleMasters = await prisma.roleMaster.findMany()
    * ```
    */
  get roleMaster(): Prisma.RoleMasterDelegate<GlobalReject>;

  /**
   * `prisma.rolePermission`: Exposes CRUD operations for the **RolePermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RolePermissions
    * const rolePermissions = await prisma.rolePermission.findMany()
    * ```
    */
  get rolePermission(): Prisma.RolePermissionDelegate<GlobalReject>;

  /**
   * `prisma.sysdiagrams`: Exposes CRUD operations for the **sysdiagrams** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sysdiagrams
    * const sysdiagrams = await prisma.sysdiagrams.findMany()
    * ```
    */
  get sysdiagrams(): Prisma.sysdiagramsDelegate<GlobalReject>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<GlobalReject>;

  /**
   * `prisma.userResetCredential`: Exposes CRUD operations for the **UserResetCredential** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserResetCredentials
    * const userResetCredentials = await prisma.userResetCredential.findMany()
    * ```
    */
  get userResetCredential(): Prisma.UserResetCredentialDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket


  /**
   * Prisma Client JS version: 4.6.1
   * Query Engine version: 694eea289a8462c80264df36757e4fdc129b1b32
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    APIAudit: 'APIAudit',
    ErrorLog: 'ErrorLog',
    ModuleMaster: 'ModuleMaster',
    ModulePermission: 'ModulePermission',
    Notification: 'Notification',
    NotificationTemplate: 'NotificationTemplate',
    PermissionMaster: 'PermissionMaster',
    RoleMaster: 'RoleMaster',
    RolePermission: 'RolePermission',
    sysdiagrams: 'sysdiagrams',
    User: 'User',
    UserResetCredential: 'UserResetCredential'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type NotificationTemplateCountOutputType
   */


  export type NotificationTemplateCountOutputType = {
    Notification: number
  }

  export type NotificationTemplateCountOutputTypeSelect = {
    Notification?: boolean
  }

  export type NotificationTemplateCountOutputTypeGetPayload<S extends boolean | null | undefined | NotificationTemplateCountOutputTypeArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? NotificationTemplateCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (NotificationTemplateCountOutputTypeArgs)
    ? NotificationTemplateCountOutputType 
    : S extends { select: any } & (NotificationTemplateCountOutputTypeArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof NotificationTemplateCountOutputType ? NotificationTemplateCountOutputType[P] : never
  } 
      : NotificationTemplateCountOutputType




  // Custom InputTypes

  /**
   * NotificationTemplateCountOutputType without action
   */
  export type NotificationTemplateCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the NotificationTemplateCountOutputType
     * 
    **/
    select?: NotificationTemplateCountOutputTypeSelect | null
  }



  /**
   * Count Type RoleMasterCountOutputType
   */


  export type RoleMasterCountOutputType = {
    User: number
  }

  export type RoleMasterCountOutputTypeSelect = {
    User?: boolean
  }

  export type RoleMasterCountOutputTypeGetPayload<S extends boolean | null | undefined | RoleMasterCountOutputTypeArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? RoleMasterCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (RoleMasterCountOutputTypeArgs)
    ? RoleMasterCountOutputType 
    : S extends { select: any } & (RoleMasterCountOutputTypeArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof RoleMasterCountOutputType ? RoleMasterCountOutputType[P] : never
  } 
      : RoleMasterCountOutputType




  // Custom InputTypes

  /**
   * RoleMasterCountOutputType without action
   */
  export type RoleMasterCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the RoleMasterCountOutputType
     * 
    **/
    select?: RoleMasterCountOutputTypeSelect | null
  }



  /**
   * Count Type UserCountOutputType
   */


  export type UserCountOutputType = {
    Notification_Notification_CreatedByToUser: number
    Notification_Notification_ModifiedByToUser: number
    NotificationTemplate_NotificationTemplate_CreatedByToUser: number
    NotificationTemplate_NotificationTemplate_ModifiedByToUser: number
    UserResetCredential_UserToUserResetCredential_UserId: number
    UserResetCredential_UserToUserResetCredential_CreatedBy: number
    UserResetCredential_UserToUserResetCredential_ModifiedBy: number
  }

  export type UserCountOutputTypeSelect = {
    Notification_Notification_CreatedByToUser?: boolean
    Notification_Notification_ModifiedByToUser?: boolean
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: boolean
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: boolean
    UserResetCredential_UserToUserResetCredential_UserId?: boolean
    UserResetCredential_UserToUserResetCredential_CreatedBy?: boolean
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: boolean
  }

  export type UserCountOutputTypeGetPayload<S extends boolean | null | undefined | UserCountOutputTypeArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UserCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UserCountOutputTypeArgs)
    ? UserCountOutputType 
    : S extends { select: any } & (UserCountOutputTypeArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof UserCountOutputType ? UserCountOutputType[P] : never
  } 
      : UserCountOutputType




  // Custom InputTypes

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     * 
    **/
    select?: UserCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model APIAudit
   */


  export type AggregateAPIAudit = {
    _count: APIAuditCountAggregateOutputType | null
    _avg: APIAuditAvgAggregateOutputType | null
    _sum: APIAuditSumAggregateOutputType | null
    _min: APIAuditMinAggregateOutputType | null
    _max: APIAuditMaxAggregateOutputType | null
  }

  export type APIAuditAvgAggregateOutputType = {
    id: number | null
  }

  export type APIAuditSumAggregateOutputType = {
    id: bigint | null
  }

  export type APIAuditMinAggregateOutputType = {
    id: bigint | null
    ClientURL: string | null
    UserEmail: string | null
    Requestobject: string | null
    Responseobject: string | null
    Startime: Date | null
    EndTime: Date | null
    AuditErrorLogId: string | null
    Controller: string | null
    Method: string | null
  }

  export type APIAuditMaxAggregateOutputType = {
    id: bigint | null
    ClientURL: string | null
    UserEmail: string | null
    Requestobject: string | null
    Responseobject: string | null
    Startime: Date | null
    EndTime: Date | null
    AuditErrorLogId: string | null
    Controller: string | null
    Method: string | null
  }

  export type APIAuditCountAggregateOutputType = {
    id: number
    ClientURL: number
    UserEmail: number
    Requestobject: number
    Responseobject: number
    Startime: number
    EndTime: number
    AuditErrorLogId: number
    Controller: number
    Method: number
    _all: number
  }


  export type APIAuditAvgAggregateInputType = {
    id?: true
  }

  export type APIAuditSumAggregateInputType = {
    id?: true
  }

  export type APIAuditMinAggregateInputType = {
    id?: true
    ClientURL?: true
    UserEmail?: true
    Requestobject?: true
    Responseobject?: true
    Startime?: true
    EndTime?: true
    AuditErrorLogId?: true
    Controller?: true
    Method?: true
  }

  export type APIAuditMaxAggregateInputType = {
    id?: true
    ClientURL?: true
    UserEmail?: true
    Requestobject?: true
    Responseobject?: true
    Startime?: true
    EndTime?: true
    AuditErrorLogId?: true
    Controller?: true
    Method?: true
  }

  export type APIAuditCountAggregateInputType = {
    id?: true
    ClientURL?: true
    UserEmail?: true
    Requestobject?: true
    Responseobject?: true
    Startime?: true
    EndTime?: true
    AuditErrorLogId?: true
    Controller?: true
    Method?: true
    _all?: true
  }

  export type APIAuditAggregateArgs = {
    /**
     * Filter which APIAudit to aggregate.
     * 
    **/
    where?: APIAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of APIAudits to fetch.
     * 
    **/
    orderBy?: Enumerable<APIAuditOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: APIAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` APIAudits from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` APIAudits.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned APIAudits
    **/
    _count?: true | APIAuditCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: APIAuditAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: APIAuditSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: APIAuditMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: APIAuditMaxAggregateInputType
  }

  export type GetAPIAuditAggregateType<T extends APIAuditAggregateArgs> = {
        [P in keyof T & keyof AggregateAPIAudit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAPIAudit[P]>
      : GetScalarType<T[P], AggregateAPIAudit[P]>
  }




  export type APIAuditGroupByArgs = {
    where?: APIAuditWhereInput
    orderBy?: Enumerable<APIAuditOrderByWithAggregationInput>
    by: Array<APIAuditScalarFieldEnum>
    having?: APIAuditScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: APIAuditCountAggregateInputType | true
    _avg?: APIAuditAvgAggregateInputType
    _sum?: APIAuditSumAggregateInputType
    _min?: APIAuditMinAggregateInputType
    _max?: APIAuditMaxAggregateInputType
  }


  export type APIAuditGroupByOutputType = {
    id: bigint
    ClientURL: string | null
    UserEmail: string | null
    Requestobject: string | null
    Responseobject: string | null
    Startime: Date | null
    EndTime: Date | null
    AuditErrorLogId: string | null
    Controller: string | null
    Method: string | null
    _count: APIAuditCountAggregateOutputType | null
    _avg: APIAuditAvgAggregateOutputType | null
    _sum: APIAuditSumAggregateOutputType | null
    _min: APIAuditMinAggregateOutputType | null
    _max: APIAuditMaxAggregateOutputType | null
  }

  type GetAPIAuditGroupByPayload<T extends APIAuditGroupByArgs> = PrismaPromise<
    Array<
      PickArray<APIAuditGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof APIAuditGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], APIAuditGroupByOutputType[P]>
            : GetScalarType<T[P], APIAuditGroupByOutputType[P]>
        }
      >
    >


  export type APIAuditSelect = {
    id?: boolean
    ClientURL?: boolean
    UserEmail?: boolean
    Requestobject?: boolean
    Responseobject?: boolean
    Startime?: boolean
    EndTime?: boolean
    AuditErrorLogId?: boolean
    Controller?: boolean
    Method?: boolean
  }


  export type APIAuditGetPayload<S extends boolean | null | undefined | APIAuditArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? APIAudit :
    S extends undefined ? never :
    S extends { include: any } & (APIAuditArgs | APIAuditFindManyArgs)
    ? APIAudit 
    : S extends { select: any } & (APIAuditArgs | APIAuditFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof APIAudit ? APIAudit[P] : never
  } 
      : APIAudit


  type APIAuditCountArgs = Merge<
    Omit<APIAuditFindManyArgs, 'select' | 'include'> & {
      select?: APIAuditCountAggregateInputType | true
    }
  >

  export interface APIAuditDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one APIAudit that matches the filter.
     * @param {APIAuditFindUniqueArgs} args - Arguments to find a APIAudit
     * @example
     * // Get one APIAudit
     * const aPIAudit = await prisma.aPIAudit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends APIAuditFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, APIAuditFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'APIAudit'> extends True ? Prisma__APIAuditClient<APIAuditGetPayload<T>> : Prisma__APIAuditClient<APIAuditGetPayload<T> | null, null>

    /**
     * Find the first APIAudit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {APIAuditFindFirstArgs} args - Arguments to find a APIAudit
     * @example
     * // Get one APIAudit
     * const aPIAudit = await prisma.aPIAudit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends APIAuditFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, APIAuditFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'APIAudit'> extends True ? Prisma__APIAuditClient<APIAuditGetPayload<T>> : Prisma__APIAuditClient<APIAuditGetPayload<T> | null, null>

    /**
     * Find zero or more APIAudits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {APIAuditFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all APIAudits
     * const aPIAudits = await prisma.aPIAudit.findMany()
     * 
     * // Get first 10 APIAudits
     * const aPIAudits = await prisma.aPIAudit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aPIAuditWithIdOnly = await prisma.aPIAudit.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends APIAuditFindManyArgs>(
      args?: SelectSubset<T, APIAuditFindManyArgs>
    ): PrismaPromise<Array<APIAuditGetPayload<T>>>

    /**
     * Create a APIAudit.
     * @param {APIAuditCreateArgs} args - Arguments to create a APIAudit.
     * @example
     * // Create one APIAudit
     * const APIAudit = await prisma.aPIAudit.create({
     *   data: {
     *     // ... data to create a APIAudit
     *   }
     * })
     * 
    **/
    create<T extends APIAuditCreateArgs>(
      args: SelectSubset<T, APIAuditCreateArgs>
    ): Prisma__APIAuditClient<APIAuditGetPayload<T>>

    /**
     * Create many APIAudits.
     *     @param {APIAuditCreateManyArgs} args - Arguments to create many APIAudits.
     *     @example
     *     // Create many APIAudits
     *     const aPIAudit = await prisma.aPIAudit.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends APIAuditCreateManyArgs>(
      args?: SelectSubset<T, APIAuditCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a APIAudit.
     * @param {APIAuditDeleteArgs} args - Arguments to delete one APIAudit.
     * @example
     * // Delete one APIAudit
     * const APIAudit = await prisma.aPIAudit.delete({
     *   where: {
     *     // ... filter to delete one APIAudit
     *   }
     * })
     * 
    **/
    delete<T extends APIAuditDeleteArgs>(
      args: SelectSubset<T, APIAuditDeleteArgs>
    ): Prisma__APIAuditClient<APIAuditGetPayload<T>>

    /**
     * Update one APIAudit.
     * @param {APIAuditUpdateArgs} args - Arguments to update one APIAudit.
     * @example
     * // Update one APIAudit
     * const aPIAudit = await prisma.aPIAudit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends APIAuditUpdateArgs>(
      args: SelectSubset<T, APIAuditUpdateArgs>
    ): Prisma__APIAuditClient<APIAuditGetPayload<T>>

    /**
     * Delete zero or more APIAudits.
     * @param {APIAuditDeleteManyArgs} args - Arguments to filter APIAudits to delete.
     * @example
     * // Delete a few APIAudits
     * const { count } = await prisma.aPIAudit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends APIAuditDeleteManyArgs>(
      args?: SelectSubset<T, APIAuditDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more APIAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {APIAuditUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many APIAudits
     * const aPIAudit = await prisma.aPIAudit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends APIAuditUpdateManyArgs>(
      args: SelectSubset<T, APIAuditUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one APIAudit.
     * @param {APIAuditUpsertArgs} args - Arguments to update or create a APIAudit.
     * @example
     * // Update or create a APIAudit
     * const aPIAudit = await prisma.aPIAudit.upsert({
     *   create: {
     *     // ... data to create a APIAudit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the APIAudit we want to update
     *   }
     * })
    **/
    upsert<T extends APIAuditUpsertArgs>(
      args: SelectSubset<T, APIAuditUpsertArgs>
    ): Prisma__APIAuditClient<APIAuditGetPayload<T>>

    /**
     * Find one APIAudit that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {APIAuditFindUniqueOrThrowArgs} args - Arguments to find a APIAudit
     * @example
     * // Get one APIAudit
     * const aPIAudit = await prisma.aPIAudit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends APIAuditFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, APIAuditFindUniqueOrThrowArgs>
    ): Prisma__APIAuditClient<APIAuditGetPayload<T>>

    /**
     * Find the first APIAudit that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {APIAuditFindFirstOrThrowArgs} args - Arguments to find a APIAudit
     * @example
     * // Get one APIAudit
     * const aPIAudit = await prisma.aPIAudit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends APIAuditFindFirstOrThrowArgs>(
      args?: SelectSubset<T, APIAuditFindFirstOrThrowArgs>
    ): Prisma__APIAuditClient<APIAuditGetPayload<T>>

    /**
     * Count the number of APIAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {APIAuditCountArgs} args - Arguments to filter APIAudits to count.
     * @example
     * // Count the number of APIAudits
     * const count = await prisma.aPIAudit.count({
     *   where: {
     *     // ... the filter for the APIAudits we want to count
     *   }
     * })
    **/
    count<T extends APIAuditCountArgs>(
      args?: Subset<T, APIAuditCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], APIAuditCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a APIAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {APIAuditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends APIAuditAggregateArgs>(args: Subset<T, APIAuditAggregateArgs>): PrismaPromise<GetAPIAuditAggregateType<T>>

    /**
     * Group by APIAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {APIAuditGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends APIAuditGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: APIAuditGroupByArgs['orderBy'] }
        : { orderBy?: APIAuditGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, APIAuditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAPIAuditGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for APIAudit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__APIAuditClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * APIAudit base type for findUnique actions
   */
  export type APIAuditFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
    /**
     * Filter, which APIAudit to fetch.
     * 
    **/
    where: APIAuditWhereUniqueInput
  }

  /**
   * APIAudit: findUnique
   */
  export interface APIAuditFindUniqueArgs extends APIAuditFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * APIAudit base type for findFirst actions
   */
  export type APIAuditFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
    /**
     * Filter, which APIAudit to fetch.
     * 
    **/
    where?: APIAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of APIAudits to fetch.
     * 
    **/
    orderBy?: Enumerable<APIAuditOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for APIAudits.
     * 
    **/
    cursor?: APIAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` APIAudits from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` APIAudits.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of APIAudits.
     * 
    **/
    distinct?: Enumerable<APIAuditScalarFieldEnum>
  }

  /**
   * APIAudit: findFirst
   */
  export interface APIAuditFindFirstArgs extends APIAuditFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * APIAudit findMany
   */
  export type APIAuditFindManyArgs = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
    /**
     * Filter, which APIAudits to fetch.
     * 
    **/
    where?: APIAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of APIAudits to fetch.
     * 
    **/
    orderBy?: Enumerable<APIAuditOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing APIAudits.
     * 
    **/
    cursor?: APIAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` APIAudits from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` APIAudits.
     * 
    **/
    skip?: number
    distinct?: Enumerable<APIAuditScalarFieldEnum>
  }


  /**
   * APIAudit create
   */
  export type APIAuditCreateArgs = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
    /**
     * The data needed to create a APIAudit.
     * 
    **/
    data: XOR<APIAuditCreateInput, APIAuditUncheckedCreateInput>
  }


  /**
   * APIAudit createMany
   */
  export type APIAuditCreateManyArgs = {
    /**
     * The data used to create many APIAudits.
     * 
    **/
    data: Enumerable<APIAuditCreateManyInput>
  }


  /**
   * APIAudit update
   */
  export type APIAuditUpdateArgs = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
    /**
     * The data needed to update a APIAudit.
     * 
    **/
    data: XOR<APIAuditUpdateInput, APIAuditUncheckedUpdateInput>
    /**
     * Choose, which APIAudit to update.
     * 
    **/
    where: APIAuditWhereUniqueInput
  }


  /**
   * APIAudit updateMany
   */
  export type APIAuditUpdateManyArgs = {
    /**
     * The data used to update APIAudits.
     * 
    **/
    data: XOR<APIAuditUpdateManyMutationInput, APIAuditUncheckedUpdateManyInput>
    /**
     * Filter which APIAudits to update
     * 
    **/
    where?: APIAuditWhereInput
  }


  /**
   * APIAudit upsert
   */
  export type APIAuditUpsertArgs = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
    /**
     * The filter to search for the APIAudit to update in case it exists.
     * 
    **/
    where: APIAuditWhereUniqueInput
    /**
     * In case the APIAudit found by the `where` argument doesn't exist, create a new APIAudit with this data.
     * 
    **/
    create: XOR<APIAuditCreateInput, APIAuditUncheckedCreateInput>
    /**
     * In case the APIAudit was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<APIAuditUpdateInput, APIAuditUncheckedUpdateInput>
  }


  /**
   * APIAudit delete
   */
  export type APIAuditDeleteArgs = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
    /**
     * Filter which APIAudit to delete.
     * 
    **/
    where: APIAuditWhereUniqueInput
  }


  /**
   * APIAudit deleteMany
   */
  export type APIAuditDeleteManyArgs = {
    /**
     * Filter which APIAudits to delete
     * 
    **/
    where?: APIAuditWhereInput
  }


  /**
   * APIAudit: findUniqueOrThrow
   */
  export type APIAuditFindUniqueOrThrowArgs = APIAuditFindUniqueArgsBase
      

  /**
   * APIAudit: findFirstOrThrow
   */
  export type APIAuditFindFirstOrThrowArgs = APIAuditFindFirstArgsBase
      

  /**
   * APIAudit without action
   */
  export type APIAuditArgs = {
    /**
     * Select specific fields to fetch from the APIAudit
     * 
    **/
    select?: APIAuditSelect | null
  }



  /**
   * Model ErrorLog
   */


  export type AggregateErrorLog = {
    _count: ErrorLogCountAggregateOutputType | null
    _avg: ErrorLogAvgAggregateOutputType | null
    _sum: ErrorLogSumAggregateOutputType | null
    _min: ErrorLogMinAggregateOutputType | null
    _max: ErrorLogMaxAggregateOutputType | null
  }

  export type ErrorLogAvgAggregateOutputType = {
    ErrorLogId: number | null
    UserId: number | null
  }

  export type ErrorLogSumAggregateOutputType = {
    ErrorLogId: number | null
    UserId: number | null
  }

  export type ErrorLogMinAggregateOutputType = {
    ErrorLogId: number | null
    UserId: number | null
    Message: string | null
    StackTrace: string | null
    IPAddress: string | null
    TimeStamp: Date | null
    Event: string | null
    UserName: string | null
    AuditErrorLogId: string | null
  }

  export type ErrorLogMaxAggregateOutputType = {
    ErrorLogId: number | null
    UserId: number | null
    Message: string | null
    StackTrace: string | null
    IPAddress: string | null
    TimeStamp: Date | null
    Event: string | null
    UserName: string | null
    AuditErrorLogId: string | null
  }

  export type ErrorLogCountAggregateOutputType = {
    ErrorLogId: number
    UserId: number
    Message: number
    StackTrace: number
    IPAddress: number
    TimeStamp: number
    Event: number
    UserName: number
    AuditErrorLogId: number
    _all: number
  }


  export type ErrorLogAvgAggregateInputType = {
    ErrorLogId?: true
    UserId?: true
  }

  export type ErrorLogSumAggregateInputType = {
    ErrorLogId?: true
    UserId?: true
  }

  export type ErrorLogMinAggregateInputType = {
    ErrorLogId?: true
    UserId?: true
    Message?: true
    StackTrace?: true
    IPAddress?: true
    TimeStamp?: true
    Event?: true
    UserName?: true
    AuditErrorLogId?: true
  }

  export type ErrorLogMaxAggregateInputType = {
    ErrorLogId?: true
    UserId?: true
    Message?: true
    StackTrace?: true
    IPAddress?: true
    TimeStamp?: true
    Event?: true
    UserName?: true
    AuditErrorLogId?: true
  }

  export type ErrorLogCountAggregateInputType = {
    ErrorLogId?: true
    UserId?: true
    Message?: true
    StackTrace?: true
    IPAddress?: true
    TimeStamp?: true
    Event?: true
    UserName?: true
    AuditErrorLogId?: true
    _all?: true
  }

  export type ErrorLogAggregateArgs = {
    /**
     * Filter which ErrorLog to aggregate.
     * 
    **/
    where?: ErrorLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ErrorLogs to fetch.
     * 
    **/
    orderBy?: Enumerable<ErrorLogOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ErrorLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ErrorLogs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ErrorLogs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ErrorLogs
    **/
    _count?: true | ErrorLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ErrorLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ErrorLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ErrorLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ErrorLogMaxAggregateInputType
  }

  export type GetErrorLogAggregateType<T extends ErrorLogAggregateArgs> = {
        [P in keyof T & keyof AggregateErrorLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateErrorLog[P]>
      : GetScalarType<T[P], AggregateErrorLog[P]>
  }




  export type ErrorLogGroupByArgs = {
    where?: ErrorLogWhereInput
    orderBy?: Enumerable<ErrorLogOrderByWithAggregationInput>
    by: Array<ErrorLogScalarFieldEnum>
    having?: ErrorLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ErrorLogCountAggregateInputType | true
    _avg?: ErrorLogAvgAggregateInputType
    _sum?: ErrorLogSumAggregateInputType
    _min?: ErrorLogMinAggregateInputType
    _max?: ErrorLogMaxAggregateInputType
  }


  export type ErrorLogGroupByOutputType = {
    ErrorLogId: number
    UserId: number
    Message: string
    StackTrace: string
    IPAddress: string
    TimeStamp: Date
    Event: string
    UserName: string
    AuditErrorLogId: string | null
    _count: ErrorLogCountAggregateOutputType | null
    _avg: ErrorLogAvgAggregateOutputType | null
    _sum: ErrorLogSumAggregateOutputType | null
    _min: ErrorLogMinAggregateOutputType | null
    _max: ErrorLogMaxAggregateOutputType | null
  }

  type GetErrorLogGroupByPayload<T extends ErrorLogGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ErrorLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ErrorLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ErrorLogGroupByOutputType[P]>
            : GetScalarType<T[P], ErrorLogGroupByOutputType[P]>
        }
      >
    >


  export type ErrorLogSelect = {
    ErrorLogId?: boolean
    UserId?: boolean
    Message?: boolean
    StackTrace?: boolean
    IPAddress?: boolean
    TimeStamp?: boolean
    Event?: boolean
    UserName?: boolean
    AuditErrorLogId?: boolean
  }


  export type ErrorLogGetPayload<S extends boolean | null | undefined | ErrorLogArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ErrorLog :
    S extends undefined ? never :
    S extends { include: any } & (ErrorLogArgs | ErrorLogFindManyArgs)
    ? ErrorLog 
    : S extends { select: any } & (ErrorLogArgs | ErrorLogFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof ErrorLog ? ErrorLog[P] : never
  } 
      : ErrorLog


  type ErrorLogCountArgs = Merge<
    Omit<ErrorLogFindManyArgs, 'select' | 'include'> & {
      select?: ErrorLogCountAggregateInputType | true
    }
  >

  export interface ErrorLogDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ErrorLog that matches the filter.
     * @param {ErrorLogFindUniqueArgs} args - Arguments to find a ErrorLog
     * @example
     * // Get one ErrorLog
     * const errorLog = await prisma.errorLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ErrorLogFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ErrorLogFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ErrorLog'> extends True ? Prisma__ErrorLogClient<ErrorLogGetPayload<T>> : Prisma__ErrorLogClient<ErrorLogGetPayload<T> | null, null>

    /**
     * Find the first ErrorLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ErrorLogFindFirstArgs} args - Arguments to find a ErrorLog
     * @example
     * // Get one ErrorLog
     * const errorLog = await prisma.errorLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ErrorLogFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ErrorLogFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ErrorLog'> extends True ? Prisma__ErrorLogClient<ErrorLogGetPayload<T>> : Prisma__ErrorLogClient<ErrorLogGetPayload<T> | null, null>

    /**
     * Find zero or more ErrorLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ErrorLogFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ErrorLogs
     * const errorLogs = await prisma.errorLog.findMany()
     * 
     * // Get first 10 ErrorLogs
     * const errorLogs = await prisma.errorLog.findMany({ take: 10 })
     * 
     * // Only select the `ErrorLogId`
     * const errorLogWithErrorLogIdOnly = await prisma.errorLog.findMany({ select: { ErrorLogId: true } })
     * 
    **/
    findMany<T extends ErrorLogFindManyArgs>(
      args?: SelectSubset<T, ErrorLogFindManyArgs>
    ): PrismaPromise<Array<ErrorLogGetPayload<T>>>

    /**
     * Create a ErrorLog.
     * @param {ErrorLogCreateArgs} args - Arguments to create a ErrorLog.
     * @example
     * // Create one ErrorLog
     * const ErrorLog = await prisma.errorLog.create({
     *   data: {
     *     // ... data to create a ErrorLog
     *   }
     * })
     * 
    **/
    create<T extends ErrorLogCreateArgs>(
      args: SelectSubset<T, ErrorLogCreateArgs>
    ): Prisma__ErrorLogClient<ErrorLogGetPayload<T>>

    /**
     * Create many ErrorLogs.
     *     @param {ErrorLogCreateManyArgs} args - Arguments to create many ErrorLogs.
     *     @example
     *     // Create many ErrorLogs
     *     const errorLog = await prisma.errorLog.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ErrorLogCreateManyArgs>(
      args?: SelectSubset<T, ErrorLogCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ErrorLog.
     * @param {ErrorLogDeleteArgs} args - Arguments to delete one ErrorLog.
     * @example
     * // Delete one ErrorLog
     * const ErrorLog = await prisma.errorLog.delete({
     *   where: {
     *     // ... filter to delete one ErrorLog
     *   }
     * })
     * 
    **/
    delete<T extends ErrorLogDeleteArgs>(
      args: SelectSubset<T, ErrorLogDeleteArgs>
    ): Prisma__ErrorLogClient<ErrorLogGetPayload<T>>

    /**
     * Update one ErrorLog.
     * @param {ErrorLogUpdateArgs} args - Arguments to update one ErrorLog.
     * @example
     * // Update one ErrorLog
     * const errorLog = await prisma.errorLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ErrorLogUpdateArgs>(
      args: SelectSubset<T, ErrorLogUpdateArgs>
    ): Prisma__ErrorLogClient<ErrorLogGetPayload<T>>

    /**
     * Delete zero or more ErrorLogs.
     * @param {ErrorLogDeleteManyArgs} args - Arguments to filter ErrorLogs to delete.
     * @example
     * // Delete a few ErrorLogs
     * const { count } = await prisma.errorLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ErrorLogDeleteManyArgs>(
      args?: SelectSubset<T, ErrorLogDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ErrorLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ErrorLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ErrorLogs
     * const errorLog = await prisma.errorLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ErrorLogUpdateManyArgs>(
      args: SelectSubset<T, ErrorLogUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ErrorLog.
     * @param {ErrorLogUpsertArgs} args - Arguments to update or create a ErrorLog.
     * @example
     * // Update or create a ErrorLog
     * const errorLog = await prisma.errorLog.upsert({
     *   create: {
     *     // ... data to create a ErrorLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ErrorLog we want to update
     *   }
     * })
    **/
    upsert<T extends ErrorLogUpsertArgs>(
      args: SelectSubset<T, ErrorLogUpsertArgs>
    ): Prisma__ErrorLogClient<ErrorLogGetPayload<T>>

    /**
     * Find one ErrorLog that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ErrorLogFindUniqueOrThrowArgs} args - Arguments to find a ErrorLog
     * @example
     * // Get one ErrorLog
     * const errorLog = await prisma.errorLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ErrorLogFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ErrorLogFindUniqueOrThrowArgs>
    ): Prisma__ErrorLogClient<ErrorLogGetPayload<T>>

    /**
     * Find the first ErrorLog that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ErrorLogFindFirstOrThrowArgs} args - Arguments to find a ErrorLog
     * @example
     * // Get one ErrorLog
     * const errorLog = await prisma.errorLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ErrorLogFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ErrorLogFindFirstOrThrowArgs>
    ): Prisma__ErrorLogClient<ErrorLogGetPayload<T>>

    /**
     * Count the number of ErrorLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ErrorLogCountArgs} args - Arguments to filter ErrorLogs to count.
     * @example
     * // Count the number of ErrorLogs
     * const count = await prisma.errorLog.count({
     *   where: {
     *     // ... the filter for the ErrorLogs we want to count
     *   }
     * })
    **/
    count<T extends ErrorLogCountArgs>(
      args?: Subset<T, ErrorLogCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ErrorLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ErrorLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ErrorLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ErrorLogAggregateArgs>(args: Subset<T, ErrorLogAggregateArgs>): PrismaPromise<GetErrorLogAggregateType<T>>

    /**
     * Group by ErrorLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ErrorLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ErrorLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ErrorLogGroupByArgs['orderBy'] }
        : { orderBy?: ErrorLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ErrorLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetErrorLogGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ErrorLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ErrorLogClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ErrorLog base type for findUnique actions
   */
  export type ErrorLogFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
    /**
     * Filter, which ErrorLog to fetch.
     * 
    **/
    where: ErrorLogWhereUniqueInput
  }

  /**
   * ErrorLog: findUnique
   */
  export interface ErrorLogFindUniqueArgs extends ErrorLogFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ErrorLog base type for findFirst actions
   */
  export type ErrorLogFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
    /**
     * Filter, which ErrorLog to fetch.
     * 
    **/
    where?: ErrorLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ErrorLogs to fetch.
     * 
    **/
    orderBy?: Enumerable<ErrorLogOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ErrorLogs.
     * 
    **/
    cursor?: ErrorLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ErrorLogs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ErrorLogs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ErrorLogs.
     * 
    **/
    distinct?: Enumerable<ErrorLogScalarFieldEnum>
  }

  /**
   * ErrorLog: findFirst
   */
  export interface ErrorLogFindFirstArgs extends ErrorLogFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ErrorLog findMany
   */
  export type ErrorLogFindManyArgs = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
    /**
     * Filter, which ErrorLogs to fetch.
     * 
    **/
    where?: ErrorLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ErrorLogs to fetch.
     * 
    **/
    orderBy?: Enumerable<ErrorLogOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ErrorLogs.
     * 
    **/
    cursor?: ErrorLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ErrorLogs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ErrorLogs.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ErrorLogScalarFieldEnum>
  }


  /**
   * ErrorLog create
   */
  export type ErrorLogCreateArgs = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
    /**
     * The data needed to create a ErrorLog.
     * 
    **/
    data: XOR<ErrorLogCreateInput, ErrorLogUncheckedCreateInput>
  }


  /**
   * ErrorLog createMany
   */
  export type ErrorLogCreateManyArgs = {
    /**
     * The data used to create many ErrorLogs.
     * 
    **/
    data: Enumerable<ErrorLogCreateManyInput>
  }


  /**
   * ErrorLog update
   */
  export type ErrorLogUpdateArgs = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
    /**
     * The data needed to update a ErrorLog.
     * 
    **/
    data: XOR<ErrorLogUpdateInput, ErrorLogUncheckedUpdateInput>
    /**
     * Choose, which ErrorLog to update.
     * 
    **/
    where: ErrorLogWhereUniqueInput
  }


  /**
   * ErrorLog updateMany
   */
  export type ErrorLogUpdateManyArgs = {
    /**
     * The data used to update ErrorLogs.
     * 
    **/
    data: XOR<ErrorLogUpdateManyMutationInput, ErrorLogUncheckedUpdateManyInput>
    /**
     * Filter which ErrorLogs to update
     * 
    **/
    where?: ErrorLogWhereInput
  }


  /**
   * ErrorLog upsert
   */
  export type ErrorLogUpsertArgs = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
    /**
     * The filter to search for the ErrorLog to update in case it exists.
     * 
    **/
    where: ErrorLogWhereUniqueInput
    /**
     * In case the ErrorLog found by the `where` argument doesn't exist, create a new ErrorLog with this data.
     * 
    **/
    create: XOR<ErrorLogCreateInput, ErrorLogUncheckedCreateInput>
    /**
     * In case the ErrorLog was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ErrorLogUpdateInput, ErrorLogUncheckedUpdateInput>
  }


  /**
   * ErrorLog delete
   */
  export type ErrorLogDeleteArgs = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
    /**
     * Filter which ErrorLog to delete.
     * 
    **/
    where: ErrorLogWhereUniqueInput
  }


  /**
   * ErrorLog deleteMany
   */
  export type ErrorLogDeleteManyArgs = {
    /**
     * Filter which ErrorLogs to delete
     * 
    **/
    where?: ErrorLogWhereInput
  }


  /**
   * ErrorLog: findUniqueOrThrow
   */
  export type ErrorLogFindUniqueOrThrowArgs = ErrorLogFindUniqueArgsBase
      

  /**
   * ErrorLog: findFirstOrThrow
   */
  export type ErrorLogFindFirstOrThrowArgs = ErrorLogFindFirstArgsBase
      

  /**
   * ErrorLog without action
   */
  export type ErrorLogArgs = {
    /**
     * Select specific fields to fetch from the ErrorLog
     * 
    **/
    select?: ErrorLogSelect | null
  }



  /**
   * Model ModuleMaster
   */


  export type AggregateModuleMaster = {
    _count: ModuleMasterCountAggregateOutputType | null
    _avg: ModuleMasterAvgAggregateOutputType | null
    _sum: ModuleMasterSumAggregateOutputType | null
    _min: ModuleMasterMinAggregateOutputType | null
    _max: ModuleMasterMaxAggregateOutputType | null
  }

  export type ModuleMasterAvgAggregateOutputType = {
    Id: number | null
    ParentId: number | null
    OrderNo: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type ModuleMasterSumAggregateOutputType = {
    Id: number | null
    ParentId: number | null
    OrderNo: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type ModuleMasterMinAggregateOutputType = {
    Id: number | null
    ParentId: number | null
    Name: string | null
    DisplayName: string | null
    URL: string | null
    OrderNo: number | null
    Description: string | null
    IsActive: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
    IsParentMenu: boolean | null
    MenuIconClass: string | null
  }

  export type ModuleMasterMaxAggregateOutputType = {
    Id: number | null
    ParentId: number | null
    Name: string | null
    DisplayName: string | null
    URL: string | null
    OrderNo: number | null
    Description: string | null
    IsActive: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
    IsParentMenu: boolean | null
    MenuIconClass: string | null
  }

  export type ModuleMasterCountAggregateOutputType = {
    Id: number
    ParentId: number
    Name: number
    DisplayName: number
    URL: number
    OrderNo: number
    Description: number
    IsActive: number
    CreatedDate: number
    CreatedBy: number
    ModifiedDate: number
    ModifiedBy: number
    IsParentMenu: number
    MenuIconClass: number
    _all: number
  }


  export type ModuleMasterAvgAggregateInputType = {
    Id?: true
    ParentId?: true
    OrderNo?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type ModuleMasterSumAggregateInputType = {
    Id?: true
    ParentId?: true
    OrderNo?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type ModuleMasterMinAggregateInputType = {
    Id?: true
    ParentId?: true
    Name?: true
    DisplayName?: true
    URL?: true
    OrderNo?: true
    Description?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
    IsParentMenu?: true
    MenuIconClass?: true
  }

  export type ModuleMasterMaxAggregateInputType = {
    Id?: true
    ParentId?: true
    Name?: true
    DisplayName?: true
    URL?: true
    OrderNo?: true
    Description?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
    IsParentMenu?: true
    MenuIconClass?: true
  }

  export type ModuleMasterCountAggregateInputType = {
    Id?: true
    ParentId?: true
    Name?: true
    DisplayName?: true
    URL?: true
    OrderNo?: true
    Description?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
    IsParentMenu?: true
    MenuIconClass?: true
    _all?: true
  }

  export type ModuleMasterAggregateArgs = {
    /**
     * Filter which ModuleMaster to aggregate.
     * 
    **/
    where?: ModuleMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModuleMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<ModuleMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ModuleMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModuleMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModuleMasters.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ModuleMasters
    **/
    _count?: true | ModuleMasterCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModuleMasterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModuleMasterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModuleMasterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModuleMasterMaxAggregateInputType
  }

  export type GetModuleMasterAggregateType<T extends ModuleMasterAggregateArgs> = {
        [P in keyof T & keyof AggregateModuleMaster]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModuleMaster[P]>
      : GetScalarType<T[P], AggregateModuleMaster[P]>
  }




  export type ModuleMasterGroupByArgs = {
    where?: ModuleMasterWhereInput
    orderBy?: Enumerable<ModuleMasterOrderByWithAggregationInput>
    by: Array<ModuleMasterScalarFieldEnum>
    having?: ModuleMasterScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModuleMasterCountAggregateInputType | true
    _avg?: ModuleMasterAvgAggregateInputType
    _sum?: ModuleMasterSumAggregateInputType
    _min?: ModuleMasterMinAggregateInputType
    _max?: ModuleMasterMaxAggregateInputType
  }


  export type ModuleMasterGroupByOutputType = {
    Id: number
    ParentId: number
    Name: string
    DisplayName: string
    URL: string | null
    OrderNo: number
    Description: string | null
    IsActive: boolean
    CreatedDate: Date
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
    IsParentMenu: boolean | null
    MenuIconClass: string | null
    _count: ModuleMasterCountAggregateOutputType | null
    _avg: ModuleMasterAvgAggregateOutputType | null
    _sum: ModuleMasterSumAggregateOutputType | null
    _min: ModuleMasterMinAggregateOutputType | null
    _max: ModuleMasterMaxAggregateOutputType | null
  }

  type GetModuleMasterGroupByPayload<T extends ModuleMasterGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ModuleMasterGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModuleMasterGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModuleMasterGroupByOutputType[P]>
            : GetScalarType<T[P], ModuleMasterGroupByOutputType[P]>
        }
      >
    >


  export type ModuleMasterSelect = {
    Id?: boolean
    ParentId?: boolean
    Name?: boolean
    DisplayName?: boolean
    URL?: boolean
    OrderNo?: boolean
    Description?: boolean
    IsActive?: boolean
    CreatedDate?: boolean
    CreatedBy?: boolean
    ModifiedDate?: boolean
    ModifiedBy?: boolean
    IsParentMenu?: boolean
    MenuIconClass?: boolean
  }


  export type ModuleMasterGetPayload<S extends boolean | null | undefined | ModuleMasterArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ModuleMaster :
    S extends undefined ? never :
    S extends { include: any } & (ModuleMasterArgs | ModuleMasterFindManyArgs)
    ? ModuleMaster 
    : S extends { select: any } & (ModuleMasterArgs | ModuleMasterFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof ModuleMaster ? ModuleMaster[P] : never
  } 
      : ModuleMaster


  type ModuleMasterCountArgs = Merge<
    Omit<ModuleMasterFindManyArgs, 'select' | 'include'> & {
      select?: ModuleMasterCountAggregateInputType | true
    }
  >

  export interface ModuleMasterDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ModuleMaster that matches the filter.
     * @param {ModuleMasterFindUniqueArgs} args - Arguments to find a ModuleMaster
     * @example
     * // Get one ModuleMaster
     * const moduleMaster = await prisma.moduleMaster.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ModuleMasterFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ModuleMasterFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ModuleMaster'> extends True ? Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>> : Prisma__ModuleMasterClient<ModuleMasterGetPayload<T> | null, null>

    /**
     * Find the first ModuleMaster that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleMasterFindFirstArgs} args - Arguments to find a ModuleMaster
     * @example
     * // Get one ModuleMaster
     * const moduleMaster = await prisma.moduleMaster.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ModuleMasterFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ModuleMasterFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ModuleMaster'> extends True ? Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>> : Prisma__ModuleMasterClient<ModuleMasterGetPayload<T> | null, null>

    /**
     * Find zero or more ModuleMasters that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleMasterFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModuleMasters
     * const moduleMasters = await prisma.moduleMaster.findMany()
     * 
     * // Get first 10 ModuleMasters
     * const moduleMasters = await prisma.moduleMaster.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const moduleMasterWithIdOnly = await prisma.moduleMaster.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends ModuleMasterFindManyArgs>(
      args?: SelectSubset<T, ModuleMasterFindManyArgs>
    ): PrismaPromise<Array<ModuleMasterGetPayload<T>>>

    /**
     * Create a ModuleMaster.
     * @param {ModuleMasterCreateArgs} args - Arguments to create a ModuleMaster.
     * @example
     * // Create one ModuleMaster
     * const ModuleMaster = await prisma.moduleMaster.create({
     *   data: {
     *     // ... data to create a ModuleMaster
     *   }
     * })
     * 
    **/
    create<T extends ModuleMasterCreateArgs>(
      args: SelectSubset<T, ModuleMasterCreateArgs>
    ): Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>>

    /**
     * Create many ModuleMasters.
     *     @param {ModuleMasterCreateManyArgs} args - Arguments to create many ModuleMasters.
     *     @example
     *     // Create many ModuleMasters
     *     const moduleMaster = await prisma.moduleMaster.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ModuleMasterCreateManyArgs>(
      args?: SelectSubset<T, ModuleMasterCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ModuleMaster.
     * @param {ModuleMasterDeleteArgs} args - Arguments to delete one ModuleMaster.
     * @example
     * // Delete one ModuleMaster
     * const ModuleMaster = await prisma.moduleMaster.delete({
     *   where: {
     *     // ... filter to delete one ModuleMaster
     *   }
     * })
     * 
    **/
    delete<T extends ModuleMasterDeleteArgs>(
      args: SelectSubset<T, ModuleMasterDeleteArgs>
    ): Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>>

    /**
     * Update one ModuleMaster.
     * @param {ModuleMasterUpdateArgs} args - Arguments to update one ModuleMaster.
     * @example
     * // Update one ModuleMaster
     * const moduleMaster = await prisma.moduleMaster.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ModuleMasterUpdateArgs>(
      args: SelectSubset<T, ModuleMasterUpdateArgs>
    ): Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>>

    /**
     * Delete zero or more ModuleMasters.
     * @param {ModuleMasterDeleteManyArgs} args - Arguments to filter ModuleMasters to delete.
     * @example
     * // Delete a few ModuleMasters
     * const { count } = await prisma.moduleMaster.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ModuleMasterDeleteManyArgs>(
      args?: SelectSubset<T, ModuleMasterDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModuleMasters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleMasterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModuleMasters
     * const moduleMaster = await prisma.moduleMaster.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ModuleMasterUpdateManyArgs>(
      args: SelectSubset<T, ModuleMasterUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ModuleMaster.
     * @param {ModuleMasterUpsertArgs} args - Arguments to update or create a ModuleMaster.
     * @example
     * // Update or create a ModuleMaster
     * const moduleMaster = await prisma.moduleMaster.upsert({
     *   create: {
     *     // ... data to create a ModuleMaster
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModuleMaster we want to update
     *   }
     * })
    **/
    upsert<T extends ModuleMasterUpsertArgs>(
      args: SelectSubset<T, ModuleMasterUpsertArgs>
    ): Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>>

    /**
     * Find one ModuleMaster that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ModuleMasterFindUniqueOrThrowArgs} args - Arguments to find a ModuleMaster
     * @example
     * // Get one ModuleMaster
     * const moduleMaster = await prisma.moduleMaster.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ModuleMasterFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ModuleMasterFindUniqueOrThrowArgs>
    ): Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>>

    /**
     * Find the first ModuleMaster that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleMasterFindFirstOrThrowArgs} args - Arguments to find a ModuleMaster
     * @example
     * // Get one ModuleMaster
     * const moduleMaster = await prisma.moduleMaster.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ModuleMasterFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ModuleMasterFindFirstOrThrowArgs>
    ): Prisma__ModuleMasterClient<ModuleMasterGetPayload<T>>

    /**
     * Count the number of ModuleMasters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleMasterCountArgs} args - Arguments to filter ModuleMasters to count.
     * @example
     * // Count the number of ModuleMasters
     * const count = await prisma.moduleMaster.count({
     *   where: {
     *     // ... the filter for the ModuleMasters we want to count
     *   }
     * })
    **/
    count<T extends ModuleMasterCountArgs>(
      args?: Subset<T, ModuleMasterCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModuleMasterCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModuleMaster.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleMasterAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModuleMasterAggregateArgs>(args: Subset<T, ModuleMasterAggregateArgs>): PrismaPromise<GetModuleMasterAggregateType<T>>

    /**
     * Group by ModuleMaster.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModuleMasterGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModuleMasterGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModuleMasterGroupByArgs['orderBy'] }
        : { orderBy?: ModuleMasterGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModuleMasterGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModuleMasterGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ModuleMaster.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ModuleMasterClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ModuleMaster base type for findUnique actions
   */
  export type ModuleMasterFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
    /**
     * Filter, which ModuleMaster to fetch.
     * 
    **/
    where: ModuleMasterWhereUniqueInput
  }

  /**
   * ModuleMaster: findUnique
   */
  export interface ModuleMasterFindUniqueArgs extends ModuleMasterFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ModuleMaster base type for findFirst actions
   */
  export type ModuleMasterFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
    /**
     * Filter, which ModuleMaster to fetch.
     * 
    **/
    where?: ModuleMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModuleMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<ModuleMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModuleMasters.
     * 
    **/
    cursor?: ModuleMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModuleMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModuleMasters.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModuleMasters.
     * 
    **/
    distinct?: Enumerable<ModuleMasterScalarFieldEnum>
  }

  /**
   * ModuleMaster: findFirst
   */
  export interface ModuleMasterFindFirstArgs extends ModuleMasterFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ModuleMaster findMany
   */
  export type ModuleMasterFindManyArgs = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
    /**
     * Filter, which ModuleMasters to fetch.
     * 
    **/
    where?: ModuleMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModuleMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<ModuleMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ModuleMasters.
     * 
    **/
    cursor?: ModuleMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModuleMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModuleMasters.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ModuleMasterScalarFieldEnum>
  }


  /**
   * ModuleMaster create
   */
  export type ModuleMasterCreateArgs = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
    /**
     * The data needed to create a ModuleMaster.
     * 
    **/
    data: XOR<ModuleMasterCreateInput, ModuleMasterUncheckedCreateInput>
  }


  /**
   * ModuleMaster createMany
   */
  export type ModuleMasterCreateManyArgs = {
    /**
     * The data used to create many ModuleMasters.
     * 
    **/
    data: Enumerable<ModuleMasterCreateManyInput>
  }


  /**
   * ModuleMaster update
   */
  export type ModuleMasterUpdateArgs = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
    /**
     * The data needed to update a ModuleMaster.
     * 
    **/
    data: XOR<ModuleMasterUpdateInput, ModuleMasterUncheckedUpdateInput>
    /**
     * Choose, which ModuleMaster to update.
     * 
    **/
    where: ModuleMasterWhereUniqueInput
  }


  /**
   * ModuleMaster updateMany
   */
  export type ModuleMasterUpdateManyArgs = {
    /**
     * The data used to update ModuleMasters.
     * 
    **/
    data: XOR<ModuleMasterUpdateManyMutationInput, ModuleMasterUncheckedUpdateManyInput>
    /**
     * Filter which ModuleMasters to update
     * 
    **/
    where?: ModuleMasterWhereInput
  }


  /**
   * ModuleMaster upsert
   */
  export type ModuleMasterUpsertArgs = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
    /**
     * The filter to search for the ModuleMaster to update in case it exists.
     * 
    **/
    where: ModuleMasterWhereUniqueInput
    /**
     * In case the ModuleMaster found by the `where` argument doesn't exist, create a new ModuleMaster with this data.
     * 
    **/
    create: XOR<ModuleMasterCreateInput, ModuleMasterUncheckedCreateInput>
    /**
     * In case the ModuleMaster was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ModuleMasterUpdateInput, ModuleMasterUncheckedUpdateInput>
  }


  /**
   * ModuleMaster delete
   */
  export type ModuleMasterDeleteArgs = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
    /**
     * Filter which ModuleMaster to delete.
     * 
    **/
    where: ModuleMasterWhereUniqueInput
  }


  /**
   * ModuleMaster deleteMany
   */
  export type ModuleMasterDeleteManyArgs = {
    /**
     * Filter which ModuleMasters to delete
     * 
    **/
    where?: ModuleMasterWhereInput
  }


  /**
   * ModuleMaster: findUniqueOrThrow
   */
  export type ModuleMasterFindUniqueOrThrowArgs = ModuleMasterFindUniqueArgsBase
      

  /**
   * ModuleMaster: findFirstOrThrow
   */
  export type ModuleMasterFindFirstOrThrowArgs = ModuleMasterFindFirstArgsBase
      

  /**
   * ModuleMaster without action
   */
  export type ModuleMasterArgs = {
    /**
     * Select specific fields to fetch from the ModuleMaster
     * 
    **/
    select?: ModuleMasterSelect | null
  }



  /**
   * Model ModulePermission
   */


  export type AggregateModulePermission = {
    _count: ModulePermissionCountAggregateOutputType | null
    _avg: ModulePermissionAvgAggregateOutputType | null
    _sum: ModulePermissionSumAggregateOutputType | null
    _min: ModulePermissionMinAggregateOutputType | null
    _max: ModulePermissionMaxAggregateOutputType | null
  }

  export type ModulePermissionAvgAggregateOutputType = {
    PermissionId: number | null
    ModuleId: number | null
    CreatedBy: number | null
  }

  export type ModulePermissionSumAggregateOutputType = {
    PermissionId: number | null
    ModuleId: number | null
    CreatedBy: number | null
  }

  export type ModulePermissionMinAggregateOutputType = {
    PermissionId: number | null
    ModuleId: number | null
    IsDefaultTrue: boolean | null
    IsActive: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
  }

  export type ModulePermissionMaxAggregateOutputType = {
    PermissionId: number | null
    ModuleId: number | null
    IsDefaultTrue: boolean | null
    IsActive: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
  }

  export type ModulePermissionCountAggregateOutputType = {
    PermissionId: number
    ModuleId: number
    IsDefaultTrue: number
    IsActive: number
    CreatedDate: number
    CreatedBy: number
    _all: number
  }


  export type ModulePermissionAvgAggregateInputType = {
    PermissionId?: true
    ModuleId?: true
    CreatedBy?: true
  }

  export type ModulePermissionSumAggregateInputType = {
    PermissionId?: true
    ModuleId?: true
    CreatedBy?: true
  }

  export type ModulePermissionMinAggregateInputType = {
    PermissionId?: true
    ModuleId?: true
    IsDefaultTrue?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
  }

  export type ModulePermissionMaxAggregateInputType = {
    PermissionId?: true
    ModuleId?: true
    IsDefaultTrue?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
  }

  export type ModulePermissionCountAggregateInputType = {
    PermissionId?: true
    ModuleId?: true
    IsDefaultTrue?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
    _all?: true
  }

  export type ModulePermissionAggregateArgs = {
    /**
     * Filter which ModulePermission to aggregate.
     * 
    **/
    where?: ModulePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModulePermissions to fetch.
     * 
    **/
    orderBy?: Enumerable<ModulePermissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ModulePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModulePermissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModulePermissions.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ModulePermissions
    **/
    _count?: true | ModulePermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModulePermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModulePermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModulePermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModulePermissionMaxAggregateInputType
  }

  export type GetModulePermissionAggregateType<T extends ModulePermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateModulePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModulePermission[P]>
      : GetScalarType<T[P], AggregateModulePermission[P]>
  }




  export type ModulePermissionGroupByArgs = {
    where?: ModulePermissionWhereInput
    orderBy?: Enumerable<ModulePermissionOrderByWithAggregationInput>
    by: Array<ModulePermissionScalarFieldEnum>
    having?: ModulePermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModulePermissionCountAggregateInputType | true
    _avg?: ModulePermissionAvgAggregateInputType
    _sum?: ModulePermissionSumAggregateInputType
    _min?: ModulePermissionMinAggregateInputType
    _max?: ModulePermissionMaxAggregateInputType
  }


  export type ModulePermissionGroupByOutputType = {
    PermissionId: number
    ModuleId: number
    IsDefaultTrue: boolean
    IsActive: boolean
    CreatedDate: Date
    CreatedBy: number
    _count: ModulePermissionCountAggregateOutputType | null
    _avg: ModulePermissionAvgAggregateOutputType | null
    _sum: ModulePermissionSumAggregateOutputType | null
    _min: ModulePermissionMinAggregateOutputType | null
    _max: ModulePermissionMaxAggregateOutputType | null
  }

  type GetModulePermissionGroupByPayload<T extends ModulePermissionGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ModulePermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModulePermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModulePermissionGroupByOutputType[P]>
            : GetScalarType<T[P], ModulePermissionGroupByOutputType[P]>
        }
      >
    >


  export type ModulePermissionSelect = {
    PermissionId?: boolean
    ModuleId?: boolean
    IsDefaultTrue?: boolean
    IsActive?: boolean
    CreatedDate?: boolean
    CreatedBy?: boolean
  }


  export type ModulePermissionGetPayload<S extends boolean | null | undefined | ModulePermissionArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ModulePermission :
    S extends undefined ? never :
    S extends { include: any } & (ModulePermissionArgs | ModulePermissionFindManyArgs)
    ? ModulePermission 
    : S extends { select: any } & (ModulePermissionArgs | ModulePermissionFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof ModulePermission ? ModulePermission[P] : never
  } 
      : ModulePermission


  type ModulePermissionCountArgs = Merge<
    Omit<ModulePermissionFindManyArgs, 'select' | 'include'> & {
      select?: ModulePermissionCountAggregateInputType | true
    }
  >

  export interface ModulePermissionDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ModulePermission that matches the filter.
     * @param {ModulePermissionFindUniqueArgs} args - Arguments to find a ModulePermission
     * @example
     * // Get one ModulePermission
     * const modulePermission = await prisma.modulePermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ModulePermissionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ModulePermissionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ModulePermission'> extends True ? Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>> : Prisma__ModulePermissionClient<ModulePermissionGetPayload<T> | null, null>

    /**
     * Find the first ModulePermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulePermissionFindFirstArgs} args - Arguments to find a ModulePermission
     * @example
     * // Get one ModulePermission
     * const modulePermission = await prisma.modulePermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ModulePermissionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ModulePermissionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ModulePermission'> extends True ? Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>> : Prisma__ModulePermissionClient<ModulePermissionGetPayload<T> | null, null>

    /**
     * Find zero or more ModulePermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulePermissionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModulePermissions
     * const modulePermissions = await prisma.modulePermission.findMany()
     * 
     * // Get first 10 ModulePermissions
     * const modulePermissions = await prisma.modulePermission.findMany({ take: 10 })
     * 
     * // Only select the `PermissionId`
     * const modulePermissionWithPermissionIdOnly = await prisma.modulePermission.findMany({ select: { PermissionId: true } })
     * 
    **/
    findMany<T extends ModulePermissionFindManyArgs>(
      args?: SelectSubset<T, ModulePermissionFindManyArgs>
    ): PrismaPromise<Array<ModulePermissionGetPayload<T>>>

    /**
     * Create a ModulePermission.
     * @param {ModulePermissionCreateArgs} args - Arguments to create a ModulePermission.
     * @example
     * // Create one ModulePermission
     * const ModulePermission = await prisma.modulePermission.create({
     *   data: {
     *     // ... data to create a ModulePermission
     *   }
     * })
     * 
    **/
    create<T extends ModulePermissionCreateArgs>(
      args: SelectSubset<T, ModulePermissionCreateArgs>
    ): Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>>

    /**
     * Create many ModulePermissions.
     *     @param {ModulePermissionCreateManyArgs} args - Arguments to create many ModulePermissions.
     *     @example
     *     // Create many ModulePermissions
     *     const modulePermission = await prisma.modulePermission.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ModulePermissionCreateManyArgs>(
      args?: SelectSubset<T, ModulePermissionCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ModulePermission.
     * @param {ModulePermissionDeleteArgs} args - Arguments to delete one ModulePermission.
     * @example
     * // Delete one ModulePermission
     * const ModulePermission = await prisma.modulePermission.delete({
     *   where: {
     *     // ... filter to delete one ModulePermission
     *   }
     * })
     * 
    **/
    delete<T extends ModulePermissionDeleteArgs>(
      args: SelectSubset<T, ModulePermissionDeleteArgs>
    ): Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>>

    /**
     * Update one ModulePermission.
     * @param {ModulePermissionUpdateArgs} args - Arguments to update one ModulePermission.
     * @example
     * // Update one ModulePermission
     * const modulePermission = await prisma.modulePermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ModulePermissionUpdateArgs>(
      args: SelectSubset<T, ModulePermissionUpdateArgs>
    ): Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>>

    /**
     * Delete zero or more ModulePermissions.
     * @param {ModulePermissionDeleteManyArgs} args - Arguments to filter ModulePermissions to delete.
     * @example
     * // Delete a few ModulePermissions
     * const { count } = await prisma.modulePermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ModulePermissionDeleteManyArgs>(
      args?: SelectSubset<T, ModulePermissionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModulePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulePermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModulePermissions
     * const modulePermission = await prisma.modulePermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ModulePermissionUpdateManyArgs>(
      args: SelectSubset<T, ModulePermissionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ModulePermission.
     * @param {ModulePermissionUpsertArgs} args - Arguments to update or create a ModulePermission.
     * @example
     * // Update or create a ModulePermission
     * const modulePermission = await prisma.modulePermission.upsert({
     *   create: {
     *     // ... data to create a ModulePermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModulePermission we want to update
     *   }
     * })
    **/
    upsert<T extends ModulePermissionUpsertArgs>(
      args: SelectSubset<T, ModulePermissionUpsertArgs>
    ): Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>>

    /**
     * Find one ModulePermission that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {ModulePermissionFindUniqueOrThrowArgs} args - Arguments to find a ModulePermission
     * @example
     * // Get one ModulePermission
     * const modulePermission = await prisma.modulePermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ModulePermissionFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ModulePermissionFindUniqueOrThrowArgs>
    ): Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>>

    /**
     * Find the first ModulePermission that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulePermissionFindFirstOrThrowArgs} args - Arguments to find a ModulePermission
     * @example
     * // Get one ModulePermission
     * const modulePermission = await prisma.modulePermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ModulePermissionFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ModulePermissionFindFirstOrThrowArgs>
    ): Prisma__ModulePermissionClient<ModulePermissionGetPayload<T>>

    /**
     * Count the number of ModulePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulePermissionCountArgs} args - Arguments to filter ModulePermissions to count.
     * @example
     * // Count the number of ModulePermissions
     * const count = await prisma.modulePermission.count({
     *   where: {
     *     // ... the filter for the ModulePermissions we want to count
     *   }
     * })
    **/
    count<T extends ModulePermissionCountArgs>(
      args?: Subset<T, ModulePermissionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModulePermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModulePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulePermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModulePermissionAggregateArgs>(args: Subset<T, ModulePermissionAggregateArgs>): PrismaPromise<GetModulePermissionAggregateType<T>>

    /**
     * Group by ModulePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulePermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModulePermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModulePermissionGroupByArgs['orderBy'] }
        : { orderBy?: ModulePermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModulePermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModulePermissionGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ModulePermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ModulePermissionClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ModulePermission base type for findUnique actions
   */
  export type ModulePermissionFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
    /**
     * Filter, which ModulePermission to fetch.
     * 
    **/
    where: ModulePermissionWhereUniqueInput
  }

  /**
   * ModulePermission: findUnique
   */
  export interface ModulePermissionFindUniqueArgs extends ModulePermissionFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ModulePermission base type for findFirst actions
   */
  export type ModulePermissionFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
    /**
     * Filter, which ModulePermission to fetch.
     * 
    **/
    where?: ModulePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModulePermissions to fetch.
     * 
    **/
    orderBy?: Enumerable<ModulePermissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModulePermissions.
     * 
    **/
    cursor?: ModulePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModulePermissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModulePermissions.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModulePermissions.
     * 
    **/
    distinct?: Enumerable<ModulePermissionScalarFieldEnum>
  }

  /**
   * ModulePermission: findFirst
   */
  export interface ModulePermissionFindFirstArgs extends ModulePermissionFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ModulePermission findMany
   */
  export type ModulePermissionFindManyArgs = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
    /**
     * Filter, which ModulePermissions to fetch.
     * 
    **/
    where?: ModulePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModulePermissions to fetch.
     * 
    **/
    orderBy?: Enumerable<ModulePermissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ModulePermissions.
     * 
    **/
    cursor?: ModulePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModulePermissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModulePermissions.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ModulePermissionScalarFieldEnum>
  }


  /**
   * ModulePermission create
   */
  export type ModulePermissionCreateArgs = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
    /**
     * The data needed to create a ModulePermission.
     * 
    **/
    data: XOR<ModulePermissionCreateInput, ModulePermissionUncheckedCreateInput>
  }


  /**
   * ModulePermission createMany
   */
  export type ModulePermissionCreateManyArgs = {
    /**
     * The data used to create many ModulePermissions.
     * 
    **/
    data: Enumerable<ModulePermissionCreateManyInput>
  }


  /**
   * ModulePermission update
   */
  export type ModulePermissionUpdateArgs = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
    /**
     * The data needed to update a ModulePermission.
     * 
    **/
    data: XOR<ModulePermissionUpdateInput, ModulePermissionUncheckedUpdateInput>
    /**
     * Choose, which ModulePermission to update.
     * 
    **/
    where: ModulePermissionWhereUniqueInput
  }


  /**
   * ModulePermission updateMany
   */
  export type ModulePermissionUpdateManyArgs = {
    /**
     * The data used to update ModulePermissions.
     * 
    **/
    data: XOR<ModulePermissionUpdateManyMutationInput, ModulePermissionUncheckedUpdateManyInput>
    /**
     * Filter which ModulePermissions to update
     * 
    **/
    where?: ModulePermissionWhereInput
  }


  /**
   * ModulePermission upsert
   */
  export type ModulePermissionUpsertArgs = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
    /**
     * The filter to search for the ModulePermission to update in case it exists.
     * 
    **/
    where: ModulePermissionWhereUniqueInput
    /**
     * In case the ModulePermission found by the `where` argument doesn't exist, create a new ModulePermission with this data.
     * 
    **/
    create: XOR<ModulePermissionCreateInput, ModulePermissionUncheckedCreateInput>
    /**
     * In case the ModulePermission was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ModulePermissionUpdateInput, ModulePermissionUncheckedUpdateInput>
  }


  /**
   * ModulePermission delete
   */
  export type ModulePermissionDeleteArgs = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
    /**
     * Filter which ModulePermission to delete.
     * 
    **/
    where: ModulePermissionWhereUniqueInput
  }


  /**
   * ModulePermission deleteMany
   */
  export type ModulePermissionDeleteManyArgs = {
    /**
     * Filter which ModulePermissions to delete
     * 
    **/
    where?: ModulePermissionWhereInput
  }


  /**
   * ModulePermission: findUniqueOrThrow
   */
  export type ModulePermissionFindUniqueOrThrowArgs = ModulePermissionFindUniqueArgsBase
      

  /**
   * ModulePermission: findFirstOrThrow
   */
  export type ModulePermissionFindFirstOrThrowArgs = ModulePermissionFindFirstArgsBase
      

  /**
   * ModulePermission without action
   */
  export type ModulePermissionArgs = {
    /**
     * Select specific fields to fetch from the ModulePermission
     * 
    **/
    select?: ModulePermissionSelect | null
  }



  /**
   * Model Notification
   */


  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    Id: number | null
    NotificationTemplateId: number | null
    RetryCount: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type NotificationSumAggregateOutputType = {
    Id: number | null
    NotificationTemplateId: number | null
    RetryCount: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type NotificationMinAggregateOutputType = {
    Id: number | null
    NotificationTemplateId: number | null
    Sender: string | null
    Phone: string | null
    Recipient: string | null
    CCRecipient: string | null
    Subject: string | null
    Body: string | null
    NotificationType: string | null
    IsProcessed: boolean | null
    ErrorMessage: string | null
    RetryCount: number | null
    SentDate: Date | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    Id: number | null
    NotificationTemplateId: number | null
    Sender: string | null
    Phone: string | null
    Recipient: string | null
    CCRecipient: string | null
    Subject: string | null
    Body: string | null
    NotificationType: string | null
    IsProcessed: boolean | null
    ErrorMessage: string | null
    RetryCount: number | null
    SentDate: Date | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    Id: number
    NotificationTemplateId: number
    Sender: number
    Phone: number
    Recipient: number
    CCRecipient: number
    Subject: number
    Body: number
    NotificationType: number
    IsProcessed: number
    ErrorMessage: number
    RetryCount: number
    SentDate: number
    CreatedBy: number
    CreatedDate: number
    ModifiedBy: number
    ModifiedDate: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    Id?: true
    NotificationTemplateId?: true
    RetryCount?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type NotificationSumAggregateInputType = {
    Id?: true
    NotificationTemplateId?: true
    RetryCount?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type NotificationMinAggregateInputType = {
    Id?: true
    NotificationTemplateId?: true
    Sender?: true
    Phone?: true
    Recipient?: true
    CCRecipient?: true
    Subject?: true
    Body?: true
    NotificationType?: true
    IsProcessed?: true
    ErrorMessage?: true
    RetryCount?: true
    SentDate?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
  }

  export type NotificationMaxAggregateInputType = {
    Id?: true
    NotificationTemplateId?: true
    Sender?: true
    Phone?: true
    Recipient?: true
    CCRecipient?: true
    Subject?: true
    Body?: true
    NotificationType?: true
    IsProcessed?: true
    ErrorMessage?: true
    RetryCount?: true
    SentDate?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
  }

  export type NotificationCountAggregateInputType = {
    Id?: true
    NotificationTemplateId?: true
    Sender?: true
    Phone?: true
    Recipient?: true
    CCRecipient?: true
    Subject?: true
    Body?: true
    NotificationType?: true
    IsProcessed?: true
    ErrorMessage?: true
    RetryCount?: true
    SentDate?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
    _all?: true
  }

  export type NotificationAggregateArgs = {
    /**
     * Filter which Notification to aggregate.
     * 
    **/
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     * 
    **/
    orderBy?: Enumerable<NotificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs = {
    where?: NotificationWhereInput
    orderBy?: Enumerable<NotificationOrderByWithAggregationInput>
    by: Array<NotificationScalarFieldEnum>
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }


  export type NotificationGroupByOutputType = {
    Id: number
    NotificationTemplateId: number
    Sender: string | null
    Phone: string | null
    Recipient: string | null
    CCRecipient: string | null
    Subject: string | null
    Body: string
    NotificationType: string
    IsProcessed: boolean
    ErrorMessage: string | null
    RetryCount: number | null
    SentDate: Date
    CreatedBy: number
    CreatedDate: Date
    ModifiedBy: number | null
    ModifiedDate: Date | null
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = PrismaPromise<
    Array<
      PickArray<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect = {
    Id?: boolean
    NotificationTemplateId?: boolean
    Sender?: boolean
    Phone?: boolean
    Recipient?: boolean
    CCRecipient?: boolean
    Subject?: boolean
    Body?: boolean
    NotificationType?: boolean
    IsProcessed?: boolean
    ErrorMessage?: boolean
    RetryCount?: boolean
    SentDate?: boolean
    CreatedBy?: boolean
    CreatedDate?: boolean
    ModifiedBy?: boolean
    ModifiedDate?: boolean
    NotificationTemplate?: boolean | NotificationTemplateArgs
    User_Notification_CreatedByToUser?: boolean | UserArgs
    User_Notification_ModifiedByToUser?: boolean | UserArgs
  }


  export type NotificationInclude = {
    NotificationTemplate?: boolean | NotificationTemplateArgs
    User_Notification_CreatedByToUser?: boolean | UserArgs
    User_Notification_ModifiedByToUser?: boolean | UserArgs
  } 

  export type NotificationGetPayload<S extends boolean | null | undefined | NotificationArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Notification :
    S extends undefined ? never :
    S extends { include: any } & (NotificationArgs | NotificationFindManyArgs)
    ? Notification  & {
    [P in TrueKeys<S['include']>]:
        P extends 'NotificationTemplate' ? NotificationTemplateGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'User_Notification_CreatedByToUser' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'User_Notification_ModifiedByToUser' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : S extends { select: any } & (NotificationArgs | NotificationFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
        P extends 'NotificationTemplate' ? NotificationTemplateGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'User_Notification_CreatedByToUser' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'User_Notification_ModifiedByToUser' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof Notification ? Notification[P] : never
  } 
      : Notification


  type NotificationCountArgs = Merge<
    Omit<NotificationFindManyArgs, 'select' | 'include'> & {
      select?: NotificationCountAggregateInputType | true
    }
  >

  export interface NotificationDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends NotificationFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, NotificationFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Notification'> extends True ? Prisma__NotificationClient<NotificationGetPayload<T>> : Prisma__NotificationClient<NotificationGetPayload<T> | null, null>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends NotificationFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, NotificationFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Notification'> extends True ? Prisma__NotificationClient<NotificationGetPayload<T>> : Prisma__NotificationClient<NotificationGetPayload<T> | null, null>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends NotificationFindManyArgs>(
      args?: SelectSubset<T, NotificationFindManyArgs>
    ): PrismaPromise<Array<NotificationGetPayload<T>>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
    **/
    create<T extends NotificationCreateArgs>(
      args: SelectSubset<T, NotificationCreateArgs>
    ): Prisma__NotificationClient<NotificationGetPayload<T>>

    /**
     * Create many Notifications.
     *     @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     *     @example
     *     // Create many Notifications
     *     const notification = await prisma.notification.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends NotificationCreateManyArgs>(
      args?: SelectSubset<T, NotificationCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
    **/
    delete<T extends NotificationDeleteArgs>(
      args: SelectSubset<T, NotificationDeleteArgs>
    ): Prisma__NotificationClient<NotificationGetPayload<T>>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends NotificationUpdateArgs>(
      args: SelectSubset<T, NotificationUpdateArgs>
    ): Prisma__NotificationClient<NotificationGetPayload<T>>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends NotificationDeleteManyArgs>(
      args?: SelectSubset<T, NotificationDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends NotificationUpdateManyArgs>(
      args: SelectSubset<T, NotificationUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
    **/
    upsert<T extends NotificationUpsertArgs>(
      args: SelectSubset<T, NotificationUpsertArgs>
    ): Prisma__NotificationClient<NotificationGetPayload<T>>

    /**
     * Find one Notification that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, NotificationFindUniqueOrThrowArgs>
    ): Prisma__NotificationClient<NotificationGetPayload<T>>

    /**
     * Find the first Notification that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(
      args?: SelectSubset<T, NotificationFindFirstOrThrowArgs>
    ): Prisma__NotificationClient<NotificationGetPayload<T>>

    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__NotificationClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    NotificationTemplate<T extends NotificationTemplateArgs= {}>(args?: Subset<T, NotificationTemplateArgs>): Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T> | Null>;

    User_Notification_CreatedByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    User_Notification_ModifiedByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Notification base type for findUnique actions
   */
  export type NotificationFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
    /**
     * Filter, which Notification to fetch.
     * 
    **/
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification: findUnique
   */
  export interface NotificationFindUniqueArgs extends NotificationFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Notification base type for findFirst actions
   */
  export type NotificationFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
    /**
     * Filter, which Notification to fetch.
     * 
    **/
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     * 
    **/
    orderBy?: Enumerable<NotificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     * 
    **/
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     * 
    **/
    distinct?: Enumerable<NotificationScalarFieldEnum>
  }

  /**
   * Notification: findFirst
   */
  export interface NotificationFindFirstArgs extends NotificationFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
    /**
     * Filter, which Notifications to fetch.
     * 
    **/
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     * 
    **/
    orderBy?: Enumerable<NotificationOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     * 
    **/
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     * 
    **/
    skip?: number
    distinct?: Enumerable<NotificationScalarFieldEnum>
  }


  /**
   * Notification create
   */
  export type NotificationCreateArgs = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
    /**
     * The data needed to create a Notification.
     * 
    **/
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }


  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs = {
    /**
     * The data used to create many Notifications.
     * 
    **/
    data: Enumerable<NotificationCreateManyInput>
  }


  /**
   * Notification update
   */
  export type NotificationUpdateArgs = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
    /**
     * The data needed to update a Notification.
     * 
    **/
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     * 
    **/
    where: NotificationWhereUniqueInput
  }


  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs = {
    /**
     * The data used to update Notifications.
     * 
    **/
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     * 
    **/
    where?: NotificationWhereInput
  }


  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
    /**
     * The filter to search for the Notification to update in case it exists.
     * 
    **/
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     * 
    **/
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }


  /**
   * Notification delete
   */
  export type NotificationDeleteArgs = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
    /**
     * Filter which Notification to delete.
     * 
    **/
    where: NotificationWhereUniqueInput
  }


  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs = {
    /**
     * Filter which Notifications to delete
     * 
    **/
    where?: NotificationWhereInput
  }


  /**
   * Notification: findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs = NotificationFindUniqueArgsBase
      

  /**
   * Notification: findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs = NotificationFindFirstArgsBase
      

  /**
   * Notification without action
   */
  export type NotificationArgs = {
    /**
     * Select specific fields to fetch from the Notification
     * 
    **/
    select?: NotificationSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationInclude | null
  }



  /**
   * Model NotificationTemplate
   */


  export type AggregateNotificationTemplate = {
    _count: NotificationTemplateCountAggregateOutputType | null
    _avg: NotificationTemplateAvgAggregateOutputType | null
    _sum: NotificationTemplateSumAggregateOutputType | null
    _min: NotificationTemplateMinAggregateOutputType | null
    _max: NotificationTemplateMaxAggregateOutputType | null
  }

  export type NotificationTemplateAvgAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type NotificationTemplateSumAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type NotificationTemplateMinAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    Subject: string | null
    Body: string | null
    Type: string | null
    IsActive: boolean | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
  }

  export type NotificationTemplateMaxAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    Subject: string | null
    Body: string | null
    Type: string | null
    IsActive: boolean | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
  }

  export type NotificationTemplateCountAggregateOutputType = {
    Id: number
    Name: number
    Description: number
    Subject: number
    Body: number
    Type: number
    IsActive: number
    CreatedBy: number
    CreatedDate: number
    ModifiedBy: number
    ModifiedDate: number
    _all: number
  }


  export type NotificationTemplateAvgAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type NotificationTemplateSumAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type NotificationTemplateMinAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Subject?: true
    Body?: true
    Type?: true
    IsActive?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
  }

  export type NotificationTemplateMaxAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Subject?: true
    Body?: true
    Type?: true
    IsActive?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
  }

  export type NotificationTemplateCountAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    Subject?: true
    Body?: true
    Type?: true
    IsActive?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
    _all?: true
  }

  export type NotificationTemplateAggregateArgs = {
    /**
     * Filter which NotificationTemplate to aggregate.
     * 
    **/
    where?: NotificationTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotificationTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<NotificationTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: NotificationTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotificationTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotificationTemplates.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NotificationTemplates
    **/
    _count?: true | NotificationTemplateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationTemplateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationTemplateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationTemplateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationTemplateMaxAggregateInputType
  }

  export type GetNotificationTemplateAggregateType<T extends NotificationTemplateAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificationTemplate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificationTemplate[P]>
      : GetScalarType<T[P], AggregateNotificationTemplate[P]>
  }




  export type NotificationTemplateGroupByArgs = {
    where?: NotificationTemplateWhereInput
    orderBy?: Enumerable<NotificationTemplateOrderByWithAggregationInput>
    by: Array<NotificationTemplateScalarFieldEnum>
    having?: NotificationTemplateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationTemplateCountAggregateInputType | true
    _avg?: NotificationTemplateAvgAggregateInputType
    _sum?: NotificationTemplateSumAggregateInputType
    _min?: NotificationTemplateMinAggregateInputType
    _max?: NotificationTemplateMaxAggregateInputType
  }


  export type NotificationTemplateGroupByOutputType = {
    Id: number
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive: boolean
    CreatedBy: number
    CreatedDate: Date
    ModifiedBy: number | null
    ModifiedDate: Date | null
    _count: NotificationTemplateCountAggregateOutputType | null
    _avg: NotificationTemplateAvgAggregateOutputType | null
    _sum: NotificationTemplateSumAggregateOutputType | null
    _min: NotificationTemplateMinAggregateOutputType | null
    _max: NotificationTemplateMaxAggregateOutputType | null
  }

  type GetNotificationTemplateGroupByPayload<T extends NotificationTemplateGroupByArgs> = PrismaPromise<
    Array<
      PickArray<NotificationTemplateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationTemplateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationTemplateGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationTemplateGroupByOutputType[P]>
        }
      >
    >


  export type NotificationTemplateSelect = {
    Id?: boolean
    Name?: boolean
    Description?: boolean
    Subject?: boolean
    Body?: boolean
    Type?: boolean
    IsActive?: boolean
    CreatedBy?: boolean
    CreatedDate?: boolean
    ModifiedBy?: boolean
    ModifiedDate?: boolean
    User_NotificationTemplate_CreatedByToUser?: boolean | UserArgs
    User_NotificationTemplate_ModifiedByToUser?: boolean | UserArgs
    Notification?: boolean | NotificationFindManyArgs
    _count?: boolean | NotificationTemplateCountOutputTypeArgs
  }


  export type NotificationTemplateInclude = {
    User_NotificationTemplate_CreatedByToUser?: boolean | UserArgs
    User_NotificationTemplate_ModifiedByToUser?: boolean | UserArgs
    Notification?: boolean | NotificationFindManyArgs
    _count?: boolean | NotificationTemplateCountOutputTypeArgs
  } 

  export type NotificationTemplateGetPayload<S extends boolean | null | undefined | NotificationTemplateArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? NotificationTemplate :
    S extends undefined ? never :
    S extends { include: any } & (NotificationTemplateArgs | NotificationTemplateFindManyArgs)
    ? NotificationTemplate  & {
    [P in TrueKeys<S['include']>]:
        P extends 'User_NotificationTemplate_CreatedByToUser' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'User_NotificationTemplate_ModifiedByToUser' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'Notification' ? Array < NotificationGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? NotificationTemplateCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : S extends { select: any } & (NotificationTemplateArgs | NotificationTemplateFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
        P extends 'User_NotificationTemplate_CreatedByToUser' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'User_NotificationTemplate_ModifiedByToUser' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'Notification' ? Array < NotificationGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? NotificationTemplateCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof NotificationTemplate ? NotificationTemplate[P] : never
  } 
      : NotificationTemplate


  type NotificationTemplateCountArgs = Merge<
    Omit<NotificationTemplateFindManyArgs, 'select' | 'include'> & {
      select?: NotificationTemplateCountAggregateInputType | true
    }
  >

  export interface NotificationTemplateDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one NotificationTemplate that matches the filter.
     * @param {NotificationTemplateFindUniqueArgs} args - Arguments to find a NotificationTemplate
     * @example
     * // Get one NotificationTemplate
     * const notificationTemplate = await prisma.notificationTemplate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends NotificationTemplateFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, NotificationTemplateFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'NotificationTemplate'> extends True ? Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>> : Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T> | null, null>

    /**
     * Find the first NotificationTemplate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTemplateFindFirstArgs} args - Arguments to find a NotificationTemplate
     * @example
     * // Get one NotificationTemplate
     * const notificationTemplate = await prisma.notificationTemplate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends NotificationTemplateFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, NotificationTemplateFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'NotificationTemplate'> extends True ? Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>> : Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T> | null, null>

    /**
     * Find zero or more NotificationTemplates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTemplateFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NotificationTemplates
     * const notificationTemplates = await prisma.notificationTemplate.findMany()
     * 
     * // Get first 10 NotificationTemplates
     * const notificationTemplates = await prisma.notificationTemplate.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const notificationTemplateWithIdOnly = await prisma.notificationTemplate.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends NotificationTemplateFindManyArgs>(
      args?: SelectSubset<T, NotificationTemplateFindManyArgs>
    ): PrismaPromise<Array<NotificationTemplateGetPayload<T>>>

    /**
     * Create a NotificationTemplate.
     * @param {NotificationTemplateCreateArgs} args - Arguments to create a NotificationTemplate.
     * @example
     * // Create one NotificationTemplate
     * const NotificationTemplate = await prisma.notificationTemplate.create({
     *   data: {
     *     // ... data to create a NotificationTemplate
     *   }
     * })
     * 
    **/
    create<T extends NotificationTemplateCreateArgs>(
      args: SelectSubset<T, NotificationTemplateCreateArgs>
    ): Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>>

    /**
     * Create many NotificationTemplates.
     *     @param {NotificationTemplateCreateManyArgs} args - Arguments to create many NotificationTemplates.
     *     @example
     *     // Create many NotificationTemplates
     *     const notificationTemplate = await prisma.notificationTemplate.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends NotificationTemplateCreateManyArgs>(
      args?: SelectSubset<T, NotificationTemplateCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a NotificationTemplate.
     * @param {NotificationTemplateDeleteArgs} args - Arguments to delete one NotificationTemplate.
     * @example
     * // Delete one NotificationTemplate
     * const NotificationTemplate = await prisma.notificationTemplate.delete({
     *   where: {
     *     // ... filter to delete one NotificationTemplate
     *   }
     * })
     * 
    **/
    delete<T extends NotificationTemplateDeleteArgs>(
      args: SelectSubset<T, NotificationTemplateDeleteArgs>
    ): Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>>

    /**
     * Update one NotificationTemplate.
     * @param {NotificationTemplateUpdateArgs} args - Arguments to update one NotificationTemplate.
     * @example
     * // Update one NotificationTemplate
     * const notificationTemplate = await prisma.notificationTemplate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends NotificationTemplateUpdateArgs>(
      args: SelectSubset<T, NotificationTemplateUpdateArgs>
    ): Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>>

    /**
     * Delete zero or more NotificationTemplates.
     * @param {NotificationTemplateDeleteManyArgs} args - Arguments to filter NotificationTemplates to delete.
     * @example
     * // Delete a few NotificationTemplates
     * const { count } = await prisma.notificationTemplate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends NotificationTemplateDeleteManyArgs>(
      args?: SelectSubset<T, NotificationTemplateDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more NotificationTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTemplateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NotificationTemplates
     * const notificationTemplate = await prisma.notificationTemplate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends NotificationTemplateUpdateManyArgs>(
      args: SelectSubset<T, NotificationTemplateUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one NotificationTemplate.
     * @param {NotificationTemplateUpsertArgs} args - Arguments to update or create a NotificationTemplate.
     * @example
     * // Update or create a NotificationTemplate
     * const notificationTemplate = await prisma.notificationTemplate.upsert({
     *   create: {
     *     // ... data to create a NotificationTemplate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NotificationTemplate we want to update
     *   }
     * })
    **/
    upsert<T extends NotificationTemplateUpsertArgs>(
      args: SelectSubset<T, NotificationTemplateUpsertArgs>
    ): Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>>

    /**
     * Find one NotificationTemplate that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {NotificationTemplateFindUniqueOrThrowArgs} args - Arguments to find a NotificationTemplate
     * @example
     * // Get one NotificationTemplate
     * const notificationTemplate = await prisma.notificationTemplate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends NotificationTemplateFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, NotificationTemplateFindUniqueOrThrowArgs>
    ): Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>>

    /**
     * Find the first NotificationTemplate that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTemplateFindFirstOrThrowArgs} args - Arguments to find a NotificationTemplate
     * @example
     * // Get one NotificationTemplate
     * const notificationTemplate = await prisma.notificationTemplate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends NotificationTemplateFindFirstOrThrowArgs>(
      args?: SelectSubset<T, NotificationTemplateFindFirstOrThrowArgs>
    ): Prisma__NotificationTemplateClient<NotificationTemplateGetPayload<T>>

    /**
     * Count the number of NotificationTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTemplateCountArgs} args - Arguments to filter NotificationTemplates to count.
     * @example
     * // Count the number of NotificationTemplates
     * const count = await prisma.notificationTemplate.count({
     *   where: {
     *     // ... the filter for the NotificationTemplates we want to count
     *   }
     * })
    **/
    count<T extends NotificationTemplateCountArgs>(
      args?: Subset<T, NotificationTemplateCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationTemplateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NotificationTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationTemplateAggregateArgs>(args: Subset<T, NotificationTemplateAggregateArgs>): PrismaPromise<GetNotificationTemplateAggregateType<T>>

    /**
     * Group by NotificationTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationTemplateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationTemplateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationTemplateGroupByArgs['orderBy'] }
        : { orderBy?: NotificationTemplateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationTemplateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationTemplateGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for NotificationTemplate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__NotificationTemplateClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User_NotificationTemplate_CreatedByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    User_NotificationTemplate_ModifiedByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Notification<T extends NotificationFindManyArgs= {}>(args?: Subset<T, NotificationFindManyArgs>): PrismaPromise<Array<NotificationGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * NotificationTemplate base type for findUnique actions
   */
  export type NotificationTemplateFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
    /**
     * Filter, which NotificationTemplate to fetch.
     * 
    **/
    where: NotificationTemplateWhereUniqueInput
  }

  /**
   * NotificationTemplate: findUnique
   */
  export interface NotificationTemplateFindUniqueArgs extends NotificationTemplateFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * NotificationTemplate base type for findFirst actions
   */
  export type NotificationTemplateFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
    /**
     * Filter, which NotificationTemplate to fetch.
     * 
    **/
    where?: NotificationTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotificationTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<NotificationTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NotificationTemplates.
     * 
    **/
    cursor?: NotificationTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotificationTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotificationTemplates.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NotificationTemplates.
     * 
    **/
    distinct?: Enumerable<NotificationTemplateScalarFieldEnum>
  }

  /**
   * NotificationTemplate: findFirst
   */
  export interface NotificationTemplateFindFirstArgs extends NotificationTemplateFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * NotificationTemplate findMany
   */
  export type NotificationTemplateFindManyArgs = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
    /**
     * Filter, which NotificationTemplates to fetch.
     * 
    **/
    where?: NotificationTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotificationTemplates to fetch.
     * 
    **/
    orderBy?: Enumerable<NotificationTemplateOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NotificationTemplates.
     * 
    **/
    cursor?: NotificationTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotificationTemplates from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotificationTemplates.
     * 
    **/
    skip?: number
    distinct?: Enumerable<NotificationTemplateScalarFieldEnum>
  }


  /**
   * NotificationTemplate create
   */
  export type NotificationTemplateCreateArgs = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
    /**
     * The data needed to create a NotificationTemplate.
     * 
    **/
    data: XOR<NotificationTemplateCreateInput, NotificationTemplateUncheckedCreateInput>
  }


  /**
   * NotificationTemplate createMany
   */
  export type NotificationTemplateCreateManyArgs = {
    /**
     * The data used to create many NotificationTemplates.
     * 
    **/
    data: Enumerable<NotificationTemplateCreateManyInput>
  }


  /**
   * NotificationTemplate update
   */
  export type NotificationTemplateUpdateArgs = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
    /**
     * The data needed to update a NotificationTemplate.
     * 
    **/
    data: XOR<NotificationTemplateUpdateInput, NotificationTemplateUncheckedUpdateInput>
    /**
     * Choose, which NotificationTemplate to update.
     * 
    **/
    where: NotificationTemplateWhereUniqueInput
  }


  /**
   * NotificationTemplate updateMany
   */
  export type NotificationTemplateUpdateManyArgs = {
    /**
     * The data used to update NotificationTemplates.
     * 
    **/
    data: XOR<NotificationTemplateUpdateManyMutationInput, NotificationTemplateUncheckedUpdateManyInput>
    /**
     * Filter which NotificationTemplates to update
     * 
    **/
    where?: NotificationTemplateWhereInput
  }


  /**
   * NotificationTemplate upsert
   */
  export type NotificationTemplateUpsertArgs = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
    /**
     * The filter to search for the NotificationTemplate to update in case it exists.
     * 
    **/
    where: NotificationTemplateWhereUniqueInput
    /**
     * In case the NotificationTemplate found by the `where` argument doesn't exist, create a new NotificationTemplate with this data.
     * 
    **/
    create: XOR<NotificationTemplateCreateInput, NotificationTemplateUncheckedCreateInput>
    /**
     * In case the NotificationTemplate was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<NotificationTemplateUpdateInput, NotificationTemplateUncheckedUpdateInput>
  }


  /**
   * NotificationTemplate delete
   */
  export type NotificationTemplateDeleteArgs = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
    /**
     * Filter which NotificationTemplate to delete.
     * 
    **/
    where: NotificationTemplateWhereUniqueInput
  }


  /**
   * NotificationTemplate deleteMany
   */
  export type NotificationTemplateDeleteManyArgs = {
    /**
     * Filter which NotificationTemplates to delete
     * 
    **/
    where?: NotificationTemplateWhereInput
  }


  /**
   * NotificationTemplate: findUniqueOrThrow
   */
  export type NotificationTemplateFindUniqueOrThrowArgs = NotificationTemplateFindUniqueArgsBase
      

  /**
   * NotificationTemplate: findFirstOrThrow
   */
  export type NotificationTemplateFindFirstOrThrowArgs = NotificationTemplateFindFirstArgsBase
      

  /**
   * NotificationTemplate without action
   */
  export type NotificationTemplateArgs = {
    /**
     * Select specific fields to fetch from the NotificationTemplate
     * 
    **/
    select?: NotificationTemplateSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: NotificationTemplateInclude | null
  }



  /**
   * Model PermissionMaster
   */


  export type AggregatePermissionMaster = {
    _count: PermissionMasterCountAggregateOutputType | null
    _avg: PermissionMasterAvgAggregateOutputType | null
    _sum: PermissionMasterSumAggregateOutputType | null
    _min: PermissionMasterMinAggregateOutputType | null
    _max: PermissionMasterMaxAggregateOutputType | null
  }

  export type PermissionMasterAvgAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type PermissionMasterSumAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type PermissionMasterMinAggregateOutputType = {
    Id: number | null
    Name: string | null
    DisplayName: string | null
    Description: string | null
    IsActive: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
  }

  export type PermissionMasterMaxAggregateOutputType = {
    Id: number | null
    Name: string | null
    DisplayName: string | null
    Description: string | null
    IsActive: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
  }

  export type PermissionMasterCountAggregateOutputType = {
    Id: number
    Name: number
    DisplayName: number
    Description: number
    IsActive: number
    CreatedDate: number
    CreatedBy: number
    ModifiedDate: number
    ModifiedBy: number
    _all: number
  }


  export type PermissionMasterAvgAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type PermissionMasterSumAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type PermissionMasterMinAggregateInputType = {
    Id?: true
    Name?: true
    DisplayName?: true
    Description?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
  }

  export type PermissionMasterMaxAggregateInputType = {
    Id?: true
    Name?: true
    DisplayName?: true
    Description?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
  }

  export type PermissionMasterCountAggregateInputType = {
    Id?: true
    Name?: true
    DisplayName?: true
    Description?: true
    IsActive?: true
    CreatedDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
    _all?: true
  }

  export type PermissionMasterAggregateArgs = {
    /**
     * Filter which PermissionMaster to aggregate.
     * 
    **/
    where?: PermissionMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermissionMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<PermissionMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: PermissionMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PermissionMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermissionMasters.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PermissionMasters
    **/
    _count?: true | PermissionMasterCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionMasterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionMasterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMasterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMasterMaxAggregateInputType
  }

  export type GetPermissionMasterAggregateType<T extends PermissionMasterAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissionMaster]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissionMaster[P]>
      : GetScalarType<T[P], AggregatePermissionMaster[P]>
  }




  export type PermissionMasterGroupByArgs = {
    where?: PermissionMasterWhereInput
    orderBy?: Enumerable<PermissionMasterOrderByWithAggregationInput>
    by: Array<PermissionMasterScalarFieldEnum>
    having?: PermissionMasterScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionMasterCountAggregateInputType | true
    _avg?: PermissionMasterAvgAggregateInputType
    _sum?: PermissionMasterSumAggregateInputType
    _min?: PermissionMasterMinAggregateInputType
    _max?: PermissionMasterMaxAggregateInputType
  }


  export type PermissionMasterGroupByOutputType = {
    Id: number
    Name: string
    DisplayName: string
    Description: string | null
    IsActive: boolean
    CreatedDate: Date
    CreatedBy: number
    ModifiedDate: Date | null
    ModifiedBy: number | null
    _count: PermissionMasterCountAggregateOutputType | null
    _avg: PermissionMasterAvgAggregateOutputType | null
    _sum: PermissionMasterSumAggregateOutputType | null
    _min: PermissionMasterMinAggregateOutputType | null
    _max: PermissionMasterMaxAggregateOutputType | null
  }

  type GetPermissionMasterGroupByPayload<T extends PermissionMasterGroupByArgs> = PrismaPromise<
    Array<
      PickArray<PermissionMasterGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionMasterGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionMasterGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionMasterGroupByOutputType[P]>
        }
      >
    >


  export type PermissionMasterSelect = {
    Id?: boolean
    Name?: boolean
    DisplayName?: boolean
    Description?: boolean
    IsActive?: boolean
    CreatedDate?: boolean
    CreatedBy?: boolean
    ModifiedDate?: boolean
    ModifiedBy?: boolean
  }


  export type PermissionMasterGetPayload<S extends boolean | null | undefined | PermissionMasterArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? PermissionMaster :
    S extends undefined ? never :
    S extends { include: any } & (PermissionMasterArgs | PermissionMasterFindManyArgs)
    ? PermissionMaster 
    : S extends { select: any } & (PermissionMasterArgs | PermissionMasterFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof PermissionMaster ? PermissionMaster[P] : never
  } 
      : PermissionMaster


  type PermissionMasterCountArgs = Merge<
    Omit<PermissionMasterFindManyArgs, 'select' | 'include'> & {
      select?: PermissionMasterCountAggregateInputType | true
    }
  >

  export interface PermissionMasterDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one PermissionMaster that matches the filter.
     * @param {PermissionMasterFindUniqueArgs} args - Arguments to find a PermissionMaster
     * @example
     * // Get one PermissionMaster
     * const permissionMaster = await prisma.permissionMaster.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PermissionMasterFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, PermissionMasterFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'PermissionMaster'> extends True ? Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>> : Prisma__PermissionMasterClient<PermissionMasterGetPayload<T> | null, null>

    /**
     * Find the first PermissionMaster that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionMasterFindFirstArgs} args - Arguments to find a PermissionMaster
     * @example
     * // Get one PermissionMaster
     * const permissionMaster = await prisma.permissionMaster.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PermissionMasterFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, PermissionMasterFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'PermissionMaster'> extends True ? Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>> : Prisma__PermissionMasterClient<PermissionMasterGetPayload<T> | null, null>

    /**
     * Find zero or more PermissionMasters that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionMasterFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PermissionMasters
     * const permissionMasters = await prisma.permissionMaster.findMany()
     * 
     * // Get first 10 PermissionMasters
     * const permissionMasters = await prisma.permissionMaster.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const permissionMasterWithIdOnly = await prisma.permissionMaster.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends PermissionMasterFindManyArgs>(
      args?: SelectSubset<T, PermissionMasterFindManyArgs>
    ): PrismaPromise<Array<PermissionMasterGetPayload<T>>>

    /**
     * Create a PermissionMaster.
     * @param {PermissionMasterCreateArgs} args - Arguments to create a PermissionMaster.
     * @example
     * // Create one PermissionMaster
     * const PermissionMaster = await prisma.permissionMaster.create({
     *   data: {
     *     // ... data to create a PermissionMaster
     *   }
     * })
     * 
    **/
    create<T extends PermissionMasterCreateArgs>(
      args: SelectSubset<T, PermissionMasterCreateArgs>
    ): Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>>

    /**
     * Create many PermissionMasters.
     *     @param {PermissionMasterCreateManyArgs} args - Arguments to create many PermissionMasters.
     *     @example
     *     // Create many PermissionMasters
     *     const permissionMaster = await prisma.permissionMaster.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends PermissionMasterCreateManyArgs>(
      args?: SelectSubset<T, PermissionMasterCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a PermissionMaster.
     * @param {PermissionMasterDeleteArgs} args - Arguments to delete one PermissionMaster.
     * @example
     * // Delete one PermissionMaster
     * const PermissionMaster = await prisma.permissionMaster.delete({
     *   where: {
     *     // ... filter to delete one PermissionMaster
     *   }
     * })
     * 
    **/
    delete<T extends PermissionMasterDeleteArgs>(
      args: SelectSubset<T, PermissionMasterDeleteArgs>
    ): Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>>

    /**
     * Update one PermissionMaster.
     * @param {PermissionMasterUpdateArgs} args - Arguments to update one PermissionMaster.
     * @example
     * // Update one PermissionMaster
     * const permissionMaster = await prisma.permissionMaster.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PermissionMasterUpdateArgs>(
      args: SelectSubset<T, PermissionMasterUpdateArgs>
    ): Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>>

    /**
     * Delete zero or more PermissionMasters.
     * @param {PermissionMasterDeleteManyArgs} args - Arguments to filter PermissionMasters to delete.
     * @example
     * // Delete a few PermissionMasters
     * const { count } = await prisma.permissionMaster.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PermissionMasterDeleteManyArgs>(
      args?: SelectSubset<T, PermissionMasterDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more PermissionMasters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionMasterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PermissionMasters
     * const permissionMaster = await prisma.permissionMaster.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PermissionMasterUpdateManyArgs>(
      args: SelectSubset<T, PermissionMasterUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one PermissionMaster.
     * @param {PermissionMasterUpsertArgs} args - Arguments to update or create a PermissionMaster.
     * @example
     * // Update or create a PermissionMaster
     * const permissionMaster = await prisma.permissionMaster.upsert({
     *   create: {
     *     // ... data to create a PermissionMaster
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PermissionMaster we want to update
     *   }
     * })
    **/
    upsert<T extends PermissionMasterUpsertArgs>(
      args: SelectSubset<T, PermissionMasterUpsertArgs>
    ): Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>>

    /**
     * Find one PermissionMaster that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {PermissionMasterFindUniqueOrThrowArgs} args - Arguments to find a PermissionMaster
     * @example
     * // Get one PermissionMaster
     * const permissionMaster = await prisma.permissionMaster.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PermissionMasterFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, PermissionMasterFindUniqueOrThrowArgs>
    ): Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>>

    /**
     * Find the first PermissionMaster that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionMasterFindFirstOrThrowArgs} args - Arguments to find a PermissionMaster
     * @example
     * // Get one PermissionMaster
     * const permissionMaster = await prisma.permissionMaster.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PermissionMasterFindFirstOrThrowArgs>(
      args?: SelectSubset<T, PermissionMasterFindFirstOrThrowArgs>
    ): Prisma__PermissionMasterClient<PermissionMasterGetPayload<T>>

    /**
     * Count the number of PermissionMasters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionMasterCountArgs} args - Arguments to filter PermissionMasters to count.
     * @example
     * // Count the number of PermissionMasters
     * const count = await prisma.permissionMaster.count({
     *   where: {
     *     // ... the filter for the PermissionMasters we want to count
     *   }
     * })
    **/
    count<T extends PermissionMasterCountArgs>(
      args?: Subset<T, PermissionMasterCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionMasterCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PermissionMaster.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionMasterAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionMasterAggregateArgs>(args: Subset<T, PermissionMasterAggregateArgs>): PrismaPromise<GetPermissionMasterAggregateType<T>>

    /**
     * Group by PermissionMaster.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionMasterGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissionMasterGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissionMasterGroupByArgs['orderBy'] }
        : { orderBy?: PermissionMasterGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissionMasterGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionMasterGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for PermissionMaster.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__PermissionMasterClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * PermissionMaster base type for findUnique actions
   */
  export type PermissionMasterFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
    /**
     * Filter, which PermissionMaster to fetch.
     * 
    **/
    where: PermissionMasterWhereUniqueInput
  }

  /**
   * PermissionMaster: findUnique
   */
  export interface PermissionMasterFindUniqueArgs extends PermissionMasterFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * PermissionMaster base type for findFirst actions
   */
  export type PermissionMasterFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
    /**
     * Filter, which PermissionMaster to fetch.
     * 
    **/
    where?: PermissionMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermissionMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<PermissionMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PermissionMasters.
     * 
    **/
    cursor?: PermissionMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PermissionMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermissionMasters.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PermissionMasters.
     * 
    **/
    distinct?: Enumerable<PermissionMasterScalarFieldEnum>
  }

  /**
   * PermissionMaster: findFirst
   */
  export interface PermissionMasterFindFirstArgs extends PermissionMasterFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * PermissionMaster findMany
   */
  export type PermissionMasterFindManyArgs = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
    /**
     * Filter, which PermissionMasters to fetch.
     * 
    **/
    where?: PermissionMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PermissionMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<PermissionMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PermissionMasters.
     * 
    **/
    cursor?: PermissionMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PermissionMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PermissionMasters.
     * 
    **/
    skip?: number
    distinct?: Enumerable<PermissionMasterScalarFieldEnum>
  }


  /**
   * PermissionMaster create
   */
  export type PermissionMasterCreateArgs = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
    /**
     * The data needed to create a PermissionMaster.
     * 
    **/
    data: XOR<PermissionMasterCreateInput, PermissionMasterUncheckedCreateInput>
  }


  /**
   * PermissionMaster createMany
   */
  export type PermissionMasterCreateManyArgs = {
    /**
     * The data used to create many PermissionMasters.
     * 
    **/
    data: Enumerable<PermissionMasterCreateManyInput>
  }


  /**
   * PermissionMaster update
   */
  export type PermissionMasterUpdateArgs = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
    /**
     * The data needed to update a PermissionMaster.
     * 
    **/
    data: XOR<PermissionMasterUpdateInput, PermissionMasterUncheckedUpdateInput>
    /**
     * Choose, which PermissionMaster to update.
     * 
    **/
    where: PermissionMasterWhereUniqueInput
  }


  /**
   * PermissionMaster updateMany
   */
  export type PermissionMasterUpdateManyArgs = {
    /**
     * The data used to update PermissionMasters.
     * 
    **/
    data: XOR<PermissionMasterUpdateManyMutationInput, PermissionMasterUncheckedUpdateManyInput>
    /**
     * Filter which PermissionMasters to update
     * 
    **/
    where?: PermissionMasterWhereInput
  }


  /**
   * PermissionMaster upsert
   */
  export type PermissionMasterUpsertArgs = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
    /**
     * The filter to search for the PermissionMaster to update in case it exists.
     * 
    **/
    where: PermissionMasterWhereUniqueInput
    /**
     * In case the PermissionMaster found by the `where` argument doesn't exist, create a new PermissionMaster with this data.
     * 
    **/
    create: XOR<PermissionMasterCreateInput, PermissionMasterUncheckedCreateInput>
    /**
     * In case the PermissionMaster was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<PermissionMasterUpdateInput, PermissionMasterUncheckedUpdateInput>
  }


  /**
   * PermissionMaster delete
   */
  export type PermissionMasterDeleteArgs = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
    /**
     * Filter which PermissionMaster to delete.
     * 
    **/
    where: PermissionMasterWhereUniqueInput
  }


  /**
   * PermissionMaster deleteMany
   */
  export type PermissionMasterDeleteManyArgs = {
    /**
     * Filter which PermissionMasters to delete
     * 
    **/
    where?: PermissionMasterWhereInput
  }


  /**
   * PermissionMaster: findUniqueOrThrow
   */
  export type PermissionMasterFindUniqueOrThrowArgs = PermissionMasterFindUniqueArgsBase
      

  /**
   * PermissionMaster: findFirstOrThrow
   */
  export type PermissionMasterFindFirstOrThrowArgs = PermissionMasterFindFirstArgsBase
      

  /**
   * PermissionMaster without action
   */
  export type PermissionMasterArgs = {
    /**
     * Select specific fields to fetch from the PermissionMaster
     * 
    **/
    select?: PermissionMasterSelect | null
  }



  /**
   * Model RoleMaster
   */


  export type AggregateRoleMaster = {
    _count: RoleMasterCountAggregateOutputType | null
    _avg: RoleMasterAvgAggregateOutputType | null
    _sum: RoleMasterSumAggregateOutputType | null
    _min: RoleMasterMinAggregateOutputType | null
    _max: RoleMasterMaxAggregateOutputType | null
  }

  export type RoleMasterAvgAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type RoleMasterSumAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type RoleMasterMinAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    IsActive: boolean | null
    CreateDate: Date | null
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
  }

  export type RoleMasterMaxAggregateOutputType = {
    Id: number | null
    Name: string | null
    Description: string | null
    IsActive: boolean | null
    CreateDate: Date | null
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
  }

  export type RoleMasterCountAggregateOutputType = {
    Id: number
    Name: number
    Description: number
    IsActive: number
    CreateDate: number
    CreatedBy: number
    ModifiedDate: number
    ModifiedBy: number
    _all: number
  }


  export type RoleMasterAvgAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type RoleMasterSumAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type RoleMasterMinAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    IsActive?: true
    CreateDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
  }

  export type RoleMasterMaxAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    IsActive?: true
    CreateDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
  }

  export type RoleMasterCountAggregateInputType = {
    Id?: true
    Name?: true
    Description?: true
    IsActive?: true
    CreateDate?: true
    CreatedBy?: true
    ModifiedDate?: true
    ModifiedBy?: true
    _all?: true
  }

  export type RoleMasterAggregateArgs = {
    /**
     * Filter which RoleMaster to aggregate.
     * 
    **/
    where?: RoleMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<RoleMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: RoleMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleMasters.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RoleMasters
    **/
    _count?: true | RoleMasterCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleMasterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleMasterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMasterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMasterMaxAggregateInputType
  }

  export type GetRoleMasterAggregateType<T extends RoleMasterAggregateArgs> = {
        [P in keyof T & keyof AggregateRoleMaster]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoleMaster[P]>
      : GetScalarType<T[P], AggregateRoleMaster[P]>
  }




  export type RoleMasterGroupByArgs = {
    where?: RoleMasterWhereInput
    orderBy?: Enumerable<RoleMasterOrderByWithAggregationInput>
    by: Array<RoleMasterScalarFieldEnum>
    having?: RoleMasterScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleMasterCountAggregateInputType | true
    _avg?: RoleMasterAvgAggregateInputType
    _sum?: RoleMasterSumAggregateInputType
    _min?: RoleMasterMinAggregateInputType
    _max?: RoleMasterMaxAggregateInputType
  }


  export type RoleMasterGroupByOutputType = {
    Id: number
    Name: string
    Description: string | null
    IsActive: boolean
    CreateDate: Date
    CreatedBy: number | null
    ModifiedDate: Date | null
    ModifiedBy: number | null
    _count: RoleMasterCountAggregateOutputType | null
    _avg: RoleMasterAvgAggregateOutputType | null
    _sum: RoleMasterSumAggregateOutputType | null
    _min: RoleMasterMinAggregateOutputType | null
    _max: RoleMasterMaxAggregateOutputType | null
  }

  type GetRoleMasterGroupByPayload<T extends RoleMasterGroupByArgs> = PrismaPromise<
    Array<
      PickArray<RoleMasterGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleMasterGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleMasterGroupByOutputType[P]>
            : GetScalarType<T[P], RoleMasterGroupByOutputType[P]>
        }
      >
    >


  export type RoleMasterSelect = {
    Id?: boolean
    Name?: boolean
    Description?: boolean
    IsActive?: boolean
    CreateDate?: boolean
    CreatedBy?: boolean
    ModifiedDate?: boolean
    ModifiedBy?: boolean
    User?: boolean | UserFindManyArgs
    _count?: boolean | RoleMasterCountOutputTypeArgs
  }


  export type RoleMasterInclude = {
    User?: boolean | UserFindManyArgs
    _count?: boolean | RoleMasterCountOutputTypeArgs
  } 

  export type RoleMasterGetPayload<S extends boolean | null | undefined | RoleMasterArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? RoleMaster :
    S extends undefined ? never :
    S extends { include: any } & (RoleMasterArgs | RoleMasterFindManyArgs)
    ? RoleMaster  & {
    [P in TrueKeys<S['include']>]:
        P extends 'User' ? Array < UserGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? RoleMasterCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : S extends { select: any } & (RoleMasterArgs | RoleMasterFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
        P extends 'User' ? Array < UserGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? RoleMasterCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof RoleMaster ? RoleMaster[P] : never
  } 
      : RoleMaster


  type RoleMasterCountArgs = Merge<
    Omit<RoleMasterFindManyArgs, 'select' | 'include'> & {
      select?: RoleMasterCountAggregateInputType | true
    }
  >

  export interface RoleMasterDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one RoleMaster that matches the filter.
     * @param {RoleMasterFindUniqueArgs} args - Arguments to find a RoleMaster
     * @example
     * // Get one RoleMaster
     * const roleMaster = await prisma.roleMaster.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends RoleMasterFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, RoleMasterFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'RoleMaster'> extends True ? Prisma__RoleMasterClient<RoleMasterGetPayload<T>> : Prisma__RoleMasterClient<RoleMasterGetPayload<T> | null, null>

    /**
     * Find the first RoleMaster that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleMasterFindFirstArgs} args - Arguments to find a RoleMaster
     * @example
     * // Get one RoleMaster
     * const roleMaster = await prisma.roleMaster.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends RoleMasterFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, RoleMasterFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'RoleMaster'> extends True ? Prisma__RoleMasterClient<RoleMasterGetPayload<T>> : Prisma__RoleMasterClient<RoleMasterGetPayload<T> | null, null>

    /**
     * Find zero or more RoleMasters that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleMasterFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RoleMasters
     * const roleMasters = await prisma.roleMaster.findMany()
     * 
     * // Get first 10 RoleMasters
     * const roleMasters = await prisma.roleMaster.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const roleMasterWithIdOnly = await prisma.roleMaster.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends RoleMasterFindManyArgs>(
      args?: SelectSubset<T, RoleMasterFindManyArgs>
    ): PrismaPromise<Array<RoleMasterGetPayload<T>>>

    /**
     * Create a RoleMaster.
     * @param {RoleMasterCreateArgs} args - Arguments to create a RoleMaster.
     * @example
     * // Create one RoleMaster
     * const RoleMaster = await prisma.roleMaster.create({
     *   data: {
     *     // ... data to create a RoleMaster
     *   }
     * })
     * 
    **/
    create<T extends RoleMasterCreateArgs>(
      args: SelectSubset<T, RoleMasterCreateArgs>
    ): Prisma__RoleMasterClient<RoleMasterGetPayload<T>>

    /**
     * Create many RoleMasters.
     *     @param {RoleMasterCreateManyArgs} args - Arguments to create many RoleMasters.
     *     @example
     *     // Create many RoleMasters
     *     const roleMaster = await prisma.roleMaster.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends RoleMasterCreateManyArgs>(
      args?: SelectSubset<T, RoleMasterCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a RoleMaster.
     * @param {RoleMasterDeleteArgs} args - Arguments to delete one RoleMaster.
     * @example
     * // Delete one RoleMaster
     * const RoleMaster = await prisma.roleMaster.delete({
     *   where: {
     *     // ... filter to delete one RoleMaster
     *   }
     * })
     * 
    **/
    delete<T extends RoleMasterDeleteArgs>(
      args: SelectSubset<T, RoleMasterDeleteArgs>
    ): Prisma__RoleMasterClient<RoleMasterGetPayload<T>>

    /**
     * Update one RoleMaster.
     * @param {RoleMasterUpdateArgs} args - Arguments to update one RoleMaster.
     * @example
     * // Update one RoleMaster
     * const roleMaster = await prisma.roleMaster.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends RoleMasterUpdateArgs>(
      args: SelectSubset<T, RoleMasterUpdateArgs>
    ): Prisma__RoleMasterClient<RoleMasterGetPayload<T>>

    /**
     * Delete zero or more RoleMasters.
     * @param {RoleMasterDeleteManyArgs} args - Arguments to filter RoleMasters to delete.
     * @example
     * // Delete a few RoleMasters
     * const { count } = await prisma.roleMaster.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends RoleMasterDeleteManyArgs>(
      args?: SelectSubset<T, RoleMasterDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleMasters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleMasterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RoleMasters
     * const roleMaster = await prisma.roleMaster.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends RoleMasterUpdateManyArgs>(
      args: SelectSubset<T, RoleMasterUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one RoleMaster.
     * @param {RoleMasterUpsertArgs} args - Arguments to update or create a RoleMaster.
     * @example
     * // Update or create a RoleMaster
     * const roleMaster = await prisma.roleMaster.upsert({
     *   create: {
     *     // ... data to create a RoleMaster
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RoleMaster we want to update
     *   }
     * })
    **/
    upsert<T extends RoleMasterUpsertArgs>(
      args: SelectSubset<T, RoleMasterUpsertArgs>
    ): Prisma__RoleMasterClient<RoleMasterGetPayload<T>>

    /**
     * Find one RoleMaster that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {RoleMasterFindUniqueOrThrowArgs} args - Arguments to find a RoleMaster
     * @example
     * // Get one RoleMaster
     * const roleMaster = await prisma.roleMaster.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends RoleMasterFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, RoleMasterFindUniqueOrThrowArgs>
    ): Prisma__RoleMasterClient<RoleMasterGetPayload<T>>

    /**
     * Find the first RoleMaster that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleMasterFindFirstOrThrowArgs} args - Arguments to find a RoleMaster
     * @example
     * // Get one RoleMaster
     * const roleMaster = await prisma.roleMaster.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends RoleMasterFindFirstOrThrowArgs>(
      args?: SelectSubset<T, RoleMasterFindFirstOrThrowArgs>
    ): Prisma__RoleMasterClient<RoleMasterGetPayload<T>>

    /**
     * Count the number of RoleMasters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleMasterCountArgs} args - Arguments to filter RoleMasters to count.
     * @example
     * // Count the number of RoleMasters
     * const count = await prisma.roleMaster.count({
     *   where: {
     *     // ... the filter for the RoleMasters we want to count
     *   }
     * })
    **/
    count<T extends RoleMasterCountArgs>(
      args?: Subset<T, RoleMasterCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleMasterCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RoleMaster.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleMasterAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleMasterAggregateArgs>(args: Subset<T, RoleMasterAggregateArgs>): PrismaPromise<GetRoleMasterAggregateType<T>>

    /**
     * Group by RoleMaster.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleMasterGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleMasterGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleMasterGroupByArgs['orderBy'] }
        : { orderBy?: RoleMasterGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleMasterGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleMasterGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for RoleMaster.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__RoleMasterClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserFindManyArgs= {}>(args?: Subset<T, UserFindManyArgs>): PrismaPromise<Array<UserGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * RoleMaster base type for findUnique actions
   */
  export type RoleMasterFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
    /**
     * Filter, which RoleMaster to fetch.
     * 
    **/
    where: RoleMasterWhereUniqueInput
  }

  /**
   * RoleMaster: findUnique
   */
  export interface RoleMasterFindUniqueArgs extends RoleMasterFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * RoleMaster base type for findFirst actions
   */
  export type RoleMasterFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
    /**
     * Filter, which RoleMaster to fetch.
     * 
    **/
    where?: RoleMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<RoleMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleMasters.
     * 
    **/
    cursor?: RoleMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleMasters.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleMasters.
     * 
    **/
    distinct?: Enumerable<RoleMasterScalarFieldEnum>
  }

  /**
   * RoleMaster: findFirst
   */
  export interface RoleMasterFindFirstArgs extends RoleMasterFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * RoleMaster findMany
   */
  export type RoleMasterFindManyArgs = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
    /**
     * Filter, which RoleMasters to fetch.
     * 
    **/
    where?: RoleMasterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleMasters to fetch.
     * 
    **/
    orderBy?: Enumerable<RoleMasterOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RoleMasters.
     * 
    **/
    cursor?: RoleMasterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleMasters from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleMasters.
     * 
    **/
    skip?: number
    distinct?: Enumerable<RoleMasterScalarFieldEnum>
  }


  /**
   * RoleMaster create
   */
  export type RoleMasterCreateArgs = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
    /**
     * The data needed to create a RoleMaster.
     * 
    **/
    data: XOR<RoleMasterCreateInput, RoleMasterUncheckedCreateInput>
  }


  /**
   * RoleMaster createMany
   */
  export type RoleMasterCreateManyArgs = {
    /**
     * The data used to create many RoleMasters.
     * 
    **/
    data: Enumerable<RoleMasterCreateManyInput>
  }


  /**
   * RoleMaster update
   */
  export type RoleMasterUpdateArgs = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
    /**
     * The data needed to update a RoleMaster.
     * 
    **/
    data: XOR<RoleMasterUpdateInput, RoleMasterUncheckedUpdateInput>
    /**
     * Choose, which RoleMaster to update.
     * 
    **/
    where: RoleMasterWhereUniqueInput
  }


  /**
   * RoleMaster updateMany
   */
  export type RoleMasterUpdateManyArgs = {
    /**
     * The data used to update RoleMasters.
     * 
    **/
    data: XOR<RoleMasterUpdateManyMutationInput, RoleMasterUncheckedUpdateManyInput>
    /**
     * Filter which RoleMasters to update
     * 
    **/
    where?: RoleMasterWhereInput
  }


  /**
   * RoleMaster upsert
   */
  export type RoleMasterUpsertArgs = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
    /**
     * The filter to search for the RoleMaster to update in case it exists.
     * 
    **/
    where: RoleMasterWhereUniqueInput
    /**
     * In case the RoleMaster found by the `where` argument doesn't exist, create a new RoleMaster with this data.
     * 
    **/
    create: XOR<RoleMasterCreateInput, RoleMasterUncheckedCreateInput>
    /**
     * In case the RoleMaster was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<RoleMasterUpdateInput, RoleMasterUncheckedUpdateInput>
  }


  /**
   * RoleMaster delete
   */
  export type RoleMasterDeleteArgs = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
    /**
     * Filter which RoleMaster to delete.
     * 
    **/
    where: RoleMasterWhereUniqueInput
  }


  /**
   * RoleMaster deleteMany
   */
  export type RoleMasterDeleteManyArgs = {
    /**
     * Filter which RoleMasters to delete
     * 
    **/
    where?: RoleMasterWhereInput
  }


  /**
   * RoleMaster: findUniqueOrThrow
   */
  export type RoleMasterFindUniqueOrThrowArgs = RoleMasterFindUniqueArgsBase
      

  /**
   * RoleMaster: findFirstOrThrow
   */
  export type RoleMasterFindFirstOrThrowArgs = RoleMasterFindFirstArgsBase
      

  /**
   * RoleMaster without action
   */
  export type RoleMasterArgs = {
    /**
     * Select specific fields to fetch from the RoleMaster
     * 
    **/
    select?: RoleMasterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: RoleMasterInclude | null
  }



  /**
   * Model RolePermission
   */


  export type AggregateRolePermission = {
    _count: RolePermissionCountAggregateOutputType | null
    _avg: RolePermissionAvgAggregateOutputType | null
    _sum: RolePermissionSumAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  export type RolePermissionAvgAggregateOutputType = {
    RoleId: number | null
    ModuleId: number | null
    PermissionId: number | null
    CreatedBy: number | null
  }

  export type RolePermissionSumAggregateOutputType = {
    RoleId: number | null
    ModuleId: number | null
    PermissionId: number | null
    CreatedBy: number | null
  }

  export type RolePermissionMinAggregateOutputType = {
    RoleId: number | null
    ModuleId: number | null
    PermissionId: number | null
    Permission: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
  }

  export type RolePermissionMaxAggregateOutputType = {
    RoleId: number | null
    ModuleId: number | null
    PermissionId: number | null
    Permission: boolean | null
    CreatedDate: Date | null
    CreatedBy: number | null
  }

  export type RolePermissionCountAggregateOutputType = {
    RoleId: number
    ModuleId: number
    PermissionId: number
    Permission: number
    CreatedDate: number
    CreatedBy: number
    _all: number
  }


  export type RolePermissionAvgAggregateInputType = {
    RoleId?: true
    ModuleId?: true
    PermissionId?: true
    CreatedBy?: true
  }

  export type RolePermissionSumAggregateInputType = {
    RoleId?: true
    ModuleId?: true
    PermissionId?: true
    CreatedBy?: true
  }

  export type RolePermissionMinAggregateInputType = {
    RoleId?: true
    ModuleId?: true
    PermissionId?: true
    Permission?: true
    CreatedDate?: true
    CreatedBy?: true
  }

  export type RolePermissionMaxAggregateInputType = {
    RoleId?: true
    ModuleId?: true
    PermissionId?: true
    Permission?: true
    CreatedDate?: true
    CreatedBy?: true
  }

  export type RolePermissionCountAggregateInputType = {
    RoleId?: true
    ModuleId?: true
    PermissionId?: true
    Permission?: true
    CreatedDate?: true
    CreatedBy?: true
    _all?: true
  }

  export type RolePermissionAggregateArgs = {
    /**
     * Filter which RolePermission to aggregate.
     * 
    **/
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     * 
    **/
    orderBy?: Enumerable<RolePermissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RolePermissions
    **/
    _count?: true | RolePermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolePermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolePermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolePermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolePermissionMaxAggregateInputType
  }

  export type GetRolePermissionAggregateType<T extends RolePermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateRolePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolePermission[P]>
      : GetScalarType<T[P], AggregateRolePermission[P]>
  }




  export type RolePermissionGroupByArgs = {
    where?: RolePermissionWhereInput
    orderBy?: Enumerable<RolePermissionOrderByWithAggregationInput>
    by: Array<RolePermissionScalarFieldEnum>
    having?: RolePermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolePermissionCountAggregateInputType | true
    _avg?: RolePermissionAvgAggregateInputType
    _sum?: RolePermissionSumAggregateInputType
    _min?: RolePermissionMinAggregateInputType
    _max?: RolePermissionMaxAggregateInputType
  }


  export type RolePermissionGroupByOutputType = {
    RoleId: number
    ModuleId: number
    PermissionId: number
    Permission: boolean
    CreatedDate: Date
    CreatedBy: number
    _count: RolePermissionCountAggregateOutputType | null
    _avg: RolePermissionAvgAggregateOutputType | null
    _sum: RolePermissionSumAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  type GetRolePermissionGroupByPayload<T extends RolePermissionGroupByArgs> = PrismaPromise<
    Array<
      PickArray<RolePermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolePermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
            : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
        }
      >
    >


  export type RolePermissionSelect = {
    RoleId?: boolean
    ModuleId?: boolean
    PermissionId?: boolean
    Permission?: boolean
    CreatedDate?: boolean
    CreatedBy?: boolean
  }


  export type RolePermissionGetPayload<S extends boolean | null | undefined | RolePermissionArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? RolePermission :
    S extends undefined ? never :
    S extends { include: any } & (RolePermissionArgs | RolePermissionFindManyArgs)
    ? RolePermission 
    : S extends { select: any } & (RolePermissionArgs | RolePermissionFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof RolePermission ? RolePermission[P] : never
  } 
      : RolePermission


  type RolePermissionCountArgs = Merge<
    Omit<RolePermissionFindManyArgs, 'select' | 'include'> & {
      select?: RolePermissionCountAggregateInputType | true
    }
  >

  export interface RolePermissionDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one RolePermission that matches the filter.
     * @param {RolePermissionFindUniqueArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends RolePermissionFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, RolePermissionFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'RolePermission'> extends True ? Prisma__RolePermissionClient<RolePermissionGetPayload<T>> : Prisma__RolePermissionClient<RolePermissionGetPayload<T> | null, null>

    /**
     * Find the first RolePermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends RolePermissionFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, RolePermissionFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'RolePermission'> extends True ? Prisma__RolePermissionClient<RolePermissionGetPayload<T>> : Prisma__RolePermissionClient<RolePermissionGetPayload<T> | null, null>

    /**
     * Find zero or more RolePermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany()
     * 
     * // Get first 10 RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany({ take: 10 })
     * 
     * // Only select the `RoleId`
     * const rolePermissionWithRoleIdOnly = await prisma.rolePermission.findMany({ select: { RoleId: true } })
     * 
    **/
    findMany<T extends RolePermissionFindManyArgs>(
      args?: SelectSubset<T, RolePermissionFindManyArgs>
    ): PrismaPromise<Array<RolePermissionGetPayload<T>>>

    /**
     * Create a RolePermission.
     * @param {RolePermissionCreateArgs} args - Arguments to create a RolePermission.
     * @example
     * // Create one RolePermission
     * const RolePermission = await prisma.rolePermission.create({
     *   data: {
     *     // ... data to create a RolePermission
     *   }
     * })
     * 
    **/
    create<T extends RolePermissionCreateArgs>(
      args: SelectSubset<T, RolePermissionCreateArgs>
    ): Prisma__RolePermissionClient<RolePermissionGetPayload<T>>

    /**
     * Create many RolePermissions.
     *     @param {RolePermissionCreateManyArgs} args - Arguments to create many RolePermissions.
     *     @example
     *     // Create many RolePermissions
     *     const rolePermission = await prisma.rolePermission.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends RolePermissionCreateManyArgs>(
      args?: SelectSubset<T, RolePermissionCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a RolePermission.
     * @param {RolePermissionDeleteArgs} args - Arguments to delete one RolePermission.
     * @example
     * // Delete one RolePermission
     * const RolePermission = await prisma.rolePermission.delete({
     *   where: {
     *     // ... filter to delete one RolePermission
     *   }
     * })
     * 
    **/
    delete<T extends RolePermissionDeleteArgs>(
      args: SelectSubset<T, RolePermissionDeleteArgs>
    ): Prisma__RolePermissionClient<RolePermissionGetPayload<T>>

    /**
     * Update one RolePermission.
     * @param {RolePermissionUpdateArgs} args - Arguments to update one RolePermission.
     * @example
     * // Update one RolePermission
     * const rolePermission = await prisma.rolePermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends RolePermissionUpdateArgs>(
      args: SelectSubset<T, RolePermissionUpdateArgs>
    ): Prisma__RolePermissionClient<RolePermissionGetPayload<T>>

    /**
     * Delete zero or more RolePermissions.
     * @param {RolePermissionDeleteManyArgs} args - Arguments to filter RolePermissions to delete.
     * @example
     * // Delete a few RolePermissions
     * const { count } = await prisma.rolePermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends RolePermissionDeleteManyArgs>(
      args?: SelectSubset<T, RolePermissionDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RolePermissions
     * const rolePermission = await prisma.rolePermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends RolePermissionUpdateManyArgs>(
      args: SelectSubset<T, RolePermissionUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one RolePermission.
     * @param {RolePermissionUpsertArgs} args - Arguments to update or create a RolePermission.
     * @example
     * // Update or create a RolePermission
     * const rolePermission = await prisma.rolePermission.upsert({
     *   create: {
     *     // ... data to create a RolePermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RolePermission we want to update
     *   }
     * })
    **/
    upsert<T extends RolePermissionUpsertArgs>(
      args: SelectSubset<T, RolePermissionUpsertArgs>
    ): Prisma__RolePermissionClient<RolePermissionGetPayload<T>>

    /**
     * Find one RolePermission that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {RolePermissionFindUniqueOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends RolePermissionFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, RolePermissionFindUniqueOrThrowArgs>
    ): Prisma__RolePermissionClient<RolePermissionGetPayload<T>>

    /**
     * Find the first RolePermission that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends RolePermissionFindFirstOrThrowArgs>(
      args?: SelectSubset<T, RolePermissionFindFirstOrThrowArgs>
    ): Prisma__RolePermissionClient<RolePermissionGetPayload<T>>

    /**
     * Count the number of RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionCountArgs} args - Arguments to filter RolePermissions to count.
     * @example
     * // Count the number of RolePermissions
     * const count = await prisma.rolePermission.count({
     *   where: {
     *     // ... the filter for the RolePermissions we want to count
     *   }
     * })
    **/
    count<T extends RolePermissionCountArgs>(
      args?: Subset<T, RolePermissionCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolePermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolePermissionAggregateArgs>(args: Subset<T, RolePermissionAggregateArgs>): PrismaPromise<GetRolePermissionAggregateType<T>>

    /**
     * Group by RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolePermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolePermissionGroupByArgs['orderBy'] }
        : { orderBy?: RolePermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolePermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolePermissionGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for RolePermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__RolePermissionClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * RolePermission base type for findUnique actions
   */
  export type RolePermissionFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
    /**
     * Filter, which RolePermission to fetch.
     * 
    **/
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission: findUnique
   */
  export interface RolePermissionFindUniqueArgs extends RolePermissionFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * RolePermission base type for findFirst actions
   */
  export type RolePermissionFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
    /**
     * Filter, which RolePermission to fetch.
     * 
    **/
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     * 
    **/
    orderBy?: Enumerable<RolePermissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     * 
    **/
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     * 
    **/
    distinct?: Enumerable<RolePermissionScalarFieldEnum>
  }

  /**
   * RolePermission: findFirst
   */
  export interface RolePermissionFindFirstArgs extends RolePermissionFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * RolePermission findMany
   */
  export type RolePermissionFindManyArgs = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
    /**
     * Filter, which RolePermissions to fetch.
     * 
    **/
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     * 
    **/
    orderBy?: Enumerable<RolePermissionOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RolePermissions.
     * 
    **/
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     * 
    **/
    skip?: number
    distinct?: Enumerable<RolePermissionScalarFieldEnum>
  }


  /**
   * RolePermission create
   */
  export type RolePermissionCreateArgs = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
    /**
     * The data needed to create a RolePermission.
     * 
    **/
    data: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
  }


  /**
   * RolePermission createMany
   */
  export type RolePermissionCreateManyArgs = {
    /**
     * The data used to create many RolePermissions.
     * 
    **/
    data: Enumerable<RolePermissionCreateManyInput>
  }


  /**
   * RolePermission update
   */
  export type RolePermissionUpdateArgs = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
    /**
     * The data needed to update a RolePermission.
     * 
    **/
    data: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
    /**
     * Choose, which RolePermission to update.
     * 
    **/
    where: RolePermissionWhereUniqueInput
  }


  /**
   * RolePermission updateMany
   */
  export type RolePermissionUpdateManyArgs = {
    /**
     * The data used to update RolePermissions.
     * 
    **/
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyInput>
    /**
     * Filter which RolePermissions to update
     * 
    **/
    where?: RolePermissionWhereInput
  }


  /**
   * RolePermission upsert
   */
  export type RolePermissionUpsertArgs = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
    /**
     * The filter to search for the RolePermission to update in case it exists.
     * 
    **/
    where: RolePermissionWhereUniqueInput
    /**
     * In case the RolePermission found by the `where` argument doesn't exist, create a new RolePermission with this data.
     * 
    **/
    create: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
    /**
     * In case the RolePermission was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
  }


  /**
   * RolePermission delete
   */
  export type RolePermissionDeleteArgs = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
    /**
     * Filter which RolePermission to delete.
     * 
    **/
    where: RolePermissionWhereUniqueInput
  }


  /**
   * RolePermission deleteMany
   */
  export type RolePermissionDeleteManyArgs = {
    /**
     * Filter which RolePermissions to delete
     * 
    **/
    where?: RolePermissionWhereInput
  }


  /**
   * RolePermission: findUniqueOrThrow
   */
  export type RolePermissionFindUniqueOrThrowArgs = RolePermissionFindUniqueArgsBase
      

  /**
   * RolePermission: findFirstOrThrow
   */
  export type RolePermissionFindFirstOrThrowArgs = RolePermissionFindFirstArgsBase
      

  /**
   * RolePermission without action
   */
  export type RolePermissionArgs = {
    /**
     * Select specific fields to fetch from the RolePermission
     * 
    **/
    select?: RolePermissionSelect | null
  }



  /**
   * Model sysdiagrams
   */


  export type AggregateSysdiagrams = {
    _count: SysdiagramsCountAggregateOutputType | null
    _avg: SysdiagramsAvgAggregateOutputType | null
    _sum: SysdiagramsSumAggregateOutputType | null
    _min: SysdiagramsMinAggregateOutputType | null
    _max: SysdiagramsMaxAggregateOutputType | null
  }

  export type SysdiagramsAvgAggregateOutputType = {
    principal_id: number | null
    diagram_id: number | null
    version: number | null
  }

  export type SysdiagramsSumAggregateOutputType = {
    principal_id: number | null
    diagram_id: number | null
    version: number | null
  }

  export type SysdiagramsMinAggregateOutputType = {
    name: string | null
    principal_id: number | null
    diagram_id: number | null
    version: number | null
    definition: Buffer | null
  }

  export type SysdiagramsMaxAggregateOutputType = {
    name: string | null
    principal_id: number | null
    diagram_id: number | null
    version: number | null
    definition: Buffer | null
  }

  export type SysdiagramsCountAggregateOutputType = {
    name: number
    principal_id: number
    diagram_id: number
    version: number
    definition: number
    _all: number
  }


  export type SysdiagramsAvgAggregateInputType = {
    principal_id?: true
    diagram_id?: true
    version?: true
  }

  export type SysdiagramsSumAggregateInputType = {
    principal_id?: true
    diagram_id?: true
    version?: true
  }

  export type SysdiagramsMinAggregateInputType = {
    name?: true
    principal_id?: true
    diagram_id?: true
    version?: true
    definition?: true
  }

  export type SysdiagramsMaxAggregateInputType = {
    name?: true
    principal_id?: true
    diagram_id?: true
    version?: true
    definition?: true
  }

  export type SysdiagramsCountAggregateInputType = {
    name?: true
    principal_id?: true
    diagram_id?: true
    version?: true
    definition?: true
    _all?: true
  }

  export type SysdiagramsAggregateArgs = {
    /**
     * Filter which sysdiagrams to aggregate.
     * 
    **/
    where?: sysdiagramsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sysdiagrams to fetch.
     * 
    **/
    orderBy?: Enumerable<sysdiagramsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: sysdiagramsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sysdiagrams from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sysdiagrams.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sysdiagrams
    **/
    _count?: true | SysdiagramsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SysdiagramsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SysdiagramsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SysdiagramsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SysdiagramsMaxAggregateInputType
  }

  export type GetSysdiagramsAggregateType<T extends SysdiagramsAggregateArgs> = {
        [P in keyof T & keyof AggregateSysdiagrams]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSysdiagrams[P]>
      : GetScalarType<T[P], AggregateSysdiagrams[P]>
  }




  export type SysdiagramsGroupByArgs = {
    where?: sysdiagramsWhereInput
    orderBy?: Enumerable<sysdiagramsOrderByWithAggregationInput>
    by: Array<SysdiagramsScalarFieldEnum>
    having?: sysdiagramsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SysdiagramsCountAggregateInputType | true
    _avg?: SysdiagramsAvgAggregateInputType
    _sum?: SysdiagramsSumAggregateInputType
    _min?: SysdiagramsMinAggregateInputType
    _max?: SysdiagramsMaxAggregateInputType
  }


  export type SysdiagramsGroupByOutputType = {
    name: string
    principal_id: number
    diagram_id: number
    version: number | null
    definition: Buffer | null
    _count: SysdiagramsCountAggregateOutputType | null
    _avg: SysdiagramsAvgAggregateOutputType | null
    _sum: SysdiagramsSumAggregateOutputType | null
    _min: SysdiagramsMinAggregateOutputType | null
    _max: SysdiagramsMaxAggregateOutputType | null
  }

  type GetSysdiagramsGroupByPayload<T extends SysdiagramsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SysdiagramsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SysdiagramsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SysdiagramsGroupByOutputType[P]>
            : GetScalarType<T[P], SysdiagramsGroupByOutputType[P]>
        }
      >
    >


  export type sysdiagramsSelect = {
    name?: boolean
    principal_id?: boolean
    diagram_id?: boolean
    version?: boolean
    definition?: boolean
  }


  export type sysdiagramsGetPayload<S extends boolean | null | undefined | sysdiagramsArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? sysdiagrams :
    S extends undefined ? never :
    S extends { include: any } & (sysdiagramsArgs | sysdiagramsFindManyArgs)
    ? sysdiagrams 
    : S extends { select: any } & (sysdiagramsArgs | sysdiagramsFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof sysdiagrams ? sysdiagrams[P] : never
  } 
      : sysdiagrams


  type sysdiagramsCountArgs = Merge<
    Omit<sysdiagramsFindManyArgs, 'select' | 'include'> & {
      select?: SysdiagramsCountAggregateInputType | true
    }
  >

  export interface sysdiagramsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Sysdiagrams that matches the filter.
     * @param {sysdiagramsFindUniqueArgs} args - Arguments to find a Sysdiagrams
     * @example
     * // Get one Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sysdiagramsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sysdiagramsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sysdiagrams'> extends True ? Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>> : Prisma__sysdiagramsClient<sysdiagramsGetPayload<T> | null, null>

    /**
     * Find the first Sysdiagrams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sysdiagramsFindFirstArgs} args - Arguments to find a Sysdiagrams
     * @example
     * // Get one Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sysdiagramsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sysdiagramsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sysdiagrams'> extends True ? Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>> : Prisma__sysdiagramsClient<sysdiagramsGetPayload<T> | null, null>

    /**
     * Find zero or more Sysdiagrams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sysdiagramsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.findMany()
     * 
     * // Get first 10 Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.findMany({ take: 10 })
     * 
     * // Only select the `name`
     * const sysdiagramsWithNameOnly = await prisma.sysdiagrams.findMany({ select: { name: true } })
     * 
    **/
    findMany<T extends sysdiagramsFindManyArgs>(
      args?: SelectSubset<T, sysdiagramsFindManyArgs>
    ): PrismaPromise<Array<sysdiagramsGetPayload<T>>>

    /**
     * Create a Sysdiagrams.
     * @param {sysdiagramsCreateArgs} args - Arguments to create a Sysdiagrams.
     * @example
     * // Create one Sysdiagrams
     * const Sysdiagrams = await prisma.sysdiagrams.create({
     *   data: {
     *     // ... data to create a Sysdiagrams
     *   }
     * })
     * 
    **/
    create<T extends sysdiagramsCreateArgs>(
      args: SelectSubset<T, sysdiagramsCreateArgs>
    ): Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>>

    /**
     * Create many Sysdiagrams.
     *     @param {sysdiagramsCreateManyArgs} args - Arguments to create many Sysdiagrams.
     *     @example
     *     // Create many Sysdiagrams
     *     const sysdiagrams = await prisma.sysdiagrams.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sysdiagramsCreateManyArgs>(
      args?: SelectSubset<T, sysdiagramsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sysdiagrams.
     * @param {sysdiagramsDeleteArgs} args - Arguments to delete one Sysdiagrams.
     * @example
     * // Delete one Sysdiagrams
     * const Sysdiagrams = await prisma.sysdiagrams.delete({
     *   where: {
     *     // ... filter to delete one Sysdiagrams
     *   }
     * })
     * 
    **/
    delete<T extends sysdiagramsDeleteArgs>(
      args: SelectSubset<T, sysdiagramsDeleteArgs>
    ): Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>>

    /**
     * Update one Sysdiagrams.
     * @param {sysdiagramsUpdateArgs} args - Arguments to update one Sysdiagrams.
     * @example
     * // Update one Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sysdiagramsUpdateArgs>(
      args: SelectSubset<T, sysdiagramsUpdateArgs>
    ): Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>>

    /**
     * Delete zero or more Sysdiagrams.
     * @param {sysdiagramsDeleteManyArgs} args - Arguments to filter Sysdiagrams to delete.
     * @example
     * // Delete a few Sysdiagrams
     * const { count } = await prisma.sysdiagrams.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sysdiagramsDeleteManyArgs>(
      args?: SelectSubset<T, sysdiagramsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sysdiagrams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sysdiagramsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sysdiagramsUpdateManyArgs>(
      args: SelectSubset<T, sysdiagramsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sysdiagrams.
     * @param {sysdiagramsUpsertArgs} args - Arguments to update or create a Sysdiagrams.
     * @example
     * // Update or create a Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.upsert({
     *   create: {
     *     // ... data to create a Sysdiagrams
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sysdiagrams we want to update
     *   }
     * })
    **/
    upsert<T extends sysdiagramsUpsertArgs>(
      args: SelectSubset<T, sysdiagramsUpsertArgs>
    ): Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>>

    /**
     * Find one Sysdiagrams that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {sysdiagramsFindUniqueOrThrowArgs} args - Arguments to find a Sysdiagrams
     * @example
     * // Get one Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sysdiagramsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sysdiagramsFindUniqueOrThrowArgs>
    ): Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>>

    /**
     * Find the first Sysdiagrams that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sysdiagramsFindFirstOrThrowArgs} args - Arguments to find a Sysdiagrams
     * @example
     * // Get one Sysdiagrams
     * const sysdiagrams = await prisma.sysdiagrams.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sysdiagramsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sysdiagramsFindFirstOrThrowArgs>
    ): Prisma__sysdiagramsClient<sysdiagramsGetPayload<T>>

    /**
     * Count the number of Sysdiagrams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sysdiagramsCountArgs} args - Arguments to filter Sysdiagrams to count.
     * @example
     * // Count the number of Sysdiagrams
     * const count = await prisma.sysdiagrams.count({
     *   where: {
     *     // ... the filter for the Sysdiagrams we want to count
     *   }
     * })
    **/
    count<T extends sysdiagramsCountArgs>(
      args?: Subset<T, sysdiagramsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SysdiagramsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sysdiagrams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SysdiagramsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SysdiagramsAggregateArgs>(args: Subset<T, SysdiagramsAggregateArgs>): PrismaPromise<GetSysdiagramsAggregateType<T>>

    /**
     * Group by Sysdiagrams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SysdiagramsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SysdiagramsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SysdiagramsGroupByArgs['orderBy'] }
        : { orderBy?: SysdiagramsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SysdiagramsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSysdiagramsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sysdiagrams.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sysdiagramsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sysdiagrams base type for findUnique actions
   */
  export type sysdiagramsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
    /**
     * Filter, which sysdiagrams to fetch.
     * 
    **/
    where: sysdiagramsWhereUniqueInput
  }

  /**
   * sysdiagrams: findUnique
   */
  export interface sysdiagramsFindUniqueArgs extends sysdiagramsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sysdiagrams base type for findFirst actions
   */
  export type sysdiagramsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
    /**
     * Filter, which sysdiagrams to fetch.
     * 
    **/
    where?: sysdiagramsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sysdiagrams to fetch.
     * 
    **/
    orderBy?: Enumerable<sysdiagramsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sysdiagrams.
     * 
    **/
    cursor?: sysdiagramsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sysdiagrams from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sysdiagrams.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sysdiagrams.
     * 
    **/
    distinct?: Enumerable<SysdiagramsScalarFieldEnum>
  }

  /**
   * sysdiagrams: findFirst
   */
  export interface sysdiagramsFindFirstArgs extends sysdiagramsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sysdiagrams findMany
   */
  export type sysdiagramsFindManyArgs = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
    /**
     * Filter, which sysdiagrams to fetch.
     * 
    **/
    where?: sysdiagramsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sysdiagrams to fetch.
     * 
    **/
    orderBy?: Enumerable<sysdiagramsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sysdiagrams.
     * 
    **/
    cursor?: sysdiagramsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sysdiagrams from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sysdiagrams.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SysdiagramsScalarFieldEnum>
  }


  /**
   * sysdiagrams create
   */
  export type sysdiagramsCreateArgs = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
    /**
     * The data needed to create a sysdiagrams.
     * 
    **/
    data: XOR<sysdiagramsCreateInput, sysdiagramsUncheckedCreateInput>
  }


  /**
   * sysdiagrams createMany
   */
  export type sysdiagramsCreateManyArgs = {
    /**
     * The data used to create many sysdiagrams.
     * 
    **/
    data: Enumerable<sysdiagramsCreateManyInput>
  }


  /**
   * sysdiagrams update
   */
  export type sysdiagramsUpdateArgs = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
    /**
     * The data needed to update a sysdiagrams.
     * 
    **/
    data: XOR<sysdiagramsUpdateInput, sysdiagramsUncheckedUpdateInput>
    /**
     * Choose, which sysdiagrams to update.
     * 
    **/
    where: sysdiagramsWhereUniqueInput
  }


  /**
   * sysdiagrams updateMany
   */
  export type sysdiagramsUpdateManyArgs = {
    /**
     * The data used to update sysdiagrams.
     * 
    **/
    data: XOR<sysdiagramsUpdateManyMutationInput, sysdiagramsUncheckedUpdateManyInput>
    /**
     * Filter which sysdiagrams to update
     * 
    **/
    where?: sysdiagramsWhereInput
  }


  /**
   * sysdiagrams upsert
   */
  export type sysdiagramsUpsertArgs = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
    /**
     * The filter to search for the sysdiagrams to update in case it exists.
     * 
    **/
    where: sysdiagramsWhereUniqueInput
    /**
     * In case the sysdiagrams found by the `where` argument doesn't exist, create a new sysdiagrams with this data.
     * 
    **/
    create: XOR<sysdiagramsCreateInput, sysdiagramsUncheckedCreateInput>
    /**
     * In case the sysdiagrams was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<sysdiagramsUpdateInput, sysdiagramsUncheckedUpdateInput>
  }


  /**
   * sysdiagrams delete
   */
  export type sysdiagramsDeleteArgs = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
    /**
     * Filter which sysdiagrams to delete.
     * 
    **/
    where: sysdiagramsWhereUniqueInput
  }


  /**
   * sysdiagrams deleteMany
   */
  export type sysdiagramsDeleteManyArgs = {
    /**
     * Filter which sysdiagrams to delete
     * 
    **/
    where?: sysdiagramsWhereInput
  }


  /**
   * sysdiagrams: findUniqueOrThrow
   */
  export type sysdiagramsFindUniqueOrThrowArgs = sysdiagramsFindUniqueArgsBase
      

  /**
   * sysdiagrams: findFirstOrThrow
   */
  export type sysdiagramsFindFirstOrThrowArgs = sysdiagramsFindFirstArgsBase
      

  /**
   * sysdiagrams without action
   */
  export type sysdiagramsArgs = {
    /**
     * Select specific fields to fetch from the sysdiagrams
     * 
    **/
    select?: sysdiagramsSelect | null
  }



  /**
   * Model User
   */


  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
    RoleId: number | null
  }

  export type UserSumAggregateOutputType = {
    Id: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
    RoleId: number | null
  }

  export type UserMinAggregateOutputType = {
    Id: number | null
    FirstName: string | null
    LastName: string | null
    EmailID: string | null
    UserName: string | null
    Password: string | null
    IsActive: boolean | null
    LastAccess: Date | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
    IsVerified: boolean | null
    ActivationCode: string | null
    PasswordResetDuration: Date | null
    RoleId: number | null
  }

  export type UserMaxAggregateOutputType = {
    Id: number | null
    FirstName: string | null
    LastName: string | null
    EmailID: string | null
    UserName: string | null
    Password: string | null
    IsActive: boolean | null
    LastAccess: Date | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
    IsVerified: boolean | null
    ActivationCode: string | null
    PasswordResetDuration: Date | null
    RoleId: number | null
  }

  export type UserCountAggregateOutputType = {
    Id: number
    FirstName: number
    LastName: number
    EmailID: number
    UserName: number
    Password: number
    IsActive: number
    LastAccess: number
    CreatedBy: number
    CreatedDate: number
    ModifiedBy: number
    ModifiedDate: number
    IsVerified: number
    ActivationCode: number
    PasswordResetDuration: number
    RoleId: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
    RoleId?: true
  }

  export type UserSumAggregateInputType = {
    Id?: true
    CreatedBy?: true
    ModifiedBy?: true
    RoleId?: true
  }

  export type UserMinAggregateInputType = {
    Id?: true
    FirstName?: true
    LastName?: true
    EmailID?: true
    UserName?: true
    Password?: true
    IsActive?: true
    LastAccess?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
    IsVerified?: true
    ActivationCode?: true
    PasswordResetDuration?: true
    RoleId?: true
  }

  export type UserMaxAggregateInputType = {
    Id?: true
    FirstName?: true
    LastName?: true
    EmailID?: true
    UserName?: true
    Password?: true
    IsActive?: true
    LastAccess?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
    IsVerified?: true
    ActivationCode?: true
    PasswordResetDuration?: true
    RoleId?: true
  }

  export type UserCountAggregateInputType = {
    Id?: true
    FirstName?: true
    LastName?: true
    EmailID?: true
    UserName?: true
    Password?: true
    IsActive?: true
    LastAccess?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
    IsVerified?: true
    ActivationCode?: true
    PasswordResetDuration?: true
    RoleId?: true
    _all?: true
  }

  export type UserAggregateArgs = {
    /**
     * Filter which User to aggregate.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs = {
    where?: UserWhereInput
    orderBy?: Enumerable<UserOrderByWithAggregationInput>
    by: Array<UserScalarFieldEnum>
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }


  export type UserGroupByOutputType = {
    Id: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName: string | null
    Password: string | null
    IsActive: boolean
    LastAccess: Date | null
    CreatedBy: number
    CreatedDate: Date
    ModifiedBy: number | null
    ModifiedDate: Date | null
    IsVerified: boolean | null
    ActivationCode: string | null
    PasswordResetDuration: Date | null
    RoleId: number | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect = {
    Id?: boolean
    FirstName?: boolean
    LastName?: boolean
    EmailID?: boolean
    UserName?: boolean
    Password?: boolean
    IsActive?: boolean
    LastAccess?: boolean
    CreatedBy?: boolean
    CreatedDate?: boolean
    ModifiedBy?: boolean
    ModifiedDate?: boolean
    IsVerified?: boolean
    ActivationCode?: boolean
    PasswordResetDuration?: boolean
    RoleId?: boolean
    RoleMaster?: boolean | RoleMasterArgs
    Notification_Notification_CreatedByToUser?: boolean | NotificationFindManyArgs
    Notification_Notification_ModifiedByToUser?: boolean | NotificationFindManyArgs
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: boolean | NotificationTemplateFindManyArgs
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: boolean | NotificationTemplateFindManyArgs
    UserResetCredential_UserToUserResetCredential_UserId?: boolean | UserResetCredentialFindManyArgs
    UserResetCredential_UserToUserResetCredential_CreatedBy?: boolean | UserResetCredentialFindManyArgs
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: boolean | UserResetCredentialFindManyArgs
    _count?: boolean | UserCountOutputTypeArgs
  }


  export type UserInclude = {
    RoleMaster?: boolean | RoleMasterArgs
    Notification_Notification_CreatedByToUser?: boolean | NotificationFindManyArgs
    Notification_Notification_ModifiedByToUser?: boolean | NotificationFindManyArgs
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: boolean | NotificationTemplateFindManyArgs
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: boolean | NotificationTemplateFindManyArgs
    UserResetCredential_UserToUserResetCredential_UserId?: boolean | UserResetCredentialFindManyArgs
    UserResetCredential_UserToUserResetCredential_CreatedBy?: boolean | UserResetCredentialFindManyArgs
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: boolean | UserResetCredentialFindManyArgs
    _count?: boolean | UserCountOutputTypeArgs
  } 

  export type UserGetPayload<S extends boolean | null | undefined | UserArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? User :
    S extends undefined ? never :
    S extends { include: any } & (UserArgs | UserFindManyArgs)
    ? User  & {
    [P in TrueKeys<S['include']>]:
        P extends 'RoleMaster' ? RoleMasterGetPayload<Exclude<S['include'], undefined | null>[P]> | null :
        P extends 'Notification_Notification_CreatedByToUser' ? Array < NotificationGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'Notification_Notification_ModifiedByToUser' ? Array < NotificationGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'NotificationTemplate_NotificationTemplate_CreatedByToUser' ? Array < NotificationTemplateGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'NotificationTemplate_NotificationTemplate_ModifiedByToUser' ? Array < NotificationTemplateGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'UserResetCredential_UserToUserResetCredential_UserId' ? Array < UserResetCredentialGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'UserResetCredential_UserToUserResetCredential_CreatedBy' ? Array < UserResetCredentialGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends 'UserResetCredential_UserToUserResetCredential_ModifiedBy' ? Array < UserResetCredentialGetPayload<Exclude<S['include'], undefined | null>[P]>>  :
        P extends '_count' ? UserCountOutputTypeGetPayload<Exclude<S['include'], undefined | null>[P]> :  never
  } 
    : S extends { select: any } & (UserArgs | UserFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
        P extends 'RoleMaster' ? RoleMasterGetPayload<Exclude<S['select'], undefined | null>[P]> | null :
        P extends 'Notification_Notification_CreatedByToUser' ? Array < NotificationGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'Notification_Notification_ModifiedByToUser' ? Array < NotificationGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'NotificationTemplate_NotificationTemplate_CreatedByToUser' ? Array < NotificationTemplateGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'NotificationTemplate_NotificationTemplate_ModifiedByToUser' ? Array < NotificationTemplateGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'UserResetCredential_UserToUserResetCredential_UserId' ? Array < UserResetCredentialGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'UserResetCredential_UserToUserResetCredential_CreatedBy' ? Array < UserResetCredentialGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends 'UserResetCredential_UserToUserResetCredential_ModifiedBy' ? Array < UserResetCredentialGetPayload<Exclude<S['select'], undefined | null>[P]>>  :
        P extends '_count' ? UserCountOutputTypeGetPayload<Exclude<S['select'], undefined | null>[P]> :  P extends keyof User ? User[P] : never
  } 
      : User


  type UserCountArgs = Merge<
    Omit<UserFindManyArgs, 'select' | 'include'> & {
      select?: UserCountAggregateInputType | true
    }
  >

  export interface UserDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'User'> extends True ? Prisma__UserClient<UserGetPayload<T>> : Prisma__UserClient<UserGetPayload<T> | null, null>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'User'> extends True ? Prisma__UserClient<UserGetPayload<T>> : Prisma__UserClient<UserGetPayload<T> | null, null>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs>(
      args?: SelectSubset<T, UserFindManyArgs>
    ): PrismaPromise<Array<UserGetPayload<T>>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs>(
      args: SelectSubset<T, UserCreateArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Create many Users.
     *     @param {UserCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserCreateManyArgs>(
      args?: SelectSubset<T, UserCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs>(
      args: SelectSubset<T, UserDeleteArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs>(
      args: SelectSubset<T, UserUpdateArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs>(
      args?: SelectSubset<T, UserDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs>(
      args: SelectSubset<T, UserUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs>(
      args: SelectSubset<T, UserUpsertArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Find one User that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UserFindUniqueOrThrowArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Find the first User that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UserFindFirstOrThrowArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    RoleMaster<T extends RoleMasterArgs= {}>(args?: Subset<T, RoleMasterArgs>): Prisma__RoleMasterClient<RoleMasterGetPayload<T> | Null>;

    Notification_Notification_CreatedByToUser<T extends NotificationFindManyArgs= {}>(args?: Subset<T, NotificationFindManyArgs>): PrismaPromise<Array<NotificationGetPayload<T>>| Null>;

    Notification_Notification_ModifiedByToUser<T extends NotificationFindManyArgs= {}>(args?: Subset<T, NotificationFindManyArgs>): PrismaPromise<Array<NotificationGetPayload<T>>| Null>;

    NotificationTemplate_NotificationTemplate_CreatedByToUser<T extends NotificationTemplateFindManyArgs= {}>(args?: Subset<T, NotificationTemplateFindManyArgs>): PrismaPromise<Array<NotificationTemplateGetPayload<T>>| Null>;

    NotificationTemplate_NotificationTemplate_ModifiedByToUser<T extends NotificationTemplateFindManyArgs= {}>(args?: Subset<T, NotificationTemplateFindManyArgs>): PrismaPromise<Array<NotificationTemplateGetPayload<T>>| Null>;

    UserResetCredential_UserToUserResetCredential_UserId<T extends UserResetCredentialFindManyArgs= {}>(args?: Subset<T, UserResetCredentialFindManyArgs>): PrismaPromise<Array<UserResetCredentialGetPayload<T>>| Null>;

    UserResetCredential_UserToUserResetCredential_CreatedBy<T extends UserResetCredentialFindManyArgs= {}>(args?: Subset<T, UserResetCredentialFindManyArgs>): PrismaPromise<Array<UserResetCredentialGetPayload<T>>| Null>;

    UserResetCredential_UserToUserResetCredential_ModifiedBy<T extends UserResetCredentialFindManyArgs= {}>(args?: Subset<T, UserResetCredentialFindManyArgs>): PrismaPromise<Array<UserResetCredentialGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * User base type for findUnique actions
   */
  export type UserFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where: UserWhereUniqueInput
  }

  /**
   * User: findUnique
   */
  export interface UserFindUniqueArgs extends UserFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User base type for findFirst actions
   */
  export type UserFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     * 
    **/
    distinct?: Enumerable<UserScalarFieldEnum>
  }

  /**
   * User: findFirst
   */
  export interface UserFindFirstArgs extends UserFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User findMany
   */
  export type UserFindManyArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User create
   */
  export type UserCreateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to create a User.
     * 
    **/
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }


  /**
   * User createMany
   */
  export type UserCreateManyArgs = {
    /**
     * The data used to create many Users.
     * 
    **/
    data: Enumerable<UserCreateManyInput>
  }


  /**
   * User update
   */
  export type UserUpdateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to update a User.
     * 
    **/
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs = {
    /**
     * The data used to update Users.
     * 
    **/
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     * 
    **/
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The filter to search for the User to update in case it exists.
     * 
    **/
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     * 
    **/
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter which User to delete.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs = {
    /**
     * Filter which Users to delete
     * 
    **/
    where?: UserWhereInput
  }


  /**
   * User: findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs = UserFindUniqueArgsBase
      

  /**
   * User: findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs = UserFindFirstArgsBase
      

  /**
   * User without action
   */
  export type UserArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
  }



  /**
   * Model UserResetCredential
   */


  export type AggregateUserResetCredential = {
    _count: UserResetCredentialCountAggregateOutputType | null
    _avg: UserResetCredentialAvgAggregateOutputType | null
    _sum: UserResetCredentialSumAggregateOutputType | null
    _min: UserResetCredentialMinAggregateOutputType | null
    _max: UserResetCredentialMaxAggregateOutputType | null
  }

  export type UserResetCredentialAvgAggregateOutputType = {
    Id: number | null
    UserId: number | null
    TimeValid: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type UserResetCredentialSumAggregateOutputType = {
    Id: number | null
    UserId: number | null
    TimeValid: number | null
    CreatedBy: number | null
    ModifiedBy: number | null
  }

  export type UserResetCredentialMinAggregateOutputType = {
    Id: number | null
    UserId: number | null
    ResetCode: string | null
    IsActive: boolean | null
    TimeValid: number | null
    EmailSentTime: Date | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
  }

  export type UserResetCredentialMaxAggregateOutputType = {
    Id: number | null
    UserId: number | null
    ResetCode: string | null
    IsActive: boolean | null
    TimeValid: number | null
    EmailSentTime: Date | null
    CreatedBy: number | null
    CreatedDate: Date | null
    ModifiedBy: number | null
    ModifiedDate: Date | null
  }

  export type UserResetCredentialCountAggregateOutputType = {
    Id: number
    UserId: number
    ResetCode: number
    IsActive: number
    TimeValid: number
    EmailSentTime: number
    CreatedBy: number
    CreatedDate: number
    ModifiedBy: number
    ModifiedDate: number
    _all: number
  }


  export type UserResetCredentialAvgAggregateInputType = {
    Id?: true
    UserId?: true
    TimeValid?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type UserResetCredentialSumAggregateInputType = {
    Id?: true
    UserId?: true
    TimeValid?: true
    CreatedBy?: true
    ModifiedBy?: true
  }

  export type UserResetCredentialMinAggregateInputType = {
    Id?: true
    UserId?: true
    ResetCode?: true
    IsActive?: true
    TimeValid?: true
    EmailSentTime?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
  }

  export type UserResetCredentialMaxAggregateInputType = {
    Id?: true
    UserId?: true
    ResetCode?: true
    IsActive?: true
    TimeValid?: true
    EmailSentTime?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
  }

  export type UserResetCredentialCountAggregateInputType = {
    Id?: true
    UserId?: true
    ResetCode?: true
    IsActive?: true
    TimeValid?: true
    EmailSentTime?: true
    CreatedBy?: true
    CreatedDate?: true
    ModifiedBy?: true
    ModifiedDate?: true
    _all?: true
  }

  export type UserResetCredentialAggregateArgs = {
    /**
     * Filter which UserResetCredential to aggregate.
     * 
    **/
    where?: UserResetCredentialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserResetCredentials to fetch.
     * 
    **/
    orderBy?: Enumerable<UserResetCredentialOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserResetCredentialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserResetCredentials from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserResetCredentials.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserResetCredentials
    **/
    _count?: true | UserResetCredentialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserResetCredentialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserResetCredentialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserResetCredentialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserResetCredentialMaxAggregateInputType
  }

  export type GetUserResetCredentialAggregateType<T extends UserResetCredentialAggregateArgs> = {
        [P in keyof T & keyof AggregateUserResetCredential]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserResetCredential[P]>
      : GetScalarType<T[P], AggregateUserResetCredential[P]>
  }




  export type UserResetCredentialGroupByArgs = {
    where?: UserResetCredentialWhereInput
    orderBy?: Enumerable<UserResetCredentialOrderByWithAggregationInput>
    by: Array<UserResetCredentialScalarFieldEnum>
    having?: UserResetCredentialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserResetCredentialCountAggregateInputType | true
    _avg?: UserResetCredentialAvgAggregateInputType
    _sum?: UserResetCredentialSumAggregateInputType
    _min?: UserResetCredentialMinAggregateInputType
    _max?: UserResetCredentialMaxAggregateInputType
  }


  export type UserResetCredentialGroupByOutputType = {
    Id: number
    UserId: number
    ResetCode: string
    IsActive: boolean
    TimeValid: number
    EmailSentTime: Date
    CreatedBy: number
    CreatedDate: Date
    ModifiedBy: number | null
    ModifiedDate: Date | null
    _count: UserResetCredentialCountAggregateOutputType | null
    _avg: UserResetCredentialAvgAggregateOutputType | null
    _sum: UserResetCredentialSumAggregateOutputType | null
    _min: UserResetCredentialMinAggregateOutputType | null
    _max: UserResetCredentialMaxAggregateOutputType | null
  }

  type GetUserResetCredentialGroupByPayload<T extends UserResetCredentialGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UserResetCredentialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserResetCredentialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserResetCredentialGroupByOutputType[P]>
            : GetScalarType<T[P], UserResetCredentialGroupByOutputType[P]>
        }
      >
    >


  export type UserResetCredentialSelect = {
    Id?: boolean
    UserId?: boolean
    ResetCode?: boolean
    IsActive?: boolean
    TimeValid?: boolean
    EmailSentTime?: boolean
    CreatedBy?: boolean
    CreatedDate?: boolean
    ModifiedBy?: boolean
    ModifiedDate?: boolean
    User_UserToUserResetCredential_UserId?: boolean | UserArgs
    User_UserToUserResetCredential_CreatedBy?: boolean | UserArgs
    User_UserToUserResetCredential_ModifiedBy?: boolean | UserArgs
  }


  export type UserResetCredentialInclude = {
    User_UserToUserResetCredential_UserId?: boolean | UserArgs
    User_UserToUserResetCredential_CreatedBy?: boolean | UserArgs
    User_UserToUserResetCredential_ModifiedBy?: boolean | UserArgs
  } 

  export type UserResetCredentialGetPayload<S extends boolean | null | undefined | UserResetCredentialArgs, U = keyof S> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UserResetCredential :
    S extends undefined ? never :
    S extends { include: any } & (UserResetCredentialArgs | UserResetCredentialFindManyArgs)
    ? UserResetCredential  & {
    [P in TrueKeys<S['include']>]:
        P extends 'User_UserToUserResetCredential_UserId' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'User_UserToUserResetCredential_CreatedBy' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> :
        P extends 'User_UserToUserResetCredential_ModifiedBy' ? UserGetPayload<Exclude<S['include'], undefined | null>[P]> | null :  never
  } 
    : S extends { select: any } & (UserResetCredentialArgs | UserResetCredentialFindManyArgs)
      ? {
    [P in TrueKeys<S['select']>]:
        P extends 'User_UserToUserResetCredential_UserId' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'User_UserToUserResetCredential_CreatedBy' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> :
        P extends 'User_UserToUserResetCredential_ModifiedBy' ? UserGetPayload<Exclude<S['select'], undefined | null>[P]> | null :  P extends keyof UserResetCredential ? UserResetCredential[P] : never
  } 
      : UserResetCredential


  type UserResetCredentialCountArgs = Merge<
    Omit<UserResetCredentialFindManyArgs, 'select' | 'include'> & {
      select?: UserResetCredentialCountAggregateInputType | true
    }
  >

  export interface UserResetCredentialDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one UserResetCredential that matches the filter.
     * @param {UserResetCredentialFindUniqueArgs} args - Arguments to find a UserResetCredential
     * @example
     * // Get one UserResetCredential
     * const userResetCredential = await prisma.userResetCredential.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserResetCredentialFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserResetCredentialFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserResetCredential'> extends True ? Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>> : Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T> | null, null>

    /**
     * Find the first UserResetCredential that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserResetCredentialFindFirstArgs} args - Arguments to find a UserResetCredential
     * @example
     * // Get one UserResetCredential
     * const userResetCredential = await prisma.userResetCredential.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserResetCredentialFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserResetCredentialFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserResetCredential'> extends True ? Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>> : Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T> | null, null>

    /**
     * Find zero or more UserResetCredentials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserResetCredentialFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserResetCredentials
     * const userResetCredentials = await prisma.userResetCredential.findMany()
     * 
     * // Get first 10 UserResetCredentials
     * const userResetCredentials = await prisma.userResetCredential.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const userResetCredentialWithIdOnly = await prisma.userResetCredential.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends UserResetCredentialFindManyArgs>(
      args?: SelectSubset<T, UserResetCredentialFindManyArgs>
    ): PrismaPromise<Array<UserResetCredentialGetPayload<T>>>

    /**
     * Create a UserResetCredential.
     * @param {UserResetCredentialCreateArgs} args - Arguments to create a UserResetCredential.
     * @example
     * // Create one UserResetCredential
     * const UserResetCredential = await prisma.userResetCredential.create({
     *   data: {
     *     // ... data to create a UserResetCredential
     *   }
     * })
     * 
    **/
    create<T extends UserResetCredentialCreateArgs>(
      args: SelectSubset<T, UserResetCredentialCreateArgs>
    ): Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>>

    /**
     * Create many UserResetCredentials.
     *     @param {UserResetCredentialCreateManyArgs} args - Arguments to create many UserResetCredentials.
     *     @example
     *     // Create many UserResetCredentials
     *     const userResetCredential = await prisma.userResetCredential.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserResetCredentialCreateManyArgs>(
      args?: SelectSubset<T, UserResetCredentialCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a UserResetCredential.
     * @param {UserResetCredentialDeleteArgs} args - Arguments to delete one UserResetCredential.
     * @example
     * // Delete one UserResetCredential
     * const UserResetCredential = await prisma.userResetCredential.delete({
     *   where: {
     *     // ... filter to delete one UserResetCredential
     *   }
     * })
     * 
    **/
    delete<T extends UserResetCredentialDeleteArgs>(
      args: SelectSubset<T, UserResetCredentialDeleteArgs>
    ): Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>>

    /**
     * Update one UserResetCredential.
     * @param {UserResetCredentialUpdateArgs} args - Arguments to update one UserResetCredential.
     * @example
     * // Update one UserResetCredential
     * const userResetCredential = await prisma.userResetCredential.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserResetCredentialUpdateArgs>(
      args: SelectSubset<T, UserResetCredentialUpdateArgs>
    ): Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>>

    /**
     * Delete zero or more UserResetCredentials.
     * @param {UserResetCredentialDeleteManyArgs} args - Arguments to filter UserResetCredentials to delete.
     * @example
     * // Delete a few UserResetCredentials
     * const { count } = await prisma.userResetCredential.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserResetCredentialDeleteManyArgs>(
      args?: SelectSubset<T, UserResetCredentialDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserResetCredentials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserResetCredentialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserResetCredentials
     * const userResetCredential = await prisma.userResetCredential.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserResetCredentialUpdateManyArgs>(
      args: SelectSubset<T, UserResetCredentialUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserResetCredential.
     * @param {UserResetCredentialUpsertArgs} args - Arguments to update or create a UserResetCredential.
     * @example
     * // Update or create a UserResetCredential
     * const userResetCredential = await prisma.userResetCredential.upsert({
     *   create: {
     *     // ... data to create a UserResetCredential
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserResetCredential we want to update
     *   }
     * })
    **/
    upsert<T extends UserResetCredentialUpsertArgs>(
      args: SelectSubset<T, UserResetCredentialUpsertArgs>
    ): Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>>

    /**
     * Find one UserResetCredential that matches the filter or throw
     * `NotFoundError` if no matches were found.
     * @param {UserResetCredentialFindUniqueOrThrowArgs} args - Arguments to find a UserResetCredential
     * @example
     * // Get one UserResetCredential
     * const userResetCredential = await prisma.userResetCredential.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserResetCredentialFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UserResetCredentialFindUniqueOrThrowArgs>
    ): Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>>

    /**
     * Find the first UserResetCredential that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserResetCredentialFindFirstOrThrowArgs} args - Arguments to find a UserResetCredential
     * @example
     * // Get one UserResetCredential
     * const userResetCredential = await prisma.userResetCredential.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserResetCredentialFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UserResetCredentialFindFirstOrThrowArgs>
    ): Prisma__UserResetCredentialClient<UserResetCredentialGetPayload<T>>

    /**
     * Count the number of UserResetCredentials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserResetCredentialCountArgs} args - Arguments to filter UserResetCredentials to count.
     * @example
     * // Count the number of UserResetCredentials
     * const count = await prisma.userResetCredential.count({
     *   where: {
     *     // ... the filter for the UserResetCredentials we want to count
     *   }
     * })
    **/
    count<T extends UserResetCredentialCountArgs>(
      args?: Subset<T, UserResetCredentialCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserResetCredentialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserResetCredential.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserResetCredentialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserResetCredentialAggregateArgs>(args: Subset<T, UserResetCredentialAggregateArgs>): PrismaPromise<GetUserResetCredentialAggregateType<T>>

    /**
     * Group by UserResetCredential.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserResetCredentialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserResetCredentialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserResetCredentialGroupByArgs['orderBy'] }
        : { orderBy?: UserResetCredentialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserResetCredentialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserResetCredentialGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for UserResetCredential.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserResetCredentialClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User_UserToUserResetCredential_UserId<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    User_UserToUserResetCredential_CreatedBy<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    User_UserToUserResetCredential_ModifiedBy<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * UserResetCredential base type for findUnique actions
   */
  export type UserResetCredentialFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
    /**
     * Filter, which UserResetCredential to fetch.
     * 
    **/
    where: UserResetCredentialWhereUniqueInput
  }

  /**
   * UserResetCredential: findUnique
   */
  export interface UserResetCredentialFindUniqueArgs extends UserResetCredentialFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * UserResetCredential base type for findFirst actions
   */
  export type UserResetCredentialFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
    /**
     * Filter, which UserResetCredential to fetch.
     * 
    **/
    where?: UserResetCredentialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserResetCredentials to fetch.
     * 
    **/
    orderBy?: Enumerable<UserResetCredentialOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserResetCredentials.
     * 
    **/
    cursor?: UserResetCredentialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserResetCredentials from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserResetCredentials.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserResetCredentials.
     * 
    **/
    distinct?: Enumerable<UserResetCredentialScalarFieldEnum>
  }

  /**
   * UserResetCredential: findFirst
   */
  export interface UserResetCredentialFindFirstArgs extends UserResetCredentialFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * UserResetCredential findMany
   */
  export type UserResetCredentialFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
    /**
     * Filter, which UserResetCredentials to fetch.
     * 
    **/
    where?: UserResetCredentialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserResetCredentials to fetch.
     * 
    **/
    orderBy?: Enumerable<UserResetCredentialOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserResetCredentials.
     * 
    **/
    cursor?: UserResetCredentialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserResetCredentials from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserResetCredentials.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserResetCredentialScalarFieldEnum>
  }


  /**
   * UserResetCredential create
   */
  export type UserResetCredentialCreateArgs = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
    /**
     * The data needed to create a UserResetCredential.
     * 
    **/
    data: XOR<UserResetCredentialCreateInput, UserResetCredentialUncheckedCreateInput>
  }


  /**
   * UserResetCredential createMany
   */
  export type UserResetCredentialCreateManyArgs = {
    /**
     * The data used to create many UserResetCredentials.
     * 
    **/
    data: Enumerable<UserResetCredentialCreateManyInput>
  }


  /**
   * UserResetCredential update
   */
  export type UserResetCredentialUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
    /**
     * The data needed to update a UserResetCredential.
     * 
    **/
    data: XOR<UserResetCredentialUpdateInput, UserResetCredentialUncheckedUpdateInput>
    /**
     * Choose, which UserResetCredential to update.
     * 
    **/
    where: UserResetCredentialWhereUniqueInput
  }


  /**
   * UserResetCredential updateMany
   */
  export type UserResetCredentialUpdateManyArgs = {
    /**
     * The data used to update UserResetCredentials.
     * 
    **/
    data: XOR<UserResetCredentialUpdateManyMutationInput, UserResetCredentialUncheckedUpdateManyInput>
    /**
     * Filter which UserResetCredentials to update
     * 
    **/
    where?: UserResetCredentialWhereInput
  }


  /**
   * UserResetCredential upsert
   */
  export type UserResetCredentialUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
    /**
     * The filter to search for the UserResetCredential to update in case it exists.
     * 
    **/
    where: UserResetCredentialWhereUniqueInput
    /**
     * In case the UserResetCredential found by the `where` argument doesn't exist, create a new UserResetCredential with this data.
     * 
    **/
    create: XOR<UserResetCredentialCreateInput, UserResetCredentialUncheckedCreateInput>
    /**
     * In case the UserResetCredential was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserResetCredentialUpdateInput, UserResetCredentialUncheckedUpdateInput>
  }


  /**
   * UserResetCredential delete
   */
  export type UserResetCredentialDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
    /**
     * Filter which UserResetCredential to delete.
     * 
    **/
    where: UserResetCredentialWhereUniqueInput
  }


  /**
   * UserResetCredential deleteMany
   */
  export type UserResetCredentialDeleteManyArgs = {
    /**
     * Filter which UserResetCredentials to delete
     * 
    **/
    where?: UserResetCredentialWhereInput
  }


  /**
   * UserResetCredential: findUniqueOrThrow
   */
  export type UserResetCredentialFindUniqueOrThrowArgs = UserResetCredentialFindUniqueArgsBase
      

  /**
   * UserResetCredential: findFirstOrThrow
   */
  export type UserResetCredentialFindFirstOrThrowArgs = UserResetCredentialFindFirstArgsBase
      

  /**
   * UserResetCredential without action
   */
  export type UserResetCredentialArgs = {
    /**
     * Select specific fields to fetch from the UserResetCredential
     * 
    **/
    select?: UserResetCredentialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserResetCredentialInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const APIAuditScalarFieldEnum: {
    id: 'id',
    ClientURL: 'ClientURL',
    UserEmail: 'UserEmail',
    Requestobject: 'Requestobject',
    Responseobject: 'Responseobject',
    Startime: 'Startime',
    EndTime: 'EndTime',
    AuditErrorLogId: 'AuditErrorLogId',
    Controller: 'Controller',
    Method: 'Method'
  };

  export type APIAuditScalarFieldEnum = (typeof APIAuditScalarFieldEnum)[keyof typeof APIAuditScalarFieldEnum]


  export const ErrorLogScalarFieldEnum: {
    ErrorLogId: 'ErrorLogId',
    UserId: 'UserId',
    Message: 'Message',
    StackTrace: 'StackTrace',
    IPAddress: 'IPAddress',
    TimeStamp: 'TimeStamp',
    Event: 'Event',
    UserName: 'UserName',
    AuditErrorLogId: 'AuditErrorLogId'
  };

  export type ErrorLogScalarFieldEnum = (typeof ErrorLogScalarFieldEnum)[keyof typeof ErrorLogScalarFieldEnum]


  export const ModuleMasterScalarFieldEnum: {
    Id: 'Id',
    ParentId: 'ParentId',
    Name: 'Name',
    DisplayName: 'DisplayName',
    URL: 'URL',
    OrderNo: 'OrderNo',
    Description: 'Description',
    IsActive: 'IsActive',
    CreatedDate: 'CreatedDate',
    CreatedBy: 'CreatedBy',
    ModifiedDate: 'ModifiedDate',
    ModifiedBy: 'ModifiedBy',
    IsParentMenu: 'IsParentMenu',
    MenuIconClass: 'MenuIconClass'
  };

  export type ModuleMasterScalarFieldEnum = (typeof ModuleMasterScalarFieldEnum)[keyof typeof ModuleMasterScalarFieldEnum]


  export const ModulePermissionScalarFieldEnum: {
    PermissionId: 'PermissionId',
    ModuleId: 'ModuleId',
    IsDefaultTrue: 'IsDefaultTrue',
    IsActive: 'IsActive',
    CreatedDate: 'CreatedDate',
    CreatedBy: 'CreatedBy'
  };

  export type ModulePermissionScalarFieldEnum = (typeof ModulePermissionScalarFieldEnum)[keyof typeof ModulePermissionScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    Id: 'Id',
    NotificationTemplateId: 'NotificationTemplateId',
    Sender: 'Sender',
    Phone: 'Phone',
    Recipient: 'Recipient',
    CCRecipient: 'CCRecipient',
    Subject: 'Subject',
    Body: 'Body',
    NotificationType: 'NotificationType',
    IsProcessed: 'IsProcessed',
    ErrorMessage: 'ErrorMessage',
    RetryCount: 'RetryCount',
    SentDate: 'SentDate',
    CreatedBy: 'CreatedBy',
    CreatedDate: 'CreatedDate',
    ModifiedBy: 'ModifiedBy',
    ModifiedDate: 'ModifiedDate'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const NotificationTemplateScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    Description: 'Description',
    Subject: 'Subject',
    Body: 'Body',
    Type: 'Type',
    IsActive: 'IsActive',
    CreatedBy: 'CreatedBy',
    CreatedDate: 'CreatedDate',
    ModifiedBy: 'ModifiedBy',
    ModifiedDate: 'ModifiedDate'
  };

  export type NotificationTemplateScalarFieldEnum = (typeof NotificationTemplateScalarFieldEnum)[keyof typeof NotificationTemplateScalarFieldEnum]


  export const PermissionMasterScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    DisplayName: 'DisplayName',
    Description: 'Description',
    IsActive: 'IsActive',
    CreatedDate: 'CreatedDate',
    CreatedBy: 'CreatedBy',
    ModifiedDate: 'ModifiedDate',
    ModifiedBy: 'ModifiedBy'
  };

  export type PermissionMasterScalarFieldEnum = (typeof PermissionMasterScalarFieldEnum)[keyof typeof PermissionMasterScalarFieldEnum]


  export const RoleMasterScalarFieldEnum: {
    Id: 'Id',
    Name: 'Name',
    Description: 'Description',
    IsActive: 'IsActive',
    CreateDate: 'CreateDate',
    CreatedBy: 'CreatedBy',
    ModifiedDate: 'ModifiedDate',
    ModifiedBy: 'ModifiedBy'
  };

  export type RoleMasterScalarFieldEnum = (typeof RoleMasterScalarFieldEnum)[keyof typeof RoleMasterScalarFieldEnum]


  export const RolePermissionScalarFieldEnum: {
    RoleId: 'RoleId',
    ModuleId: 'ModuleId',
    PermissionId: 'PermissionId',
    Permission: 'Permission',
    CreatedDate: 'CreatedDate',
    CreatedBy: 'CreatedBy'
  };

  export type RolePermissionScalarFieldEnum = (typeof RolePermissionScalarFieldEnum)[keyof typeof RolePermissionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const SysdiagramsScalarFieldEnum: {
    name: 'name',
    principal_id: 'principal_id',
    diagram_id: 'diagram_id',
    version: 'version',
    definition: 'definition'
  };

  export type SysdiagramsScalarFieldEnum = (typeof SysdiagramsScalarFieldEnum)[keyof typeof SysdiagramsScalarFieldEnum]


  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable',
    Snapshot: 'Snapshot'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserResetCredentialScalarFieldEnum: {
    Id: 'Id',
    UserId: 'UserId',
    ResetCode: 'ResetCode',
    IsActive: 'IsActive',
    TimeValid: 'TimeValid',
    EmailSentTime: 'EmailSentTime',
    CreatedBy: 'CreatedBy',
    CreatedDate: 'CreatedDate',
    ModifiedBy: 'ModifiedBy',
    ModifiedDate: 'ModifiedDate'
  };

  export type UserResetCredentialScalarFieldEnum = (typeof UserResetCredentialScalarFieldEnum)[keyof typeof UserResetCredentialScalarFieldEnum]


  export const UserScalarFieldEnum: {
    Id: 'Id',
    FirstName: 'FirstName',
    LastName: 'LastName',
    EmailID: 'EmailID',
    UserName: 'UserName',
    Password: 'Password',
    IsActive: 'IsActive',
    LastAccess: 'LastAccess',
    CreatedBy: 'CreatedBy',
    CreatedDate: 'CreatedDate',
    ModifiedBy: 'ModifiedBy',
    ModifiedDate: 'ModifiedDate',
    IsVerified: 'IsVerified',
    ActivationCode: 'ActivationCode',
    PasswordResetDuration: 'PasswordResetDuration',
    RoleId: 'RoleId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  /**
   * Deep Input Types
   */


  export type APIAuditWhereInput = {
    AND?: Enumerable<APIAuditWhereInput>
    OR?: Enumerable<APIAuditWhereInput>
    NOT?: Enumerable<APIAuditWhereInput>
    id?: BigIntFilter | bigint | number
    ClientURL?: StringNullableFilter | string | null
    UserEmail?: StringNullableFilter | string | null
    Requestobject?: StringNullableFilter | string | null
    Responseobject?: StringNullableFilter | string | null
    Startime?: DateTimeNullableFilter | Date | string | null
    EndTime?: DateTimeNullableFilter | Date | string | null
    AuditErrorLogId?: StringNullableFilter | string | null
    Controller?: StringNullableFilter | string | null
    Method?: StringNullableFilter | string | null
  }

  export type APIAuditOrderByWithRelationInput = {
    id?: SortOrder
    ClientURL?: SortOrder
    UserEmail?: SortOrder
    Requestobject?: SortOrder
    Responseobject?: SortOrder
    Startime?: SortOrder
    EndTime?: SortOrder
    AuditErrorLogId?: SortOrder
    Controller?: SortOrder
    Method?: SortOrder
  }

  export type APIAuditWhereUniqueInput = {
    id?: bigint | number
  }

  export type APIAuditOrderByWithAggregationInput = {
    id?: SortOrder
    ClientURL?: SortOrder
    UserEmail?: SortOrder
    Requestobject?: SortOrder
    Responseobject?: SortOrder
    Startime?: SortOrder
    EndTime?: SortOrder
    AuditErrorLogId?: SortOrder
    Controller?: SortOrder
    Method?: SortOrder
    _count?: APIAuditCountOrderByAggregateInput
    _avg?: APIAuditAvgOrderByAggregateInput
    _max?: APIAuditMaxOrderByAggregateInput
    _min?: APIAuditMinOrderByAggregateInput
    _sum?: APIAuditSumOrderByAggregateInput
  }

  export type APIAuditScalarWhereWithAggregatesInput = {
    AND?: Enumerable<APIAuditScalarWhereWithAggregatesInput>
    OR?: Enumerable<APIAuditScalarWhereWithAggregatesInput>
    NOT?: Enumerable<APIAuditScalarWhereWithAggregatesInput>
    id?: BigIntWithAggregatesFilter | bigint | number
    ClientURL?: StringNullableWithAggregatesFilter | string | null
    UserEmail?: StringNullableWithAggregatesFilter | string | null
    Requestobject?: StringNullableWithAggregatesFilter | string | null
    Responseobject?: StringNullableWithAggregatesFilter | string | null
    Startime?: DateTimeNullableWithAggregatesFilter | Date | string | null
    EndTime?: DateTimeNullableWithAggregatesFilter | Date | string | null
    AuditErrorLogId?: StringNullableWithAggregatesFilter | string | null
    Controller?: StringNullableWithAggregatesFilter | string | null
    Method?: StringNullableWithAggregatesFilter | string | null
  }

  export type ErrorLogWhereInput = {
    AND?: Enumerable<ErrorLogWhereInput>
    OR?: Enumerable<ErrorLogWhereInput>
    NOT?: Enumerable<ErrorLogWhereInput>
    ErrorLogId?: IntFilter | number
    UserId?: IntFilter | number
    Message?: StringFilter | string
    StackTrace?: StringFilter | string
    IPAddress?: StringFilter | string
    TimeStamp?: DateTimeFilter | Date | string
    Event?: StringFilter | string
    UserName?: StringFilter | string
    AuditErrorLogId?: StringNullableFilter | string | null
  }

  export type ErrorLogOrderByWithRelationInput = {
    ErrorLogId?: SortOrder
    UserId?: SortOrder
    Message?: SortOrder
    StackTrace?: SortOrder
    IPAddress?: SortOrder
    TimeStamp?: SortOrder
    Event?: SortOrder
    UserName?: SortOrder
    AuditErrorLogId?: SortOrder
  }

  export type ErrorLogWhereUniqueInput = {
    ErrorLogId?: number
  }

  export type ErrorLogOrderByWithAggregationInput = {
    ErrorLogId?: SortOrder
    UserId?: SortOrder
    Message?: SortOrder
    StackTrace?: SortOrder
    IPAddress?: SortOrder
    TimeStamp?: SortOrder
    Event?: SortOrder
    UserName?: SortOrder
    AuditErrorLogId?: SortOrder
    _count?: ErrorLogCountOrderByAggregateInput
    _avg?: ErrorLogAvgOrderByAggregateInput
    _max?: ErrorLogMaxOrderByAggregateInput
    _min?: ErrorLogMinOrderByAggregateInput
    _sum?: ErrorLogSumOrderByAggregateInput
  }

  export type ErrorLogScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ErrorLogScalarWhereWithAggregatesInput>
    OR?: Enumerable<ErrorLogScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ErrorLogScalarWhereWithAggregatesInput>
    ErrorLogId?: IntWithAggregatesFilter | number
    UserId?: IntWithAggregatesFilter | number
    Message?: StringWithAggregatesFilter | string
    StackTrace?: StringWithAggregatesFilter | string
    IPAddress?: StringWithAggregatesFilter | string
    TimeStamp?: DateTimeWithAggregatesFilter | Date | string
    Event?: StringWithAggregatesFilter | string
    UserName?: StringWithAggregatesFilter | string
    AuditErrorLogId?: StringNullableWithAggregatesFilter | string | null
  }

  export type ModuleMasterWhereInput = {
    AND?: Enumerable<ModuleMasterWhereInput>
    OR?: Enumerable<ModuleMasterWhereInput>
    NOT?: Enumerable<ModuleMasterWhereInput>
    Id?: IntFilter | number
    ParentId?: IntFilter | number
    Name?: StringFilter | string
    DisplayName?: StringFilter | string
    URL?: StringNullableFilter | string | null
    OrderNo?: IntFilter | number
    Description?: StringNullableFilter | string | null
    IsActive?: BoolFilter | boolean
    CreatedDate?: DateTimeFilter | Date | string
    CreatedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    ModifiedBy?: IntNullableFilter | number | null
    IsParentMenu?: BoolNullableFilter | boolean | null
    MenuIconClass?: StringNullableFilter | string | null
  }

  export type ModuleMasterOrderByWithRelationInput = {
    Id?: SortOrder
    ParentId?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    URL?: SortOrder
    OrderNo?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    IsParentMenu?: SortOrder
    MenuIconClass?: SortOrder
  }

  export type ModuleMasterWhereUniqueInput = {
    Id?: number
  }

  export type ModuleMasterOrderByWithAggregationInput = {
    Id?: SortOrder
    ParentId?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    URL?: SortOrder
    OrderNo?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    IsParentMenu?: SortOrder
    MenuIconClass?: SortOrder
    _count?: ModuleMasterCountOrderByAggregateInput
    _avg?: ModuleMasterAvgOrderByAggregateInput
    _max?: ModuleMasterMaxOrderByAggregateInput
    _min?: ModuleMasterMinOrderByAggregateInput
    _sum?: ModuleMasterSumOrderByAggregateInput
  }

  export type ModuleMasterScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ModuleMasterScalarWhereWithAggregatesInput>
    OR?: Enumerable<ModuleMasterScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ModuleMasterScalarWhereWithAggregatesInput>
    Id?: IntWithAggregatesFilter | number
    ParentId?: IntWithAggregatesFilter | number
    Name?: StringWithAggregatesFilter | string
    DisplayName?: StringWithAggregatesFilter | string
    URL?: StringNullableWithAggregatesFilter | string | null
    OrderNo?: IntWithAggregatesFilter | number
    Description?: StringNullableWithAggregatesFilter | string | null
    IsActive?: BoolWithAggregatesFilter | boolean
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    CreatedBy?: IntNullableWithAggregatesFilter | number | null
    ModifiedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    ModifiedBy?: IntNullableWithAggregatesFilter | number | null
    IsParentMenu?: BoolNullableWithAggregatesFilter | boolean | null
    MenuIconClass?: StringNullableWithAggregatesFilter | string | null
  }

  export type ModulePermissionWhereInput = {
    AND?: Enumerable<ModulePermissionWhereInput>
    OR?: Enumerable<ModulePermissionWhereInput>
    NOT?: Enumerable<ModulePermissionWhereInput>
    PermissionId?: IntFilter | number
    ModuleId?: IntFilter | number
    IsDefaultTrue?: BoolFilter | boolean
    IsActive?: BoolFilter | boolean
    CreatedDate?: DateTimeFilter | Date | string
    CreatedBy?: IntFilter | number
  }

  export type ModulePermissionOrderByWithRelationInput = {
    PermissionId?: SortOrder
    ModuleId?: SortOrder
    IsDefaultTrue?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type ModulePermissionWhereUniqueInput = {
    PermissionId_ModuleId?: ModulePermissionPermissionIdModuleIdCompoundUniqueInput
  }

  export type ModulePermissionOrderByWithAggregationInput = {
    PermissionId?: SortOrder
    ModuleId?: SortOrder
    IsDefaultTrue?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    _count?: ModulePermissionCountOrderByAggregateInput
    _avg?: ModulePermissionAvgOrderByAggregateInput
    _max?: ModulePermissionMaxOrderByAggregateInput
    _min?: ModulePermissionMinOrderByAggregateInput
    _sum?: ModulePermissionSumOrderByAggregateInput
  }

  export type ModulePermissionScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ModulePermissionScalarWhereWithAggregatesInput>
    OR?: Enumerable<ModulePermissionScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ModulePermissionScalarWhereWithAggregatesInput>
    PermissionId?: IntWithAggregatesFilter | number
    ModuleId?: IntWithAggregatesFilter | number
    IsDefaultTrue?: BoolWithAggregatesFilter | boolean
    IsActive?: BoolWithAggregatesFilter | boolean
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    CreatedBy?: IntWithAggregatesFilter | number
  }

  export type NotificationWhereInput = {
    AND?: Enumerable<NotificationWhereInput>
    OR?: Enumerable<NotificationWhereInput>
    NOT?: Enumerable<NotificationWhereInput>
    Id?: IntFilter | number
    NotificationTemplateId?: IntFilter | number
    Sender?: StringNullableFilter | string | null
    Phone?: StringNullableFilter | string | null
    Recipient?: StringNullableFilter | string | null
    CCRecipient?: StringNullableFilter | string | null
    Subject?: StringNullableFilter | string | null
    Body?: StringFilter | string
    NotificationType?: StringFilter | string
    IsProcessed?: BoolFilter | boolean
    ErrorMessage?: StringNullableFilter | string | null
    RetryCount?: IntNullableFilter | number | null
    SentDate?: DateTimeFilter | Date | string
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    NotificationTemplate?: XOR<NotificationTemplateRelationFilter, NotificationTemplateWhereInput>
    User_Notification_CreatedByToUser?: XOR<UserRelationFilter, UserWhereInput>
    User_Notification_ModifiedByToUser?: XOR<UserRelationFilter, UserWhereInput> | null
  }

  export type NotificationOrderByWithRelationInput = {
    Id?: SortOrder
    NotificationTemplateId?: SortOrder
    Sender?: SortOrder
    Phone?: SortOrder
    Recipient?: SortOrder
    CCRecipient?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    NotificationType?: SortOrder
    IsProcessed?: SortOrder
    ErrorMessage?: SortOrder
    RetryCount?: SortOrder
    SentDate?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    NotificationTemplate?: NotificationTemplateOrderByWithRelationInput
    User_Notification_CreatedByToUser?: UserOrderByWithRelationInput
    User_Notification_ModifiedByToUser?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = {
    Id?: number
  }

  export type NotificationOrderByWithAggregationInput = {
    Id?: SortOrder
    NotificationTemplateId?: SortOrder
    Sender?: SortOrder
    Phone?: SortOrder
    Recipient?: SortOrder
    CCRecipient?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    NotificationType?: SortOrder
    IsProcessed?: SortOrder
    ErrorMessage?: SortOrder
    RetryCount?: SortOrder
    SentDate?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _avg?: NotificationAvgOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
    _sum?: NotificationSumOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: Enumerable<NotificationScalarWhereWithAggregatesInput>
    OR?: Enumerable<NotificationScalarWhereWithAggregatesInput>
    NOT?: Enumerable<NotificationScalarWhereWithAggregatesInput>
    Id?: IntWithAggregatesFilter | number
    NotificationTemplateId?: IntWithAggregatesFilter | number
    Sender?: StringNullableWithAggregatesFilter | string | null
    Phone?: StringNullableWithAggregatesFilter | string | null
    Recipient?: StringNullableWithAggregatesFilter | string | null
    CCRecipient?: StringNullableWithAggregatesFilter | string | null
    Subject?: StringNullableWithAggregatesFilter | string | null
    Body?: StringWithAggregatesFilter | string
    NotificationType?: StringWithAggregatesFilter | string
    IsProcessed?: BoolWithAggregatesFilter | boolean
    ErrorMessage?: StringNullableWithAggregatesFilter | string | null
    RetryCount?: IntNullableWithAggregatesFilter | number | null
    SentDate?: DateTimeWithAggregatesFilter | Date | string
    CreatedBy?: IntWithAggregatesFilter | number
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    ModifiedBy?: IntNullableWithAggregatesFilter | number | null
    ModifiedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type NotificationTemplateWhereInput = {
    AND?: Enumerable<NotificationTemplateWhereInput>
    OR?: Enumerable<NotificationTemplateWhereInput>
    NOT?: Enumerable<NotificationTemplateWhereInput>
    Id?: IntFilter | number
    Name?: StringFilter | string
    Description?: StringFilter | string
    Subject?: StringFilter | string
    Body?: StringFilter | string
    Type?: StringFilter | string
    IsActive?: BoolFilter | boolean
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    User_NotificationTemplate_CreatedByToUser?: XOR<UserRelationFilter, UserWhereInput>
    User_NotificationTemplate_ModifiedByToUser?: XOR<UserRelationFilter, UserWhereInput> | null
    Notification?: NotificationListRelationFilter
  }

  export type NotificationTemplateOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    Type?: SortOrder
    IsActive?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    User_NotificationTemplate_CreatedByToUser?: UserOrderByWithRelationInput
    User_NotificationTemplate_ModifiedByToUser?: UserOrderByWithRelationInput
    Notification?: NotificationOrderByRelationAggregateInput
  }

  export type NotificationTemplateWhereUniqueInput = {
    Id?: number
  }

  export type NotificationTemplateOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    Type?: SortOrder
    IsActive?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    _count?: NotificationTemplateCountOrderByAggregateInput
    _avg?: NotificationTemplateAvgOrderByAggregateInput
    _max?: NotificationTemplateMaxOrderByAggregateInput
    _min?: NotificationTemplateMinOrderByAggregateInput
    _sum?: NotificationTemplateSumOrderByAggregateInput
  }

  export type NotificationTemplateScalarWhereWithAggregatesInput = {
    AND?: Enumerable<NotificationTemplateScalarWhereWithAggregatesInput>
    OR?: Enumerable<NotificationTemplateScalarWhereWithAggregatesInput>
    NOT?: Enumerable<NotificationTemplateScalarWhereWithAggregatesInput>
    Id?: IntWithAggregatesFilter | number
    Name?: StringWithAggregatesFilter | string
    Description?: StringWithAggregatesFilter | string
    Subject?: StringWithAggregatesFilter | string
    Body?: StringWithAggregatesFilter | string
    Type?: StringWithAggregatesFilter | string
    IsActive?: BoolWithAggregatesFilter | boolean
    CreatedBy?: IntWithAggregatesFilter | number
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    ModifiedBy?: IntNullableWithAggregatesFilter | number | null
    ModifiedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type PermissionMasterWhereInput = {
    AND?: Enumerable<PermissionMasterWhereInput>
    OR?: Enumerable<PermissionMasterWhereInput>
    NOT?: Enumerable<PermissionMasterWhereInput>
    Id?: IntFilter | number
    Name?: StringFilter | string
    DisplayName?: StringFilter | string
    Description?: StringNullableFilter | string | null
    IsActive?: BoolFilter | boolean
    CreatedDate?: DateTimeFilter | Date | string
    CreatedBy?: IntFilter | number
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    ModifiedBy?: IntNullableFilter | number | null
  }

  export type PermissionMasterOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type PermissionMasterWhereUniqueInput = {
    Id?: number
  }

  export type PermissionMasterOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    _count?: PermissionMasterCountOrderByAggregateInput
    _avg?: PermissionMasterAvgOrderByAggregateInput
    _max?: PermissionMasterMaxOrderByAggregateInput
    _min?: PermissionMasterMinOrderByAggregateInput
    _sum?: PermissionMasterSumOrderByAggregateInput
  }

  export type PermissionMasterScalarWhereWithAggregatesInput = {
    AND?: Enumerable<PermissionMasterScalarWhereWithAggregatesInput>
    OR?: Enumerable<PermissionMasterScalarWhereWithAggregatesInput>
    NOT?: Enumerable<PermissionMasterScalarWhereWithAggregatesInput>
    Id?: IntWithAggregatesFilter | number
    Name?: StringWithAggregatesFilter | string
    DisplayName?: StringWithAggregatesFilter | string
    Description?: StringNullableWithAggregatesFilter | string | null
    IsActive?: BoolWithAggregatesFilter | boolean
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    CreatedBy?: IntWithAggregatesFilter | number
    ModifiedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    ModifiedBy?: IntNullableWithAggregatesFilter | number | null
  }

  export type RoleMasterWhereInput = {
    AND?: Enumerable<RoleMasterWhereInput>
    OR?: Enumerable<RoleMasterWhereInput>
    NOT?: Enumerable<RoleMasterWhereInput>
    Id?: IntFilter | number
    Name?: StringFilter | string
    Description?: StringNullableFilter | string | null
    IsActive?: BoolFilter | boolean
    CreateDate?: DateTimeFilter | Date | string
    CreatedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    ModifiedBy?: IntNullableFilter | number | null
    User?: UserListRelationFilter
  }

  export type RoleMasterOrderByWithRelationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreateDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    User?: UserOrderByRelationAggregateInput
  }

  export type RoleMasterWhereUniqueInput = {
    Id?: number
  }

  export type RoleMasterOrderByWithAggregationInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreateDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    _count?: RoleMasterCountOrderByAggregateInput
    _avg?: RoleMasterAvgOrderByAggregateInput
    _max?: RoleMasterMaxOrderByAggregateInput
    _min?: RoleMasterMinOrderByAggregateInput
    _sum?: RoleMasterSumOrderByAggregateInput
  }

  export type RoleMasterScalarWhereWithAggregatesInput = {
    AND?: Enumerable<RoleMasterScalarWhereWithAggregatesInput>
    OR?: Enumerable<RoleMasterScalarWhereWithAggregatesInput>
    NOT?: Enumerable<RoleMasterScalarWhereWithAggregatesInput>
    Id?: IntWithAggregatesFilter | number
    Name?: StringWithAggregatesFilter | string
    Description?: StringNullableWithAggregatesFilter | string | null
    IsActive?: BoolWithAggregatesFilter | boolean
    CreateDate?: DateTimeWithAggregatesFilter | Date | string
    CreatedBy?: IntNullableWithAggregatesFilter | number | null
    ModifiedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    ModifiedBy?: IntNullableWithAggregatesFilter | number | null
  }

  export type RolePermissionWhereInput = {
    AND?: Enumerable<RolePermissionWhereInput>
    OR?: Enumerable<RolePermissionWhereInput>
    NOT?: Enumerable<RolePermissionWhereInput>
    RoleId?: IntFilter | number
    ModuleId?: IntFilter | number
    PermissionId?: IntFilter | number
    Permission?: BoolFilter | boolean
    CreatedDate?: DateTimeFilter | Date | string
    CreatedBy?: IntFilter | number
  }

  export type RolePermissionOrderByWithRelationInput = {
    RoleId?: SortOrder
    ModuleId?: SortOrder
    PermissionId?: SortOrder
    Permission?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type RolePermissionWhereUniqueInput = {
    RoleId_ModuleId_PermissionId?: RolePermissionRoleIdModuleIdPermissionIdCompoundUniqueInput
  }

  export type RolePermissionOrderByWithAggregationInput = {
    RoleId?: SortOrder
    ModuleId?: SortOrder
    PermissionId?: SortOrder
    Permission?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    _count?: RolePermissionCountOrderByAggregateInput
    _avg?: RolePermissionAvgOrderByAggregateInput
    _max?: RolePermissionMaxOrderByAggregateInput
    _min?: RolePermissionMinOrderByAggregateInput
    _sum?: RolePermissionSumOrderByAggregateInput
  }

  export type RolePermissionScalarWhereWithAggregatesInput = {
    AND?: Enumerable<RolePermissionScalarWhereWithAggregatesInput>
    OR?: Enumerable<RolePermissionScalarWhereWithAggregatesInput>
    NOT?: Enumerable<RolePermissionScalarWhereWithAggregatesInput>
    RoleId?: IntWithAggregatesFilter | number
    ModuleId?: IntWithAggregatesFilter | number
    PermissionId?: IntWithAggregatesFilter | number
    Permission?: BoolWithAggregatesFilter | boolean
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    CreatedBy?: IntWithAggregatesFilter | number
  }

  export type sysdiagramsWhereInput = {
    AND?: Enumerable<sysdiagramsWhereInput>
    OR?: Enumerable<sysdiagramsWhereInput>
    NOT?: Enumerable<sysdiagramsWhereInput>
    name?: StringFilter | string
    principal_id?: IntFilter | number
    diagram_id?: IntFilter | number
    version?: IntNullableFilter | number | null
    definition?: BytesNullableFilter | Buffer | null
  }

  export type sysdiagramsOrderByWithRelationInput = {
    name?: SortOrder
    principal_id?: SortOrder
    diagram_id?: SortOrder
    version?: SortOrder
    definition?: SortOrder
  }

  export type sysdiagramsWhereUniqueInput = {
    diagram_id?: number
    principal_id_name?: sysdiagramsPrincipal_idNameCompoundUniqueInput
  }

  export type sysdiagramsOrderByWithAggregationInput = {
    name?: SortOrder
    principal_id?: SortOrder
    diagram_id?: SortOrder
    version?: SortOrder
    definition?: SortOrder
    _count?: sysdiagramsCountOrderByAggregateInput
    _avg?: sysdiagramsAvgOrderByAggregateInput
    _max?: sysdiagramsMaxOrderByAggregateInput
    _min?: sysdiagramsMinOrderByAggregateInput
    _sum?: sysdiagramsSumOrderByAggregateInput
  }

  export type sysdiagramsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sysdiagramsScalarWhereWithAggregatesInput>
    OR?: Enumerable<sysdiagramsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sysdiagramsScalarWhereWithAggregatesInput>
    name?: StringWithAggregatesFilter | string
    principal_id?: IntWithAggregatesFilter | number
    diagram_id?: IntWithAggregatesFilter | number
    version?: IntNullableWithAggregatesFilter | number | null
    definition?: BytesNullableWithAggregatesFilter | Buffer | null
  }

  export type UserWhereInput = {
    AND?: Enumerable<UserWhereInput>
    OR?: Enumerable<UserWhereInput>
    NOT?: Enumerable<UserWhereInput>
    Id?: IntFilter | number
    FirstName?: StringFilter | string
    LastName?: StringFilter | string
    EmailID?: StringFilter | string
    UserName?: StringNullableFilter | string | null
    Password?: StringNullableFilter | string | null
    IsActive?: BoolFilter | boolean
    LastAccess?: DateTimeNullableFilter | Date | string | null
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    IsVerified?: BoolNullableFilter | boolean | null
    ActivationCode?: StringNullableFilter | string | null
    PasswordResetDuration?: DateTimeNullableFilter | Date | string | null
    RoleId?: IntNullableFilter | number | null
    RoleMaster?: XOR<RoleMasterRelationFilter, RoleMasterWhereInput> | null
    Notification_Notification_CreatedByToUser?: NotificationListRelationFilter
    Notification_Notification_ModifiedByToUser?: NotificationListRelationFilter
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateListRelationFilter
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateListRelationFilter
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialListRelationFilter
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialListRelationFilter
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    Id?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    EmailID?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    IsActive?: SortOrder
    LastAccess?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    IsVerified?: SortOrder
    ActivationCode?: SortOrder
    PasswordResetDuration?: SortOrder
    RoleId?: SortOrder
    RoleMaster?: RoleMasterOrderByWithRelationInput
    Notification_Notification_CreatedByToUser?: NotificationOrderByRelationAggregateInput
    Notification_Notification_ModifiedByToUser?: NotificationOrderByRelationAggregateInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateOrderByRelationAggregateInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateOrderByRelationAggregateInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialOrderByRelationAggregateInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialOrderByRelationAggregateInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = {
    Id?: number
  }

  export type UserOrderByWithAggregationInput = {
    Id?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    EmailID?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    IsActive?: SortOrder
    LastAccess?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    IsVerified?: SortOrder
    ActivationCode?: SortOrder
    PasswordResetDuration?: SortOrder
    RoleId?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserScalarWhereWithAggregatesInput>
    Id?: IntWithAggregatesFilter | number
    FirstName?: StringWithAggregatesFilter | string
    LastName?: StringWithAggregatesFilter | string
    EmailID?: StringWithAggregatesFilter | string
    UserName?: StringNullableWithAggregatesFilter | string | null
    Password?: StringNullableWithAggregatesFilter | string | null
    IsActive?: BoolWithAggregatesFilter | boolean
    LastAccess?: DateTimeNullableWithAggregatesFilter | Date | string | null
    CreatedBy?: IntWithAggregatesFilter | number
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    ModifiedBy?: IntNullableWithAggregatesFilter | number | null
    ModifiedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    IsVerified?: BoolNullableWithAggregatesFilter | boolean | null
    ActivationCode?: StringNullableWithAggregatesFilter | string | null
    PasswordResetDuration?: DateTimeNullableWithAggregatesFilter | Date | string | null
    RoleId?: IntNullableWithAggregatesFilter | number | null
  }

  export type UserResetCredentialWhereInput = {
    AND?: Enumerable<UserResetCredentialWhereInput>
    OR?: Enumerable<UserResetCredentialWhereInput>
    NOT?: Enumerable<UserResetCredentialWhereInput>
    Id?: IntFilter | number
    UserId?: IntFilter | number
    ResetCode?: StringFilter | string
    IsActive?: BoolFilter | boolean
    TimeValid?: IntFilter | number
    EmailSentTime?: DateTimeFilter | Date | string
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    User_UserToUserResetCredential_UserId?: XOR<UserRelationFilter, UserWhereInput>
    User_UserToUserResetCredential_CreatedBy?: XOR<UserRelationFilter, UserWhereInput>
    User_UserToUserResetCredential_ModifiedBy?: XOR<UserRelationFilter, UserWhereInput> | null
  }

  export type UserResetCredentialOrderByWithRelationInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ResetCode?: SortOrder
    IsActive?: SortOrder
    TimeValid?: SortOrder
    EmailSentTime?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    User_UserToUserResetCredential_UserId?: UserOrderByWithRelationInput
    User_UserToUserResetCredential_CreatedBy?: UserOrderByWithRelationInput
    User_UserToUserResetCredential_ModifiedBy?: UserOrderByWithRelationInput
  }

  export type UserResetCredentialWhereUniqueInput = {
    Id?: number
  }

  export type UserResetCredentialOrderByWithAggregationInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ResetCode?: SortOrder
    IsActive?: SortOrder
    TimeValid?: SortOrder
    EmailSentTime?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    _count?: UserResetCredentialCountOrderByAggregateInput
    _avg?: UserResetCredentialAvgOrderByAggregateInput
    _max?: UserResetCredentialMaxOrderByAggregateInput
    _min?: UserResetCredentialMinOrderByAggregateInput
    _sum?: UserResetCredentialSumOrderByAggregateInput
  }

  export type UserResetCredentialScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserResetCredentialScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserResetCredentialScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserResetCredentialScalarWhereWithAggregatesInput>
    Id?: IntWithAggregatesFilter | number
    UserId?: IntWithAggregatesFilter | number
    ResetCode?: StringWithAggregatesFilter | string
    IsActive?: BoolWithAggregatesFilter | boolean
    TimeValid?: IntWithAggregatesFilter | number
    EmailSentTime?: DateTimeWithAggregatesFilter | Date | string
    CreatedBy?: IntWithAggregatesFilter | number
    CreatedDate?: DateTimeWithAggregatesFilter | Date | string
    ModifiedBy?: IntNullableWithAggregatesFilter | number | null
    ModifiedDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type APIAuditCreateInput = {
    id?: bigint | number
    ClientURL?: string | null
    UserEmail?: string | null
    Requestobject?: string | null
    Responseobject?: string | null
    Startime?: Date | string | null
    EndTime?: Date | string | null
    AuditErrorLogId?: string | null
    Controller?: string | null
    Method?: string | null
  }

  export type APIAuditUncheckedCreateInput = {
    id?: bigint | number
    ClientURL?: string | null
    UserEmail?: string | null
    Requestobject?: string | null
    Responseobject?: string | null
    Startime?: Date | string | null
    EndTime?: Date | string | null
    AuditErrorLogId?: string | null
    Controller?: string | null
    Method?: string | null
  }

  export type APIAuditUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ClientURL?: NullableStringFieldUpdateOperationsInput | string | null
    UserEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Requestobject?: NullableStringFieldUpdateOperationsInput | string | null
    Responseobject?: NullableStringFieldUpdateOperationsInput | string | null
    Startime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
    Controller?: NullableStringFieldUpdateOperationsInput | string | null
    Method?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type APIAuditUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ClientURL?: NullableStringFieldUpdateOperationsInput | string | null
    UserEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Requestobject?: NullableStringFieldUpdateOperationsInput | string | null
    Responseobject?: NullableStringFieldUpdateOperationsInput | string | null
    Startime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
    Controller?: NullableStringFieldUpdateOperationsInput | string | null
    Method?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type APIAuditCreateManyInput = {
    ClientURL?: string | null
    UserEmail?: string | null
    Requestobject?: string | null
    Responseobject?: string | null
    Startime?: Date | string | null
    EndTime?: Date | string | null
    AuditErrorLogId?: string | null
    Controller?: string | null
    Method?: string | null
  }

  export type APIAuditUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ClientURL?: NullableStringFieldUpdateOperationsInput | string | null
    UserEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Requestobject?: NullableStringFieldUpdateOperationsInput | string | null
    Responseobject?: NullableStringFieldUpdateOperationsInput | string | null
    Startime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
    Controller?: NullableStringFieldUpdateOperationsInput | string | null
    Method?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type APIAuditUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    ClientURL?: NullableStringFieldUpdateOperationsInput | string | null
    UserEmail?: NullableStringFieldUpdateOperationsInput | string | null
    Requestobject?: NullableStringFieldUpdateOperationsInput | string | null
    Responseobject?: NullableStringFieldUpdateOperationsInput | string | null
    Startime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
    Controller?: NullableStringFieldUpdateOperationsInput | string | null
    Method?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ErrorLogCreateInput = {
    UserId: number
    Message: string
    StackTrace: string
    IPAddress: string
    TimeStamp: Date | string
    Event: string
    UserName: string
    AuditErrorLogId?: string | null
  }

  export type ErrorLogUncheckedCreateInput = {
    ErrorLogId?: number
    UserId: number
    Message: string
    StackTrace: string
    IPAddress: string
    TimeStamp: Date | string
    Event: string
    UserName: string
    AuditErrorLogId?: string | null
  }

  export type ErrorLogUpdateInput = {
    UserId?: IntFieldUpdateOperationsInput | number
    Message?: StringFieldUpdateOperationsInput | string
    StackTrace?: StringFieldUpdateOperationsInput | string
    IPAddress?: StringFieldUpdateOperationsInput | string
    TimeStamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ErrorLogUncheckedUpdateInput = {
    ErrorLogId?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    Message?: StringFieldUpdateOperationsInput | string
    StackTrace?: StringFieldUpdateOperationsInput | string
    IPAddress?: StringFieldUpdateOperationsInput | string
    TimeStamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ErrorLogCreateManyInput = {
    UserId: number
    Message: string
    StackTrace: string
    IPAddress: string
    TimeStamp: Date | string
    Event: string
    UserName: string
    AuditErrorLogId?: string | null
  }

  export type ErrorLogUpdateManyMutationInput = {
    UserId?: IntFieldUpdateOperationsInput | number
    Message?: StringFieldUpdateOperationsInput | string
    StackTrace?: StringFieldUpdateOperationsInput | string
    IPAddress?: StringFieldUpdateOperationsInput | string
    TimeStamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ErrorLogUncheckedUpdateManyInput = {
    ErrorLogId?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    Message?: StringFieldUpdateOperationsInput | string
    StackTrace?: StringFieldUpdateOperationsInput | string
    IPAddress?: StringFieldUpdateOperationsInput | string
    TimeStamp?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    AuditErrorLogId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModuleMasterCreateInput = {
    ParentId?: number
    Name: string
    DisplayName: string
    URL?: string | null
    OrderNo?: number
    Description?: string | null
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
    IsParentMenu?: boolean | null
    MenuIconClass?: string | null
  }

  export type ModuleMasterUncheckedCreateInput = {
    Id?: number
    ParentId?: number
    Name: string
    DisplayName: string
    URL?: string | null
    OrderNo?: number
    Description?: string | null
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
    IsParentMenu?: boolean | null
    MenuIconClass?: string | null
  }

  export type ModuleMasterUpdateInput = {
    ParentId?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    URL?: NullableStringFieldUpdateOperationsInput | string | null
    OrderNo?: IntFieldUpdateOperationsInput | number
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    IsParentMenu?: NullableBoolFieldUpdateOperationsInput | boolean | null
    MenuIconClass?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModuleMasterUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    ParentId?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    URL?: NullableStringFieldUpdateOperationsInput | string | null
    OrderNo?: IntFieldUpdateOperationsInput | number
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    IsParentMenu?: NullableBoolFieldUpdateOperationsInput | boolean | null
    MenuIconClass?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModuleMasterCreateManyInput = {
    ParentId?: number
    Name: string
    DisplayName: string
    URL?: string | null
    OrderNo?: number
    Description?: string | null
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
    IsParentMenu?: boolean | null
    MenuIconClass?: string | null
  }

  export type ModuleMasterUpdateManyMutationInput = {
    ParentId?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    URL?: NullableStringFieldUpdateOperationsInput | string | null
    OrderNo?: IntFieldUpdateOperationsInput | number
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    IsParentMenu?: NullableBoolFieldUpdateOperationsInput | boolean | null
    MenuIconClass?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModuleMasterUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    ParentId?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    URL?: NullableStringFieldUpdateOperationsInput | string | null
    OrderNo?: IntFieldUpdateOperationsInput | number
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    IsParentMenu?: NullableBoolFieldUpdateOperationsInput | boolean | null
    MenuIconClass?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModulePermissionCreateInput = {
    PermissionId: number
    ModuleId: number
    IsDefaultTrue: boolean
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
  }

  export type ModulePermissionUncheckedCreateInput = {
    PermissionId: number
    ModuleId: number
    IsDefaultTrue: boolean
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
  }

  export type ModulePermissionUpdateInput = {
    PermissionId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    IsDefaultTrue?: BoolFieldUpdateOperationsInput | boolean
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type ModulePermissionUncheckedUpdateInput = {
    PermissionId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    IsDefaultTrue?: BoolFieldUpdateOperationsInput | boolean
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type ModulePermissionCreateManyInput = {
    PermissionId: number
    ModuleId: number
    IsDefaultTrue: boolean
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
  }

  export type ModulePermissionUpdateManyMutationInput = {
    PermissionId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    IsDefaultTrue?: BoolFieldUpdateOperationsInput | boolean
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type ModulePermissionUncheckedUpdateManyInput = {
    PermissionId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    IsDefaultTrue?: BoolFieldUpdateOperationsInput | boolean
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type NotificationCreateInput = {
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    NotificationTemplate: NotificationTemplateCreateNestedOneWithoutNotificationInput
    User_Notification_CreatedByToUser: UserCreateNestedOneWithoutNotification_Notification_CreatedByToUserInput
    User_Notification_ModifiedByToUser?: UserCreateNestedOneWithoutNotification_Notification_ModifiedByToUserInput
  }

  export type NotificationUncheckedCreateInput = {
    Id?: number
    NotificationTemplateId: number
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationUpdateInput = {
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NotificationTemplate?: NotificationTemplateUpdateOneRequiredWithoutNotificationNestedInput
    User_Notification_CreatedByToUser?: UserUpdateOneRequiredWithoutNotification_Notification_CreatedByToUserNestedInput
    User_Notification_ModifiedByToUser?: UserUpdateOneWithoutNotification_Notification_ModifiedByToUserNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    NotificationTemplateId?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationCreateManyInput = {
    NotificationTemplateId: number
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationUpdateManyMutationInput = {
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    NotificationTemplateId?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationTemplateCreateInput = {
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_NotificationTemplate_CreatedByToUser: UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput
    User_NotificationTemplate_ModifiedByToUser?: UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput
    Notification?: NotificationCreateNestedManyWithoutNotificationTemplateInput
  }

  export type NotificationTemplateUncheckedCreateInput = {
    Id?: number
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    Notification?: NotificationUncheckedCreateNestedManyWithoutNotificationTemplateInput
  }

  export type NotificationTemplateUpdateInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_NotificationTemplate_CreatedByToUser?: UserUpdateOneRequiredWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserNestedInput
    User_NotificationTemplate_ModifiedByToUser?: UserUpdateOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserNestedInput
    Notification?: NotificationUpdateManyWithoutNotificationTemplateNestedInput
  }

  export type NotificationTemplateUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Notification?: NotificationUncheckedUpdateManyWithoutNotificationTemplateNestedInput
  }

  export type NotificationTemplateCreateManyInput = {
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationTemplateUpdateManyMutationInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationTemplateUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermissionMasterCreateInput = {
    Name: string
    DisplayName: string
    Description?: string | null
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
  }

  export type PermissionMasterUncheckedCreateInput = {
    Id?: number
    Name: string
    DisplayName: string
    Description?: string | null
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
  }

  export type PermissionMasterUpdateInput = {
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PermissionMasterUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PermissionMasterCreateManyInput = {
    Name: string
    DisplayName: string
    Description?: string | null
    IsActive?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
  }

  export type PermissionMasterUpdateManyMutationInput = {
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PermissionMasterUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    DisplayName?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RoleMasterCreateInput = {
    Name: string
    Description?: string | null
    IsActive?: boolean
    CreateDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
    User?: UserCreateNestedManyWithoutRoleMasterInput
  }

  export type RoleMasterUncheckedCreateInput = {
    Id?: number
    Name: string
    Description?: string | null
    IsActive?: boolean
    CreateDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
    User?: UserUncheckedCreateNestedManyWithoutRoleMasterInput
  }

  export type RoleMasterUpdateInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreateDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUpdateManyWithoutRoleMasterNestedInput
  }

  export type RoleMasterUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreateDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    User?: UserUncheckedUpdateManyWithoutRoleMasterNestedInput
  }

  export type RoleMasterCreateManyInput = {
    Name: string
    Description?: string | null
    IsActive?: boolean
    CreateDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
  }

  export type RoleMasterUpdateManyMutationInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreateDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RoleMasterUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreateDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RolePermissionCreateInput = {
    RoleId: number
    ModuleId: number
    PermissionId: number
    Permission?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
  }

  export type RolePermissionUncheckedCreateInput = {
    RoleId: number
    ModuleId: number
    PermissionId: number
    Permission?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
  }

  export type RolePermissionUpdateInput = {
    RoleId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    PermissionId?: IntFieldUpdateOperationsInput | number
    Permission?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type RolePermissionUncheckedUpdateInput = {
    RoleId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    PermissionId?: IntFieldUpdateOperationsInput | number
    Permission?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type RolePermissionCreateManyInput = {
    RoleId: number
    ModuleId: number
    PermissionId: number
    Permission?: boolean
    CreatedDate?: Date | string
    CreatedBy: number
  }

  export type RolePermissionUpdateManyMutationInput = {
    RoleId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    PermissionId?: IntFieldUpdateOperationsInput | number
    Permission?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type RolePermissionUncheckedUpdateManyInput = {
    RoleId?: IntFieldUpdateOperationsInput | number
    ModuleId?: IntFieldUpdateOperationsInput | number
    PermissionId?: IntFieldUpdateOperationsInput | number
    Permission?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
  }

  export type sysdiagramsCreateInput = {
    name: string
    principal_id: number
    version?: number | null
    definition?: Buffer | null
  }

  export type sysdiagramsUncheckedCreateInput = {
    name: string
    principal_id: number
    diagram_id?: number
    version?: number | null
    definition?: Buffer | null
  }

  export type sysdiagramsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    principal_id?: IntFieldUpdateOperationsInput | number
    version?: NullableIntFieldUpdateOperationsInput | number | null
    definition?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type sysdiagramsUncheckedUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    principal_id?: IntFieldUpdateOperationsInput | number
    diagram_id?: IntFieldUpdateOperationsInput | number
    version?: NullableIntFieldUpdateOperationsInput | number | null
    definition?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type sysdiagramsCreateManyInput = {
    name: string
    principal_id: number
    version?: number | null
    definition?: Buffer | null
  }

  export type sysdiagramsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    principal_id?: IntFieldUpdateOperationsInput | number
    version?: NullableIntFieldUpdateOperationsInput | number | null
    definition?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type sysdiagramsUncheckedUpdateManyInput = {
    name?: StringFieldUpdateOperationsInput | string
    principal_id?: IntFieldUpdateOperationsInput | number
    diagram_id?: IntFieldUpdateOperationsInput | number
    version?: NullableIntFieldUpdateOperationsInput | number | null
    definition?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type UserCreateInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUpdateInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserCreateManyInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
  }

  export type UserUpdateManyMutationInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserResetCredentialCreateInput = {
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_UserToUserResetCredential_UserId: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_UserIdInput
    User_UserToUserResetCredential_CreatedBy: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput
    User_UserToUserResetCredential_ModifiedBy?: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput
  }

  export type UserResetCredentialUncheckedCreateInput = {
    Id?: number
    UserId: number
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialUpdateInput = {
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserToUserResetCredential_UserId?: UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_UserIdNestedInput
    User_UserToUserResetCredential_CreatedBy?: UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_CreatedByNestedInput
    User_UserToUserResetCredential_ModifiedBy?: UserUpdateOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserResetCredentialUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialCreateManyInput = {
    UserId: number
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialUpdateManyMutationInput = {
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BigIntFilter = {
    equals?: bigint | number
    in?: Enumerable<bigint> | Enumerable<number>
    notIn?: Enumerable<bigint> | Enumerable<number>
    lt?: bigint | number
    lte?: bigint | number
    gt?: bigint | number
    gte?: bigint | number
    not?: NestedBigIntFilter | bigint | number
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type APIAuditCountOrderByAggregateInput = {
    id?: SortOrder
    ClientURL?: SortOrder
    UserEmail?: SortOrder
    Requestobject?: SortOrder
    Responseobject?: SortOrder
    Startime?: SortOrder
    EndTime?: SortOrder
    AuditErrorLogId?: SortOrder
    Controller?: SortOrder
    Method?: SortOrder
  }

  export type APIAuditAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type APIAuditMaxOrderByAggregateInput = {
    id?: SortOrder
    ClientURL?: SortOrder
    UserEmail?: SortOrder
    Requestobject?: SortOrder
    Responseobject?: SortOrder
    Startime?: SortOrder
    EndTime?: SortOrder
    AuditErrorLogId?: SortOrder
    Controller?: SortOrder
    Method?: SortOrder
  }

  export type APIAuditMinOrderByAggregateInput = {
    id?: SortOrder
    ClientURL?: SortOrder
    UserEmail?: SortOrder
    Requestobject?: SortOrder
    Responseobject?: SortOrder
    Startime?: SortOrder
    EndTime?: SortOrder
    AuditErrorLogId?: SortOrder
    Controller?: SortOrder
    Method?: SortOrder
  }

  export type APIAuditSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BigIntWithAggregatesFilter = {
    equals?: bigint | number
    in?: Enumerable<bigint> | Enumerable<number>
    notIn?: Enumerable<bigint> | Enumerable<number>
    lt?: bigint | number
    lte?: bigint | number
    gt?: bigint | number
    gte?: bigint | number
    not?: NestedBigIntWithAggregatesFilter | bigint | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedBigIntFilter
    _min?: NestedBigIntFilter
    _max?: NestedBigIntFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type ErrorLogCountOrderByAggregateInput = {
    ErrorLogId?: SortOrder
    UserId?: SortOrder
    Message?: SortOrder
    StackTrace?: SortOrder
    IPAddress?: SortOrder
    TimeStamp?: SortOrder
    Event?: SortOrder
    UserName?: SortOrder
    AuditErrorLogId?: SortOrder
  }

  export type ErrorLogAvgOrderByAggregateInput = {
    ErrorLogId?: SortOrder
    UserId?: SortOrder
  }

  export type ErrorLogMaxOrderByAggregateInput = {
    ErrorLogId?: SortOrder
    UserId?: SortOrder
    Message?: SortOrder
    StackTrace?: SortOrder
    IPAddress?: SortOrder
    TimeStamp?: SortOrder
    Event?: SortOrder
    UserName?: SortOrder
    AuditErrorLogId?: SortOrder
  }

  export type ErrorLogMinOrderByAggregateInput = {
    ErrorLogId?: SortOrder
    UserId?: SortOrder
    Message?: SortOrder
    StackTrace?: SortOrder
    IPAddress?: SortOrder
    TimeStamp?: SortOrder
    Event?: SortOrder
    UserName?: SortOrder
    AuditErrorLogId?: SortOrder
  }

  export type ErrorLogSumOrderByAggregateInput = {
    ErrorLogId?: SortOrder
    UserId?: SortOrder
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type DateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type BoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type ModuleMasterCountOrderByAggregateInput = {
    Id?: SortOrder
    ParentId?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    URL?: SortOrder
    OrderNo?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    IsParentMenu?: SortOrder
    MenuIconClass?: SortOrder
  }

  export type ModuleMasterAvgOrderByAggregateInput = {
    Id?: SortOrder
    ParentId?: SortOrder
    OrderNo?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type ModuleMasterMaxOrderByAggregateInput = {
    Id?: SortOrder
    ParentId?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    URL?: SortOrder
    OrderNo?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    IsParentMenu?: SortOrder
    MenuIconClass?: SortOrder
  }

  export type ModuleMasterMinOrderByAggregateInput = {
    Id?: SortOrder
    ParentId?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    URL?: SortOrder
    OrderNo?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
    IsParentMenu?: SortOrder
    MenuIconClass?: SortOrder
  }

  export type ModuleMasterSumOrderByAggregateInput = {
    Id?: SortOrder
    ParentId?: SortOrder
    OrderNo?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type BoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type BoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type ModulePermissionPermissionIdModuleIdCompoundUniqueInput = {
    PermissionId: number
    ModuleId: number
  }

  export type ModulePermissionCountOrderByAggregateInput = {
    PermissionId?: SortOrder
    ModuleId?: SortOrder
    IsDefaultTrue?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type ModulePermissionAvgOrderByAggregateInput = {
    PermissionId?: SortOrder
    ModuleId?: SortOrder
    CreatedBy?: SortOrder
  }

  export type ModulePermissionMaxOrderByAggregateInput = {
    PermissionId?: SortOrder
    ModuleId?: SortOrder
    IsDefaultTrue?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type ModulePermissionMinOrderByAggregateInput = {
    PermissionId?: SortOrder
    ModuleId?: SortOrder
    IsDefaultTrue?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type ModulePermissionSumOrderByAggregateInput = {
    PermissionId?: SortOrder
    ModuleId?: SortOrder
    CreatedBy?: SortOrder
  }

  export type NotificationTemplateRelationFilter = {
    is?: NotificationTemplateWhereInput
    isNot?: NotificationTemplateWhereInput
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type NotificationCountOrderByAggregateInput = {
    Id?: SortOrder
    NotificationTemplateId?: SortOrder
    Sender?: SortOrder
    Phone?: SortOrder
    Recipient?: SortOrder
    CCRecipient?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    NotificationType?: SortOrder
    IsProcessed?: SortOrder
    ErrorMessage?: SortOrder
    RetryCount?: SortOrder
    SentDate?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type NotificationAvgOrderByAggregateInput = {
    Id?: SortOrder
    NotificationTemplateId?: SortOrder
    RetryCount?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    Id?: SortOrder
    NotificationTemplateId?: SortOrder
    Sender?: SortOrder
    Phone?: SortOrder
    Recipient?: SortOrder
    CCRecipient?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    NotificationType?: SortOrder
    IsProcessed?: SortOrder
    ErrorMessage?: SortOrder
    RetryCount?: SortOrder
    SentDate?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    Id?: SortOrder
    NotificationTemplateId?: SortOrder
    Sender?: SortOrder
    Phone?: SortOrder
    Recipient?: SortOrder
    CCRecipient?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    NotificationType?: SortOrder
    IsProcessed?: SortOrder
    ErrorMessage?: SortOrder
    RetryCount?: SortOrder
    SentDate?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type NotificationSumOrderByAggregateInput = {
    Id?: SortOrder
    NotificationTemplateId?: SortOrder
    RetryCount?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationTemplateCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    Type?: SortOrder
    IsActive?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type NotificationTemplateAvgOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type NotificationTemplateMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    Type?: SortOrder
    IsActive?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type NotificationTemplateMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    Subject?: SortOrder
    Body?: SortOrder
    Type?: SortOrder
    IsActive?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type NotificationTemplateSumOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type PermissionMasterCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type PermissionMasterAvgOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type PermissionMasterMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type PermissionMasterMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    DisplayName?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type PermissionMasterSumOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleMasterCountOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreateDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type RoleMasterAvgOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type RoleMasterMaxOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreateDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type RoleMasterMinOrderByAggregateInput = {
    Id?: SortOrder
    Name?: SortOrder
    Description?: SortOrder
    IsActive?: SortOrder
    CreateDate?: SortOrder
    CreatedBy?: SortOrder
    ModifiedDate?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type RoleMasterSumOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type RolePermissionRoleIdModuleIdPermissionIdCompoundUniqueInput = {
    RoleId: number
    ModuleId: number
    PermissionId: number
  }

  export type RolePermissionCountOrderByAggregateInput = {
    RoleId?: SortOrder
    ModuleId?: SortOrder
    PermissionId?: SortOrder
    Permission?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type RolePermissionAvgOrderByAggregateInput = {
    RoleId?: SortOrder
    ModuleId?: SortOrder
    PermissionId?: SortOrder
    CreatedBy?: SortOrder
  }

  export type RolePermissionMaxOrderByAggregateInput = {
    RoleId?: SortOrder
    ModuleId?: SortOrder
    PermissionId?: SortOrder
    Permission?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type RolePermissionMinOrderByAggregateInput = {
    RoleId?: SortOrder
    ModuleId?: SortOrder
    PermissionId?: SortOrder
    Permission?: SortOrder
    CreatedDate?: SortOrder
    CreatedBy?: SortOrder
  }

  export type RolePermissionSumOrderByAggregateInput = {
    RoleId?: SortOrder
    ModuleId?: SortOrder
    PermissionId?: SortOrder
    CreatedBy?: SortOrder
  }

  export type BytesNullableFilter = {
    equals?: Buffer | null
    in?: Enumerable<Buffer> | null
    notIn?: Enumerable<Buffer> | null
    not?: NestedBytesNullableFilter | Buffer | null
  }

  export type sysdiagramsPrincipal_idNameCompoundUniqueInput = {
    principal_id: number
    name: string
  }

  export type sysdiagramsCountOrderByAggregateInput = {
    name?: SortOrder
    principal_id?: SortOrder
    diagram_id?: SortOrder
    version?: SortOrder
    definition?: SortOrder
  }

  export type sysdiagramsAvgOrderByAggregateInput = {
    principal_id?: SortOrder
    diagram_id?: SortOrder
    version?: SortOrder
  }

  export type sysdiagramsMaxOrderByAggregateInput = {
    name?: SortOrder
    principal_id?: SortOrder
    diagram_id?: SortOrder
    version?: SortOrder
    definition?: SortOrder
  }

  export type sysdiagramsMinOrderByAggregateInput = {
    name?: SortOrder
    principal_id?: SortOrder
    diagram_id?: SortOrder
    version?: SortOrder
    definition?: SortOrder
  }

  export type sysdiagramsSumOrderByAggregateInput = {
    principal_id?: SortOrder
    diagram_id?: SortOrder
    version?: SortOrder
  }

  export type BytesNullableWithAggregatesFilter = {
    equals?: Buffer | null
    in?: Enumerable<Buffer> | null
    notIn?: Enumerable<Buffer> | null
    not?: NestedBytesNullableWithAggregatesFilter | Buffer | null
    _count?: NestedIntNullableFilter
    _min?: NestedBytesNullableFilter
    _max?: NestedBytesNullableFilter
  }

  export type RoleMasterRelationFilter = {
    is?: RoleMasterWhereInput | null
    isNot?: RoleMasterWhereInput | null
  }

  export type NotificationTemplateListRelationFilter = {
    every?: NotificationTemplateWhereInput
    some?: NotificationTemplateWhereInput
    none?: NotificationTemplateWhereInput
  }

  export type UserResetCredentialListRelationFilter = {
    every?: UserResetCredentialWhereInput
    some?: UserResetCredentialWhereInput
    none?: UserResetCredentialWhereInput
  }

  export type NotificationTemplateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserResetCredentialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    Id?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    EmailID?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    IsActive?: SortOrder
    LastAccess?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    IsVerified?: SortOrder
    ActivationCode?: SortOrder
    PasswordResetDuration?: SortOrder
    RoleId?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
    RoleId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    Id?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    EmailID?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    IsActive?: SortOrder
    LastAccess?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    IsVerified?: SortOrder
    ActivationCode?: SortOrder
    PasswordResetDuration?: SortOrder
    RoleId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    Id?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    EmailID?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    IsActive?: SortOrder
    LastAccess?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
    IsVerified?: SortOrder
    ActivationCode?: SortOrder
    PasswordResetDuration?: SortOrder
    RoleId?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    Id?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
    RoleId?: SortOrder
  }

  export type UserResetCredentialCountOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ResetCode?: SortOrder
    IsActive?: SortOrder
    TimeValid?: SortOrder
    EmailSentTime?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type UserResetCredentialAvgOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    TimeValid?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type UserResetCredentialMaxOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ResetCode?: SortOrder
    IsActive?: SortOrder
    TimeValid?: SortOrder
    EmailSentTime?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type UserResetCredentialMinOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    ResetCode?: SortOrder
    IsActive?: SortOrder
    TimeValid?: SortOrder
    EmailSentTime?: SortOrder
    CreatedBy?: SortOrder
    CreatedDate?: SortOrder
    ModifiedBy?: SortOrder
    ModifiedDate?: SortOrder
  }

  export type UserResetCredentialSumOrderByAggregateInput = {
    Id?: SortOrder
    UserId?: SortOrder
    TimeValid?: SortOrder
    CreatedBy?: SortOrder
    ModifiedBy?: SortOrder
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NotificationTemplateCreateNestedOneWithoutNotificationInput = {
    create?: XOR<NotificationTemplateCreateWithoutNotificationInput, NotificationTemplateUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: NotificationTemplateCreateOrConnectWithoutNotificationInput
    connect?: NotificationTemplateWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNotification_Notification_CreatedByToUserInput = {
    create?: XOR<UserCreateWithoutNotification_Notification_CreatedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_CreatedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotification_Notification_CreatedByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNotification_Notification_ModifiedByToUserInput = {
    create?: XOR<UserCreateWithoutNotification_Notification_ModifiedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_ModifiedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotification_Notification_ModifiedByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type NotificationTemplateUpdateOneRequiredWithoutNotificationNestedInput = {
    create?: XOR<NotificationTemplateCreateWithoutNotificationInput, NotificationTemplateUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: NotificationTemplateCreateOrConnectWithoutNotificationInput
    upsert?: NotificationTemplateUpsertWithoutNotificationInput
    connect?: NotificationTemplateWhereUniqueInput
    update?: XOR<NotificationTemplateUpdateWithoutNotificationInput, NotificationTemplateUncheckedUpdateWithoutNotificationInput>
  }

  export type UserUpdateOneRequiredWithoutNotification_Notification_CreatedByToUserNestedInput = {
    create?: XOR<UserCreateWithoutNotification_Notification_CreatedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_CreatedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotification_Notification_CreatedByToUserInput
    upsert?: UserUpsertWithoutNotification_Notification_CreatedByToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutNotification_Notification_CreatedByToUserInput, UserUncheckedUpdateWithoutNotification_Notification_CreatedByToUserInput>
  }

  export type UserUpdateOneWithoutNotification_Notification_ModifiedByToUserNestedInput = {
    create?: XOR<UserCreateWithoutNotification_Notification_ModifiedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_ModifiedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotification_Notification_ModifiedByToUserInput
    upsert?: UserUpsertWithoutNotification_Notification_ModifiedByToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutNotification_Notification_ModifiedByToUserInput, UserUncheckedUpdateWithoutNotification_Notification_ModifiedByToUserInput>
  }

  export type UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    create?: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    create?: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type NotificationCreateNestedManyWithoutNotificationTemplateInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutNotificationTemplateInput>, Enumerable<NotificationUncheckedCreateWithoutNotificationTemplateInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutNotificationTemplateInput>
    createMany?: NotificationCreateManyNotificationTemplateInputEnvelope
    connect?: Enumerable<NotificationWhereUniqueInput>
  }

  export type NotificationUncheckedCreateNestedManyWithoutNotificationTemplateInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutNotificationTemplateInput>, Enumerable<NotificationUncheckedCreateWithoutNotificationTemplateInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutNotificationTemplateInput>
    createMany?: NotificationCreateManyNotificationTemplateInputEnvelope
    connect?: Enumerable<NotificationWhereUniqueInput>
  }

  export type UserUpdateOneRequiredWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserNestedInput = {
    create?: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput
    upsert?: UserUpsertWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput, UserUncheckedUpdateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput>
  }

  export type UserUpdateOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserNestedInput = {
    create?: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput
    upsert?: UserUpsertWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput, UserUncheckedUpdateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput>
  }

  export type NotificationUpdateManyWithoutNotificationTemplateNestedInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutNotificationTemplateInput>, Enumerable<NotificationUncheckedCreateWithoutNotificationTemplateInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutNotificationTemplateInput>
    upsert?: Enumerable<NotificationUpsertWithWhereUniqueWithoutNotificationTemplateInput>
    createMany?: NotificationCreateManyNotificationTemplateInputEnvelope
    set?: Enumerable<NotificationWhereUniqueInput>
    disconnect?: Enumerable<NotificationWhereUniqueInput>
    delete?: Enumerable<NotificationWhereUniqueInput>
    connect?: Enumerable<NotificationWhereUniqueInput>
    update?: Enumerable<NotificationUpdateWithWhereUniqueWithoutNotificationTemplateInput>
    updateMany?: Enumerable<NotificationUpdateManyWithWhereWithoutNotificationTemplateInput>
    deleteMany?: Enumerable<NotificationScalarWhereInput>
  }

  export type NotificationUncheckedUpdateManyWithoutNotificationTemplateNestedInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutNotificationTemplateInput>, Enumerable<NotificationUncheckedCreateWithoutNotificationTemplateInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutNotificationTemplateInput>
    upsert?: Enumerable<NotificationUpsertWithWhereUniqueWithoutNotificationTemplateInput>
    createMany?: NotificationCreateManyNotificationTemplateInputEnvelope
    set?: Enumerable<NotificationWhereUniqueInput>
    disconnect?: Enumerable<NotificationWhereUniqueInput>
    delete?: Enumerable<NotificationWhereUniqueInput>
    connect?: Enumerable<NotificationWhereUniqueInput>
    update?: Enumerable<NotificationUpdateWithWhereUniqueWithoutNotificationTemplateInput>
    updateMany?: Enumerable<NotificationUpdateManyWithWhereWithoutNotificationTemplateInput>
    deleteMany?: Enumerable<NotificationScalarWhereInput>
  }

  export type UserCreateNestedManyWithoutRoleMasterInput = {
    create?: XOR<Enumerable<UserCreateWithoutRoleMasterInput>, Enumerable<UserUncheckedCreateWithoutRoleMasterInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRoleMasterInput>
    createMany?: UserCreateManyRoleMasterInputEnvelope
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type UserUncheckedCreateNestedManyWithoutRoleMasterInput = {
    create?: XOR<Enumerable<UserCreateWithoutRoleMasterInput>, Enumerable<UserUncheckedCreateWithoutRoleMasterInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRoleMasterInput>
    createMany?: UserCreateManyRoleMasterInputEnvelope
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type UserUpdateManyWithoutRoleMasterNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutRoleMasterInput>, Enumerable<UserUncheckedCreateWithoutRoleMasterInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRoleMasterInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutRoleMasterInput>
    createMany?: UserCreateManyRoleMasterInputEnvelope
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutRoleMasterInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutRoleMasterInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type UserUncheckedUpdateManyWithoutRoleMasterNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutRoleMasterInput>, Enumerable<UserUncheckedCreateWithoutRoleMasterInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutRoleMasterInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutRoleMasterInput>
    createMany?: UserCreateManyRoleMasterInputEnvelope
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutRoleMasterInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutRoleMasterInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type RoleMasterCreateNestedOneWithoutUserInput = {
    create?: XOR<RoleMasterCreateWithoutUserInput, RoleMasterUncheckedCreateWithoutUserInput>
    connectOrCreate?: RoleMasterCreateOrConnectWithoutUserInput
    connect?: RoleMasterWhereUniqueInput
  }

  export type NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_CreatedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_CreatedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_CreatedByToUserInputEnvelope
    connect?: Enumerable<NotificationWhereUniqueInput>
  }

  export type NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_ModifiedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_ModifiedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_ModifiedByToUserInputEnvelope
    connect?: Enumerable<NotificationWhereUniqueInput>
  }

  export type NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_CreatedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_CreatedByToUserInputEnvelope
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
  }

  export type NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_ModifiedByToUserInputEnvelope
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
  }

  export type UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_UserIdInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_UserIdInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_UserIdInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_UserIdInputEnvelope
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
  }

  export type UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_CreatedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_CreatedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_CreatedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_CreatedByInputEnvelope
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
  }

  export type UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_ModifiedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_ModifiedByInputEnvelope
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
  }

  export type NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_CreatedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_CreatedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_CreatedByToUserInputEnvelope
    connect?: Enumerable<NotificationWhereUniqueInput>
  }

  export type NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_ModifiedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_ModifiedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_ModifiedByToUserInputEnvelope
    connect?: Enumerable<NotificationWhereUniqueInput>
  }

  export type NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_CreatedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_CreatedByToUserInputEnvelope
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
  }

  export type NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_ModifiedByToUserInputEnvelope
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
  }

  export type UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_UserIdInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_UserIdInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_UserIdInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_UserIdInputEnvelope
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
  }

  export type UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_CreatedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_CreatedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_CreatedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_CreatedByInputEnvelope
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
  }

  export type UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_ModifiedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_ModifiedByInputEnvelope
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
  }

  export type RoleMasterUpdateOneWithoutUserNestedInput = {
    create?: XOR<RoleMasterCreateWithoutUserInput, RoleMasterUncheckedCreateWithoutUserInput>
    connectOrCreate?: RoleMasterCreateOrConnectWithoutUserInput
    upsert?: RoleMasterUpsertWithoutUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: RoleMasterWhereUniqueInput
    update?: XOR<RoleMasterUpdateWithoutUserInput, RoleMasterUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_CreatedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_CreatedByToUserInput>
    upsert?: Enumerable<NotificationUpsertWithWhereUniqueWithoutUser_Notification_CreatedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_CreatedByToUserInputEnvelope
    set?: Enumerable<NotificationWhereUniqueInput>
    disconnect?: Enumerable<NotificationWhereUniqueInput>
    delete?: Enumerable<NotificationWhereUniqueInput>
    connect?: Enumerable<NotificationWhereUniqueInput>
    update?: Enumerable<NotificationUpdateWithWhereUniqueWithoutUser_Notification_CreatedByToUserInput>
    updateMany?: Enumerable<NotificationUpdateManyWithWhereWithoutUser_Notification_CreatedByToUserInput>
    deleteMany?: Enumerable<NotificationScalarWhereInput>
  }

  export type NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_ModifiedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_ModifiedByToUserInput>
    upsert?: Enumerable<NotificationUpsertWithWhereUniqueWithoutUser_Notification_ModifiedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_ModifiedByToUserInputEnvelope
    set?: Enumerable<NotificationWhereUniqueInput>
    disconnect?: Enumerable<NotificationWhereUniqueInput>
    delete?: Enumerable<NotificationWhereUniqueInput>
    connect?: Enumerable<NotificationWhereUniqueInput>
    update?: Enumerable<NotificationUpdateWithWhereUniqueWithoutUser_Notification_ModifiedByToUserInput>
    updateMany?: Enumerable<NotificationUpdateManyWithWhereWithoutUser_Notification_ModifiedByToUserInput>
    deleteMany?: Enumerable<NotificationScalarWhereInput>
  }

  export type NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_CreatedByToUserInput>
    upsert?: Enumerable<NotificationTemplateUpsertWithWhereUniqueWithoutUser_NotificationTemplate_CreatedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_CreatedByToUserInputEnvelope
    set?: Enumerable<NotificationTemplateWhereUniqueInput>
    disconnect?: Enumerable<NotificationTemplateWhereUniqueInput>
    delete?: Enumerable<NotificationTemplateWhereUniqueInput>
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
    update?: Enumerable<NotificationTemplateUpdateWithWhereUniqueWithoutUser_NotificationTemplate_CreatedByToUserInput>
    updateMany?: Enumerable<NotificationTemplateUpdateManyWithWhereWithoutUser_NotificationTemplate_CreatedByToUserInput>
    deleteMany?: Enumerable<NotificationTemplateScalarWhereInput>
  }

  export type NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    upsert?: Enumerable<NotificationTemplateUpsertWithWhereUniqueWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_ModifiedByToUserInputEnvelope
    set?: Enumerable<NotificationTemplateWhereUniqueInput>
    disconnect?: Enumerable<NotificationTemplateWhereUniqueInput>
    delete?: Enumerable<NotificationTemplateWhereUniqueInput>
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
    update?: Enumerable<NotificationTemplateUpdateWithWhereUniqueWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    updateMany?: Enumerable<NotificationTemplateUpdateManyWithWhereWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    deleteMany?: Enumerable<NotificationTemplateScalarWhereInput>
  }

  export type UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_UserIdInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_UserIdInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_UserIdInput>
    upsert?: Enumerable<UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_UserIdInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_UserIdInputEnvelope
    set?: Enumerable<UserResetCredentialWhereUniqueInput>
    disconnect?: Enumerable<UserResetCredentialWhereUniqueInput>
    delete?: Enumerable<UserResetCredentialWhereUniqueInput>
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
    update?: Enumerable<UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_UserIdInput>
    updateMany?: Enumerable<UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_UserIdInput>
    deleteMany?: Enumerable<UserResetCredentialScalarWhereInput>
  }

  export type UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_CreatedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_CreatedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_CreatedByInput>
    upsert?: Enumerable<UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_CreatedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_CreatedByInputEnvelope
    set?: Enumerable<UserResetCredentialWhereUniqueInput>
    disconnect?: Enumerable<UserResetCredentialWhereUniqueInput>
    delete?: Enumerable<UserResetCredentialWhereUniqueInput>
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
    update?: Enumerable<UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_CreatedByInput>
    updateMany?: Enumerable<UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_CreatedByInput>
    deleteMany?: Enumerable<UserResetCredentialScalarWhereInput>
  }

  export type UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_ModifiedByInput>
    upsert?: Enumerable<UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_ModifiedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_ModifiedByInputEnvelope
    set?: Enumerable<UserResetCredentialWhereUniqueInput>
    disconnect?: Enumerable<UserResetCredentialWhereUniqueInput>
    delete?: Enumerable<UserResetCredentialWhereUniqueInput>
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
    update?: Enumerable<UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_ModifiedByInput>
    updateMany?: Enumerable<UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_ModifiedByInput>
    deleteMany?: Enumerable<UserResetCredentialScalarWhereInput>
  }

  export type NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_CreatedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_CreatedByToUserInput>
    upsert?: Enumerable<NotificationUpsertWithWhereUniqueWithoutUser_Notification_CreatedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_CreatedByToUserInputEnvelope
    set?: Enumerable<NotificationWhereUniqueInput>
    disconnect?: Enumerable<NotificationWhereUniqueInput>
    delete?: Enumerable<NotificationWhereUniqueInput>
    connect?: Enumerable<NotificationWhereUniqueInput>
    update?: Enumerable<NotificationUpdateWithWhereUniqueWithoutUser_Notification_CreatedByToUserInput>
    updateMany?: Enumerable<NotificationUpdateManyWithWhereWithoutUser_Notification_CreatedByToUserInput>
    deleteMany?: Enumerable<NotificationScalarWhereInput>
  }

  export type NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationCreateWithoutUser_Notification_ModifiedByToUserInput>, Enumerable<NotificationUncheckedCreateWithoutUser_Notification_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationCreateOrConnectWithoutUser_Notification_ModifiedByToUserInput>
    upsert?: Enumerable<NotificationUpsertWithWhereUniqueWithoutUser_Notification_ModifiedByToUserInput>
    createMany?: NotificationCreateManyUser_Notification_ModifiedByToUserInputEnvelope
    set?: Enumerable<NotificationWhereUniqueInput>
    disconnect?: Enumerable<NotificationWhereUniqueInput>
    delete?: Enumerable<NotificationWhereUniqueInput>
    connect?: Enumerable<NotificationWhereUniqueInput>
    update?: Enumerable<NotificationUpdateWithWhereUniqueWithoutUser_Notification_ModifiedByToUserInput>
    updateMany?: Enumerable<NotificationUpdateManyWithWhereWithoutUser_Notification_ModifiedByToUserInput>
    deleteMany?: Enumerable<NotificationScalarWhereInput>
  }

  export type NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_CreatedByToUserInput>
    upsert?: Enumerable<NotificationTemplateUpsertWithWhereUniqueWithoutUser_NotificationTemplate_CreatedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_CreatedByToUserInputEnvelope
    set?: Enumerable<NotificationTemplateWhereUniqueInput>
    disconnect?: Enumerable<NotificationTemplateWhereUniqueInput>
    delete?: Enumerable<NotificationTemplateWhereUniqueInput>
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
    update?: Enumerable<NotificationTemplateUpdateWithWhereUniqueWithoutUser_NotificationTemplate_CreatedByToUserInput>
    updateMany?: Enumerable<NotificationTemplateUpdateManyWithWhereWithoutUser_NotificationTemplate_CreatedByToUserInput>
    deleteMany?: Enumerable<NotificationTemplateScalarWhereInput>
  }

  export type NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput = {
    create?: XOR<Enumerable<NotificationTemplateCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>, Enumerable<NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>>
    connectOrCreate?: Enumerable<NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    upsert?: Enumerable<NotificationTemplateUpsertWithWhereUniqueWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    createMany?: NotificationTemplateCreateManyUser_NotificationTemplate_ModifiedByToUserInputEnvelope
    set?: Enumerable<NotificationTemplateWhereUniqueInput>
    disconnect?: Enumerable<NotificationTemplateWhereUniqueInput>
    delete?: Enumerable<NotificationTemplateWhereUniqueInput>
    connect?: Enumerable<NotificationTemplateWhereUniqueInput>
    update?: Enumerable<NotificationTemplateUpdateWithWhereUniqueWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    updateMany?: Enumerable<NotificationTemplateUpdateManyWithWhereWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    deleteMany?: Enumerable<NotificationTemplateScalarWhereInput>
  }

  export type UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_UserIdInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_UserIdInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_UserIdInput>
    upsert?: Enumerable<UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_UserIdInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_UserIdInputEnvelope
    set?: Enumerable<UserResetCredentialWhereUniqueInput>
    disconnect?: Enumerable<UserResetCredentialWhereUniqueInput>
    delete?: Enumerable<UserResetCredentialWhereUniqueInput>
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
    update?: Enumerable<UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_UserIdInput>
    updateMany?: Enumerable<UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_UserIdInput>
    deleteMany?: Enumerable<UserResetCredentialScalarWhereInput>
  }

  export type UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_CreatedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_CreatedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_CreatedByInput>
    upsert?: Enumerable<UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_CreatedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_CreatedByInputEnvelope
    set?: Enumerable<UserResetCredentialWhereUniqueInput>
    disconnect?: Enumerable<UserResetCredentialWhereUniqueInput>
    delete?: Enumerable<UserResetCredentialWhereUniqueInput>
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
    update?: Enumerable<UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_CreatedByInput>
    updateMany?: Enumerable<UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_CreatedByInput>
    deleteMany?: Enumerable<UserResetCredentialScalarWhereInput>
  }

  export type UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput = {
    create?: XOR<Enumerable<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>, Enumerable<UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>>
    connectOrCreate?: Enumerable<UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_ModifiedByInput>
    upsert?: Enumerable<UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_ModifiedByInput>
    createMany?: UserResetCredentialCreateManyUser_UserToUserResetCredential_ModifiedByInputEnvelope
    set?: Enumerable<UserResetCredentialWhereUniqueInput>
    disconnect?: Enumerable<UserResetCredentialWhereUniqueInput>
    delete?: Enumerable<UserResetCredentialWhereUniqueInput>
    connect?: Enumerable<UserResetCredentialWhereUniqueInput>
    update?: Enumerable<UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_ModifiedByInput>
    updateMany?: Enumerable<UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_ModifiedByInput>
    deleteMany?: Enumerable<UserResetCredentialScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    create?: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_UserIdInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    create?: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    create?: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_UserIdNestedInput = {
    create?: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_UserIdInput
    upsert?: UserUpsertWithoutUserResetCredential_UserToUserResetCredential_UserIdInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput, UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput>
  }

  export type UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_CreatedByNestedInput = {
    create?: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput
    upsert?: UserUpsertWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput, UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput>
  }

  export type UserUpdateOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByNestedInput = {
    create?: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput
    upsert?: UserUpsertWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput, UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput>
  }

  export type NestedBigIntFilter = {
    equals?: bigint | number
    in?: Enumerable<bigint> | Enumerable<number>
    notIn?: Enumerable<bigint> | Enumerable<number>
    lt?: bigint | number
    lte?: bigint | number
    gt?: bigint | number
    gte?: bigint | number
    not?: NestedBigIntFilter | bigint | number
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedBigIntWithAggregatesFilter = {
    equals?: bigint | number
    in?: Enumerable<bigint> | Enumerable<number>
    notIn?: Enumerable<bigint> | Enumerable<number>
    lt?: bigint | number
    lte?: bigint | number
    gt?: bigint | number
    gte?: bigint | number
    not?: NestedBigIntWithAggregatesFilter | bigint | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedBigIntFilter
    _min?: NestedBigIntFilter
    _max?: NestedBigIntFilter
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedDateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedBoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type NestedBoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type NestedBytesNullableFilter = {
    equals?: Buffer | null
    in?: Enumerable<Buffer> | null
    notIn?: Enumerable<Buffer> | null
    not?: NestedBytesNullableFilter | Buffer | null
  }

  export type NestedBytesNullableWithAggregatesFilter = {
    equals?: Buffer | null
    in?: Enumerable<Buffer> | null
    notIn?: Enumerable<Buffer> | null
    not?: NestedBytesNullableWithAggregatesFilter | Buffer | null
    _count?: NestedIntNullableFilter
    _min?: NestedBytesNullableFilter
    _max?: NestedBytesNullableFilter
  }

  export type NotificationTemplateCreateWithoutNotificationInput = {
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_NotificationTemplate_CreatedByToUser: UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput
    User_NotificationTemplate_ModifiedByToUser?: UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput
  }

  export type NotificationTemplateUncheckedCreateWithoutNotificationInput = {
    Id?: number
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationTemplateCreateOrConnectWithoutNotificationInput = {
    where: NotificationTemplateWhereUniqueInput
    create: XOR<NotificationTemplateCreateWithoutNotificationInput, NotificationTemplateUncheckedCreateWithoutNotificationInput>
  }

  export type UserCreateWithoutNotification_Notification_CreatedByToUserInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateWithoutNotification_Notification_CreatedByToUserInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserCreateOrConnectWithoutNotification_Notification_CreatedByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotification_Notification_CreatedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_CreatedByToUserInput>
  }

  export type UserCreateWithoutNotification_Notification_ModifiedByToUserInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateWithoutNotification_Notification_ModifiedByToUserInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserCreateOrConnectWithoutNotification_Notification_ModifiedByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotification_Notification_ModifiedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_ModifiedByToUserInput>
  }

  export type NotificationTemplateUpsertWithoutNotificationInput = {
    update: XOR<NotificationTemplateUpdateWithoutNotificationInput, NotificationTemplateUncheckedUpdateWithoutNotificationInput>
    create: XOR<NotificationTemplateCreateWithoutNotificationInput, NotificationTemplateUncheckedCreateWithoutNotificationInput>
  }

  export type NotificationTemplateUpdateWithoutNotificationInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_NotificationTemplate_CreatedByToUser?: UserUpdateOneRequiredWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserNestedInput
    User_NotificationTemplate_ModifiedByToUser?: UserUpdateOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserNestedInput
  }

  export type NotificationTemplateUncheckedUpdateWithoutNotificationInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUpsertWithoutNotification_Notification_CreatedByToUserInput = {
    update: XOR<UserUpdateWithoutNotification_Notification_CreatedByToUserInput, UserUncheckedUpdateWithoutNotification_Notification_CreatedByToUserInput>
    create: XOR<UserCreateWithoutNotification_Notification_CreatedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_CreatedByToUserInput>
  }

  export type UserUpdateWithoutNotification_Notification_CreatedByToUserInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateWithoutNotification_Notification_CreatedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUpsertWithoutNotification_Notification_ModifiedByToUserInput = {
    update: XOR<UserUpdateWithoutNotification_Notification_ModifiedByToUserInput, UserUncheckedUpdateWithoutNotification_Notification_ModifiedByToUserInput>
    create: XOR<UserCreateWithoutNotification_Notification_ModifiedByToUserInput, UserUncheckedCreateWithoutNotification_Notification_ModifiedByToUserInput>
  }

  export type UserUpdateWithoutNotification_Notification_ModifiedByToUserInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateWithoutNotification_Notification_ModifiedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserCreateOrConnectWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput>
  }

  export type UserCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserCreateOrConnectWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput>
  }

  export type NotificationCreateWithoutNotificationTemplateInput = {
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_Notification_CreatedByToUser: UserCreateNestedOneWithoutNotification_Notification_CreatedByToUserInput
    User_Notification_ModifiedByToUser?: UserCreateNestedOneWithoutNotification_Notification_ModifiedByToUserInput
  }

  export type NotificationUncheckedCreateWithoutNotificationTemplateInput = {
    Id?: number
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationCreateOrConnectWithoutNotificationTemplateInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutNotificationTemplateInput, NotificationUncheckedCreateWithoutNotificationTemplateInput>
  }

  export type NotificationCreateManyNotificationTemplateInputEnvelope = {
    data: Enumerable<NotificationCreateManyNotificationTemplateInput>
  }

  export type UserUpsertWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    update: XOR<UserUpdateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput, UserUncheckedUpdateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput>
    create: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput>
  }

  export type UserUpdateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUpsertWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    update: XOR<UserUpdateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput, UserUncheckedUpdateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput>
    create: XOR<UserCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput, UserUncheckedCreateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput>
  }

  export type UserUpdateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type NotificationUpsertWithWhereUniqueWithoutNotificationTemplateInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutNotificationTemplateInput, NotificationUncheckedUpdateWithoutNotificationTemplateInput>
    create: XOR<NotificationCreateWithoutNotificationTemplateInput, NotificationUncheckedCreateWithoutNotificationTemplateInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutNotificationTemplateInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutNotificationTemplateInput, NotificationUncheckedUpdateWithoutNotificationTemplateInput>
  }

  export type NotificationUpdateManyWithWhereWithoutNotificationTemplateInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutNotificationInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: Enumerable<NotificationScalarWhereInput>
    OR?: Enumerable<NotificationScalarWhereInput>
    NOT?: Enumerable<NotificationScalarWhereInput>
    Id?: IntFilter | number
    NotificationTemplateId?: IntFilter | number
    Sender?: StringNullableFilter | string | null
    Phone?: StringNullableFilter | string | null
    Recipient?: StringNullableFilter | string | null
    CCRecipient?: StringNullableFilter | string | null
    Subject?: StringNullableFilter | string | null
    Body?: StringFilter | string
    NotificationType?: StringFilter | string
    IsProcessed?: BoolFilter | boolean
    ErrorMessage?: StringNullableFilter | string | null
    RetryCount?: IntNullableFilter | number | null
    SentDate?: DateTimeFilter | Date | string
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
  }

  export type UserCreateWithoutRoleMasterInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateWithoutRoleMasterInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserCreateOrConnectWithoutRoleMasterInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRoleMasterInput, UserUncheckedCreateWithoutRoleMasterInput>
  }

  export type UserCreateManyRoleMasterInputEnvelope = {
    data: Enumerable<UserCreateManyRoleMasterInput>
  }

  export type UserUpsertWithWhereUniqueWithoutRoleMasterInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRoleMasterInput, UserUncheckedUpdateWithoutRoleMasterInput>
    create: XOR<UserCreateWithoutRoleMasterInput, UserUncheckedCreateWithoutRoleMasterInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRoleMasterInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRoleMasterInput, UserUncheckedUpdateWithoutRoleMasterInput>
  }

  export type UserUpdateManyWithWhereWithoutRoleMasterInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUserInput>
  }

  export type UserScalarWhereInput = {
    AND?: Enumerable<UserScalarWhereInput>
    OR?: Enumerable<UserScalarWhereInput>
    NOT?: Enumerable<UserScalarWhereInput>
    Id?: IntFilter | number
    FirstName?: StringFilter | string
    LastName?: StringFilter | string
    EmailID?: StringFilter | string
    UserName?: StringNullableFilter | string | null
    Password?: StringNullableFilter | string | null
    IsActive?: BoolFilter | boolean
    LastAccess?: DateTimeNullableFilter | Date | string | null
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
    IsVerified?: BoolNullableFilter | boolean | null
    ActivationCode?: StringNullableFilter | string | null
    PasswordResetDuration?: DateTimeNullableFilter | Date | string | null
    RoleId?: IntNullableFilter | number | null
  }

  export type RoleMasterCreateWithoutUserInput = {
    Name: string
    Description?: string | null
    IsActive?: boolean
    CreateDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
  }

  export type RoleMasterUncheckedCreateWithoutUserInput = {
    Id?: number
    Name: string
    Description?: string | null
    IsActive?: boolean
    CreateDate?: Date | string
    CreatedBy?: number | null
    ModifiedDate?: Date | string | null
    ModifiedBy?: number | null
  }

  export type RoleMasterCreateOrConnectWithoutUserInput = {
    where: RoleMasterWhereUniqueInput
    create: XOR<RoleMasterCreateWithoutUserInput, RoleMasterUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateWithoutUser_Notification_CreatedByToUserInput = {
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    NotificationTemplate: NotificationTemplateCreateNestedOneWithoutNotificationInput
    User_Notification_ModifiedByToUser?: UserCreateNestedOneWithoutNotification_Notification_ModifiedByToUserInput
  }

  export type NotificationUncheckedCreateWithoutUser_Notification_CreatedByToUserInput = {
    Id?: number
    NotificationTemplateId: number
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationCreateOrConnectWithoutUser_Notification_CreatedByToUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUser_Notification_CreatedByToUserInput, NotificationUncheckedCreateWithoutUser_Notification_CreatedByToUserInput>
  }

  export type NotificationCreateManyUser_Notification_CreatedByToUserInputEnvelope = {
    data: Enumerable<NotificationCreateManyUser_Notification_CreatedByToUserInput>
  }

  export type NotificationCreateWithoutUser_Notification_ModifiedByToUserInput = {
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    NotificationTemplate: NotificationTemplateCreateNestedOneWithoutNotificationInput
    User_Notification_CreatedByToUser: UserCreateNestedOneWithoutNotification_Notification_CreatedByToUserInput
  }

  export type NotificationUncheckedCreateWithoutUser_Notification_ModifiedByToUserInput = {
    Id?: number
    NotificationTemplateId: number
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
  }

  export type NotificationCreateOrConnectWithoutUser_Notification_ModifiedByToUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUser_Notification_ModifiedByToUserInput, NotificationUncheckedCreateWithoutUser_Notification_ModifiedByToUserInput>
  }

  export type NotificationCreateManyUser_Notification_ModifiedByToUserInputEnvelope = {
    data: Enumerable<NotificationCreateManyUser_Notification_ModifiedByToUserInput>
  }

  export type NotificationTemplateCreateWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_NotificationTemplate_ModifiedByToUser?: UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput
    Notification?: NotificationCreateNestedManyWithoutNotificationTemplateInput
  }

  export type NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    Id?: number
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    Notification?: NotificationUncheckedCreateNestedManyWithoutNotificationTemplateInput
  }

  export type NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    where: NotificationTemplateWhereUniqueInput
    create: XOR<NotificationTemplateCreateWithoutUser_NotificationTemplate_CreatedByToUserInput, NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>
  }

  export type NotificationTemplateCreateManyUser_NotificationTemplate_CreatedByToUserInputEnvelope = {
    data: Enumerable<NotificationTemplateCreateManyUser_NotificationTemplate_CreatedByToUserInput>
  }

  export type NotificationTemplateCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_NotificationTemplate_CreatedByToUser: UserCreateNestedOneWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput
    Notification?: NotificationCreateNestedManyWithoutNotificationTemplateInput
  }

  export type NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    Id?: number
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    Notification?: NotificationUncheckedCreateNestedManyWithoutNotificationTemplateInput
  }

  export type NotificationTemplateCreateOrConnectWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    where: NotificationTemplateWhereUniqueInput
    create: XOR<NotificationTemplateCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput, NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>
  }

  export type NotificationTemplateCreateManyUser_NotificationTemplate_ModifiedByToUserInputEnvelope = {
    data: Enumerable<NotificationTemplateCreateManyUser_NotificationTemplate_ModifiedByToUserInput>
  }

  export type UserResetCredentialCreateWithoutUser_UserToUserResetCredential_UserIdInput = {
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_UserToUserResetCredential_CreatedBy: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput
    User_UserToUserResetCredential_ModifiedBy?: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput
  }

  export type UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_UserIdInput = {
    Id?: number
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_UserIdInput = {
    where: UserResetCredentialWhereUniqueInput
    create: XOR<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_UserIdInput, UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_UserIdInput>
  }

  export type UserResetCredentialCreateManyUser_UserToUserResetCredential_UserIdInputEnvelope = {
    data: Enumerable<UserResetCredentialCreateManyUser_UserToUserResetCredential_UserIdInput>
  }

  export type UserResetCredentialCreateWithoutUser_UserToUserResetCredential_CreatedByInput = {
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_UserToUserResetCredential_UserId: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_UserIdInput
    User_UserToUserResetCredential_ModifiedBy?: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput
  }

  export type UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_CreatedByInput = {
    Id?: number
    UserId: number
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_CreatedByInput = {
    where: UserResetCredentialWhereUniqueInput
    create: XOR<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_CreatedByInput, UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_CreatedByInput>
  }

  export type UserResetCredentialCreateManyUser_UserToUserResetCredential_CreatedByInputEnvelope = {
    data: Enumerable<UserResetCredentialCreateManyUser_UserToUserResetCredential_CreatedByInput>
  }

  export type UserResetCredentialCreateWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
    User_UserToUserResetCredential_UserId: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_UserIdInput
    User_UserToUserResetCredential_CreatedBy: UserCreateNestedOneWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput
  }

  export type UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    Id?: number
    UserId: number
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialCreateOrConnectWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    where: UserResetCredentialWhereUniqueInput
    create: XOR<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_ModifiedByInput, UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>
  }

  export type UserResetCredentialCreateManyUser_UserToUserResetCredential_ModifiedByInputEnvelope = {
    data: Enumerable<UserResetCredentialCreateManyUser_UserToUserResetCredential_ModifiedByInput>
  }

  export type RoleMasterUpsertWithoutUserInput = {
    update: XOR<RoleMasterUpdateWithoutUserInput, RoleMasterUncheckedUpdateWithoutUserInput>
    create: XOR<RoleMasterCreateWithoutUserInput, RoleMasterUncheckedCreateWithoutUserInput>
  }

  export type RoleMasterUpdateWithoutUserInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreateDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RoleMasterUncheckedUpdateWithoutUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreateDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type NotificationUpsertWithWhereUniqueWithoutUser_Notification_CreatedByToUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUser_Notification_CreatedByToUserInput, NotificationUncheckedUpdateWithoutUser_Notification_CreatedByToUserInput>
    create: XOR<NotificationCreateWithoutUser_Notification_CreatedByToUserInput, NotificationUncheckedCreateWithoutUser_Notification_CreatedByToUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUser_Notification_CreatedByToUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUser_Notification_CreatedByToUserInput, NotificationUncheckedUpdateWithoutUser_Notification_CreatedByToUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUser_Notification_CreatedByToUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutNotification_Notification_CreatedByToUserInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutUser_Notification_ModifiedByToUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUser_Notification_ModifiedByToUserInput, NotificationUncheckedUpdateWithoutUser_Notification_ModifiedByToUserInput>
    create: XOR<NotificationCreateWithoutUser_Notification_ModifiedByToUserInput, NotificationUncheckedCreateWithoutUser_Notification_ModifiedByToUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUser_Notification_ModifiedByToUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUser_Notification_ModifiedByToUserInput, NotificationUncheckedUpdateWithoutUser_Notification_ModifiedByToUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUser_Notification_ModifiedByToUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutNotification_Notification_ModifiedByToUserInput>
  }

  export type NotificationTemplateUpsertWithWhereUniqueWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    where: NotificationTemplateWhereUniqueInput
    update: XOR<NotificationTemplateUpdateWithoutUser_NotificationTemplate_CreatedByToUserInput, NotificationTemplateUncheckedUpdateWithoutUser_NotificationTemplate_CreatedByToUserInput>
    create: XOR<NotificationTemplateCreateWithoutUser_NotificationTemplate_CreatedByToUserInput, NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_CreatedByToUserInput>
  }

  export type NotificationTemplateUpdateWithWhereUniqueWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    where: NotificationTemplateWhereUniqueInput
    data: XOR<NotificationTemplateUpdateWithoutUser_NotificationTemplate_CreatedByToUserInput, NotificationTemplateUncheckedUpdateWithoutUser_NotificationTemplate_CreatedByToUserInput>
  }

  export type NotificationTemplateUpdateManyWithWhereWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    where: NotificationTemplateScalarWhereInput
    data: XOR<NotificationTemplateUpdateManyMutationInput, NotificationTemplateUncheckedUpdateManyWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput>
  }

  export type NotificationTemplateScalarWhereInput = {
    AND?: Enumerable<NotificationTemplateScalarWhereInput>
    OR?: Enumerable<NotificationTemplateScalarWhereInput>
    NOT?: Enumerable<NotificationTemplateScalarWhereInput>
    Id?: IntFilter | number
    Name?: StringFilter | string
    Description?: StringFilter | string
    Subject?: StringFilter | string
    Body?: StringFilter | string
    Type?: StringFilter | string
    IsActive?: BoolFilter | boolean
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
  }

  export type NotificationTemplateUpsertWithWhereUniqueWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    where: NotificationTemplateWhereUniqueInput
    update: XOR<NotificationTemplateUpdateWithoutUser_NotificationTemplate_ModifiedByToUserInput, NotificationTemplateUncheckedUpdateWithoutUser_NotificationTemplate_ModifiedByToUserInput>
    create: XOR<NotificationTemplateCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput, NotificationTemplateUncheckedCreateWithoutUser_NotificationTemplate_ModifiedByToUserInput>
  }

  export type NotificationTemplateUpdateWithWhereUniqueWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    where: NotificationTemplateWhereUniqueInput
    data: XOR<NotificationTemplateUpdateWithoutUser_NotificationTemplate_ModifiedByToUserInput, NotificationTemplateUncheckedUpdateWithoutUser_NotificationTemplate_ModifiedByToUserInput>
  }

  export type NotificationTemplateUpdateManyWithWhereWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    where: NotificationTemplateScalarWhereInput
    data: XOR<NotificationTemplateUpdateManyMutationInput, NotificationTemplateUncheckedUpdateManyWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput>
  }

  export type UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_UserIdInput = {
    where: UserResetCredentialWhereUniqueInput
    update: XOR<UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_UserIdInput, UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_UserIdInput>
    create: XOR<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_UserIdInput, UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_UserIdInput>
  }

  export type UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_UserIdInput = {
    where: UserResetCredentialWhereUniqueInput
    data: XOR<UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_UserIdInput, UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_UserIdInput>
  }

  export type UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_UserIdInput = {
    where: UserResetCredentialScalarWhereInput
    data: XOR<UserResetCredentialUpdateManyMutationInput, UserResetCredentialUncheckedUpdateManyWithoutUserResetCredential_UserToUserResetCredential_UserIdInput>
  }

  export type UserResetCredentialScalarWhereInput = {
    AND?: Enumerable<UserResetCredentialScalarWhereInput>
    OR?: Enumerable<UserResetCredentialScalarWhereInput>
    NOT?: Enumerable<UserResetCredentialScalarWhereInput>
    Id?: IntFilter | number
    UserId?: IntFilter | number
    ResetCode?: StringFilter | string
    IsActive?: BoolFilter | boolean
    TimeValid?: IntFilter | number
    EmailSentTime?: DateTimeFilter | Date | string
    CreatedBy?: IntFilter | number
    CreatedDate?: DateTimeFilter | Date | string
    ModifiedBy?: IntNullableFilter | number | null
    ModifiedDate?: DateTimeNullableFilter | Date | string | null
  }

  export type UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_CreatedByInput = {
    where: UserResetCredentialWhereUniqueInput
    update: XOR<UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_CreatedByInput, UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_CreatedByInput>
    create: XOR<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_CreatedByInput, UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_CreatedByInput>
  }

  export type UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_CreatedByInput = {
    where: UserResetCredentialWhereUniqueInput
    data: XOR<UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_CreatedByInput, UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_CreatedByInput>
  }

  export type UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_CreatedByInput = {
    where: UserResetCredentialScalarWhereInput
    data: XOR<UserResetCredentialUpdateManyMutationInput, UserResetCredentialUncheckedUpdateManyWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput>
  }

  export type UserResetCredentialUpsertWithWhereUniqueWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    where: UserResetCredentialWhereUniqueInput
    update: XOR<UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_ModifiedByInput, UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_ModifiedByInput>
    create: XOR<UserResetCredentialCreateWithoutUser_UserToUserResetCredential_ModifiedByInput, UserResetCredentialUncheckedCreateWithoutUser_UserToUserResetCredential_ModifiedByInput>
  }

  export type UserResetCredentialUpdateWithWhereUniqueWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    where: UserResetCredentialWhereUniqueInput
    data: XOR<UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_ModifiedByInput, UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_ModifiedByInput>
  }

  export type UserResetCredentialUpdateManyWithWhereWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    where: UserResetCredentialScalarWhereInput
    data: XOR<UserResetCredentialUpdateManyMutationInput, UserResetCredentialUncheckedUpdateManyWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput>
  }

  export type UserCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput>
  }

  export type UserCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_ModifiedByInput
  }

  export type UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput>
  }

  export type UserCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleMaster?: RoleMasterCreateNestedOneWithoutUserInput
    Notification_Notification_CreatedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
  }

  export type UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    Id?: number
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
    RoleId?: number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_CreatedByToUserInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedCreateNestedManyWithoutUser_Notification_ModifiedByToUserInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_CreatedByToUserInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedCreateNestedManyWithoutUser_NotificationTemplate_ModifiedByToUserInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_UserIdInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedCreateNestedManyWithoutUser_UserToUserResetCredential_CreatedByInput
  }

  export type UserCreateOrConnectWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput>
  }

  export type UserUpsertWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    update: XOR<UserUpdateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput, UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput>
    create: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput>
  }

  export type UserUpdateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUpsertWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    update: XOR<UserUpdateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput, UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput>
    create: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput>
  }

  export type UserUpdateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUpsertWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    update: XOR<UserUpdateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput, UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput>
    create: XOR<UserCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput, UserUncheckedCreateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput>
  }

  export type UserUpdateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleMaster?: RoleMasterUpdateOneWithoutUserNestedInput
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleId?: NullableIntFieldUpdateOperationsInput | number | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
  }

  export type NotificationCreateManyNotificationTemplateInput = {
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationUpdateWithoutNotificationTemplateInput = {
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_Notification_CreatedByToUser?: UserUpdateOneRequiredWithoutNotification_Notification_CreatedByToUserNestedInput
    User_Notification_ModifiedByToUser?: UserUpdateOneWithoutNotification_Notification_ModifiedByToUserNestedInput
  }

  export type NotificationUncheckedUpdateWithoutNotificationTemplateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutNotificationInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserCreateManyRoleMasterInput = {
    FirstName: string
    LastName: string
    EmailID: string
    UserName?: string | null
    Password?: string | null
    IsActive?: boolean
    LastAccess?: Date | string | null
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
    IsVerified?: boolean | null
    ActivationCode?: string | null
    PasswordResetDuration?: Date | string | null
  }

  export type UserUpdateWithoutRoleMasterInput = {
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Notification_Notification_CreatedByToUser?: NotificationUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateWithoutRoleMasterInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Notification_Notification_CreatedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_CreatedByToUserNestedInput
    Notification_Notification_ModifiedByToUser?: NotificationUncheckedUpdateManyWithoutUser_Notification_ModifiedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_CreatedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_CreatedByToUserNestedInput
    NotificationTemplate_NotificationTemplate_ModifiedByToUser?: NotificationTemplateUncheckedUpdateManyWithoutUser_NotificationTemplate_ModifiedByToUserNestedInput
    UserResetCredential_UserToUserResetCredential_UserId?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_UserIdNestedInput
    UserResetCredential_UserToUserResetCredential_CreatedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_CreatedByNestedInput
    UserResetCredential_UserToUserResetCredential_ModifiedBy?: UserResetCredentialUncheckedUpdateManyWithoutUser_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    FirstName?: StringFieldUpdateOperationsInput | string
    LastName?: StringFieldUpdateOperationsInput | string
    EmailID?: StringFieldUpdateOperationsInput | string
    UserName?: NullableStringFieldUpdateOperationsInput | string | null
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    LastAccess?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsVerified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ActivationCode?: NullableStringFieldUpdateOperationsInput | string | null
    PasswordResetDuration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationCreateManyUser_Notification_CreatedByToUserInput = {
    NotificationTemplateId: number
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationCreateManyUser_Notification_ModifiedByToUserInput = {
    NotificationTemplateId: number
    Sender?: string | null
    Phone?: string | null
    Recipient?: string | null
    CCRecipient?: string | null
    Subject?: string | null
    Body: string
    NotificationType: string
    IsProcessed?: boolean
    ErrorMessage?: string | null
    RetryCount?: number | null
    SentDate: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
  }

  export type NotificationTemplateCreateManyUser_NotificationTemplate_CreatedByToUserInput = {
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type NotificationTemplateCreateManyUser_NotificationTemplate_ModifiedByToUserInput = {
    Name: string
    Description: string
    Subject: string
    Body: string
    Type: string
    IsActive?: boolean
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialCreateManyUser_UserToUserResetCredential_UserIdInput = {
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialCreateManyUser_UserToUserResetCredential_CreatedByInput = {
    UserId: number
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedDate: Date | string
    ModifiedBy?: number | null
    ModifiedDate?: Date | string | null
  }

  export type UserResetCredentialCreateManyUser_UserToUserResetCredential_ModifiedByInput = {
    UserId: number
    ResetCode: string
    IsActive?: boolean
    TimeValid: number
    EmailSentTime: Date | string
    CreatedBy: number
    CreatedDate: Date | string
    ModifiedDate?: Date | string | null
  }

  export type NotificationUpdateWithoutUser_Notification_CreatedByToUserInput = {
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NotificationTemplate?: NotificationTemplateUpdateOneRequiredWithoutNotificationNestedInput
    User_Notification_ModifiedByToUser?: UserUpdateOneWithoutNotification_Notification_ModifiedByToUserNestedInput
  }

  export type NotificationUncheckedUpdateWithoutUser_Notification_CreatedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    NotificationTemplateId?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutNotification_Notification_CreatedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    NotificationTemplateId?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUpdateWithoutUser_Notification_ModifiedByToUserInput = {
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NotificationTemplate?: NotificationTemplateUpdateOneRequiredWithoutNotificationNestedInput
    User_Notification_CreatedByToUser?: UserUpdateOneRequiredWithoutNotification_Notification_CreatedByToUserNestedInput
  }

  export type NotificationUncheckedUpdateWithoutUser_Notification_ModifiedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    NotificationTemplateId?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutNotification_Notification_ModifiedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    NotificationTemplateId?: IntFieldUpdateOperationsInput | number
    Sender?: NullableStringFieldUpdateOperationsInput | string | null
    Phone?: NullableStringFieldUpdateOperationsInput | string | null
    Recipient?: NullableStringFieldUpdateOperationsInput | string | null
    CCRecipient?: NullableStringFieldUpdateOperationsInput | string | null
    Subject?: NullableStringFieldUpdateOperationsInput | string | null
    Body?: StringFieldUpdateOperationsInput | string
    NotificationType?: StringFieldUpdateOperationsInput | string
    IsProcessed?: BoolFieldUpdateOperationsInput | boolean
    ErrorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    RetryCount?: NullableIntFieldUpdateOperationsInput | number | null
    SentDate?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationTemplateUpdateWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_NotificationTemplate_ModifiedByToUser?: UserUpdateOneWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserNestedInput
    Notification?: NotificationUpdateManyWithoutNotificationTemplateNestedInput
  }

  export type NotificationTemplateUncheckedUpdateWithoutUser_NotificationTemplate_CreatedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Notification?: NotificationUncheckedUpdateManyWithoutNotificationTemplateNestedInput
  }

  export type NotificationTemplateUncheckedUpdateManyWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationTemplateUpdateWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_NotificationTemplate_CreatedByToUser?: UserUpdateOneRequiredWithoutNotificationTemplate_NotificationTemplate_CreatedByToUserNestedInput
    Notification?: NotificationUpdateManyWithoutNotificationTemplateNestedInput
  }

  export type NotificationTemplateUncheckedUpdateWithoutUser_NotificationTemplate_ModifiedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Notification?: NotificationUncheckedUpdateManyWithoutNotificationTemplateNestedInput
  }

  export type NotificationTemplateUncheckedUpdateManyWithoutNotificationTemplate_NotificationTemplate_ModifiedByToUserInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Name?: StringFieldUpdateOperationsInput | string
    Description?: StringFieldUpdateOperationsInput | string
    Subject?: StringFieldUpdateOperationsInput | string
    Body?: StringFieldUpdateOperationsInput | string
    Type?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_UserIdInput = {
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserToUserResetCredential_CreatedBy?: UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_CreatedByNestedInput
    User_UserToUserResetCredential_ModifiedBy?: UserUpdateOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_UserIdInput = {
    Id?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialUncheckedUpdateManyWithoutUserResetCredential_UserToUserResetCredential_UserIdInput = {
    Id?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_CreatedByInput = {
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserToUserResetCredential_UserId?: UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_UserIdNestedInput
    User_UserToUserResetCredential_ModifiedBy?: UserUpdateOneWithoutUserResetCredential_UserToUserResetCredential_ModifiedByNestedInput
  }

  export type UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_CreatedByInput = {
    Id?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialUncheckedUpdateManyWithoutUserResetCredential_UserToUserResetCredential_CreatedByInput = {
    Id?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedBy?: NullableIntFieldUpdateOperationsInput | number | null
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialUpdateWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserToUserResetCredential_UserId?: UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_UserIdNestedInput
    User_UserToUserResetCredential_CreatedBy?: UserUpdateOneRequiredWithoutUserResetCredential_UserToUserResetCredential_CreatedByNestedInput
  }

  export type UserResetCredentialUncheckedUpdateWithoutUser_UserToUserResetCredential_ModifiedByInput = {
    Id?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserResetCredentialUncheckedUpdateManyWithoutUserResetCredential_UserToUserResetCredential_ModifiedByInput = {
    Id?: IntFieldUpdateOperationsInput | number
    UserId?: IntFieldUpdateOperationsInput | number
    ResetCode?: StringFieldUpdateOperationsInput | string
    IsActive?: BoolFieldUpdateOperationsInput | boolean
    TimeValid?: IntFieldUpdateOperationsInput | number
    EmailSentTime?: DateTimeFieldUpdateOperationsInput | Date | string
    CreatedBy?: IntFieldUpdateOperationsInput | number
    CreatedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    ModifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}