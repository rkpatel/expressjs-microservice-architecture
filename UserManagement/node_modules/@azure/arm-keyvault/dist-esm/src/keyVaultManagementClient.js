/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import { KeysImpl, VaultsImpl, PrivateEndpointConnectionsImpl, PrivateLinkResourcesImpl, ManagedHsmsImpl, MhsmPrivateEndpointConnectionsImpl, MhsmPrivateLinkResourcesImpl, OperationsImpl, SecretsImpl } from "./operations";
export class KeyVaultManagementClient extends coreClient.ServiceClient {
    /**
     * Initializes a new instance of the KeyVaultManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.
     *                       The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials, subscriptionId, options) {
        if (credentials === undefined) {
            throw new Error("'credentials' cannot be null");
        }
        if (subscriptionId === undefined) {
            throw new Error("'subscriptionId' cannot be null");
        }
        // Initializing default values for options
        if (!options) {
            options = {};
        }
        const defaults = {
            requestContentType: "application/json; charset=utf-8",
            credential: credentials
        };
        const packageDetails = `azsdk-js-arm-keyvault/2.0.0`;
        const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix
            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
            : `${packageDetails}`;
        if (!options.credentialScopes) {
            options.credentialScopes = ["https://management.azure.com/.default"];
        }
        const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), { userAgentOptions: {
                userAgentPrefix
            }, baseUri: options.endpoint || "https://management.azure.com" });
        super(optionsWithDefaults);
        // Parameter assignments
        this.subscriptionId = subscriptionId;
        // Assigning values to Constant parameters
        this.$host = options.$host || "https://management.azure.com";
        this.apiVersion = options.apiVersion || "2021-10-01";
        this.keys = new KeysImpl(this);
        this.vaults = new VaultsImpl(this);
        this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);
        this.privateLinkResources = new PrivateLinkResourcesImpl(this);
        this.managedHsms = new ManagedHsmsImpl(this);
        this.mhsmPrivateEndpointConnections = new MhsmPrivateEndpointConnectionsImpl(this);
        this.mhsmPrivateLinkResources = new MhsmPrivateLinkResourcesImpl(this);
        this.operations = new OperationsImpl(this);
        this.secrets = new SecretsImpl(this);
    }
}
//# sourceMappingURL=keyVaultManagementClient.js.map