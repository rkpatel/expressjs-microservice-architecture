{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/keys.ts","../src/lroImpl.ts","../src/operations/vaults.ts","../src/operations/privateEndpointConnections.ts","../src/operations/privateLinkResources.ts","../src/operations/managedHsms.ts","../src/operations/mhsmPrivateEndpointConnections.ts","../src/operations/mhsmPrivateLinkResources.ts","../src/operations/operations.ts","../src/operations/secrets.ts","../src/keyVaultManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** The parameters used to create a key. */\nexport interface KeyCreateParameters {\n  /** The tags that will be assigned to the key. */\n  tags?: { [propertyName: string]: string };\n  /** The properties of the key to be created. */\n  properties: KeyProperties;\n}\n\n/** The properties of the key. */\nexport interface KeyProperties {\n  /** The attributes of the key. */\n  attributes?: KeyAttributes;\n  /** The type of the key. For valid values, see JsonWebKeyType. */\n  kty?: JsonWebKeyType;\n  keyOps?: JsonWebKeyOperation[];\n  /** The key size in bits. For example: 2048, 3072, or 4096 for RSA. */\n  keySize?: number;\n  /** The elliptic curve name. For valid values, see JsonWebKeyCurveName. */\n  curveName?: JsonWebKeyCurveName;\n  /**\n   * The URI to retrieve the current version of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyUri?: string;\n  /**\n   * The URI to retrieve the specific version of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyUriWithVersion?: string;\n}\n\n/** The object attributes managed by the Azure Key Vault service. */\nexport interface KeyAttributes {\n  /** Determines whether or not the object is enabled. */\n  enabled?: boolean;\n  /** Not before date in seconds since 1970-01-01T00:00:00Z. */\n  notBefore?: number;\n  /** Expiry date in seconds since 1970-01-01T00:00:00Z. */\n  expires?: number;\n  /**\n   * Creation time in seconds since 1970-01-01T00:00:00Z.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: number;\n  /**\n   * Last updated time in seconds since 1970-01-01T00:00:00Z.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updated?: number;\n  /**\n   * The deletion recovery level currently in effect for the object. If it contains 'Purgeable', then the object can be permanently deleted by a privileged user; otherwise, only the system can purge the object at the end of the retention interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recoveryLevel?: DeletionRecoveryLevel;\n  /** Indicates if the private key can be exported. */\n  exportable?: boolean;\n}\n\n/** Key Vault resource */\nexport interface Resource {\n  /**\n   * Fully qualified identifier of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Name of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Azure location of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Tags assigned to the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tags?: { [propertyName: string]: string };\n}\n\n/** An error response from Key Vault resource provider */\nexport interface CloudError {\n  /** An error response from Key Vault resource provider */\n  error?: CloudErrorBody;\n}\n\n/** An error response from Key Vault resource provider */\nexport interface CloudErrorBody {\n  /** Error code. This is a mnemonic that can be consumed programmatically. */\n  code?: string;\n  /** User friendly error message. The message is typically localized and may vary with service version. */\n  message?: string;\n}\n\n/** The page of keys. */\nexport interface KeyListResult {\n  /** The key resources. */\n  value?: Key[];\n  /** The URL to get the next page of keys. */\n  nextLink?: string;\n}\n\n/** Parameters for creating or updating a vault */\nexport interface VaultCreateOrUpdateParameters {\n  /** The supported Azure location where the key vault should be created. */\n  location: string;\n  /** The tags that will be assigned to the key vault. */\n  tags?: { [propertyName: string]: string };\n  /** Properties of the vault */\n  properties: VaultProperties;\n}\n\n/** Properties of the vault */\nexport interface VaultProperties {\n  /** The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. */\n  tenantId: string;\n  /** SKU details */\n  sku: Sku;\n  /** An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required. */\n  accessPolicies?: AccessPolicyEntry[];\n  /** The URI of the vault for performing operations on keys and secrets. */\n  vaultUri?: string;\n  /**\n   * The resource id of HSM Pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hsmPoolResourceId?: string;\n  /** Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault. */\n  enabledForDeployment?: boolean;\n  /** Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys. */\n  enabledForDiskEncryption?: boolean;\n  /** Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault. */\n  enabledForTemplateDeployment?: boolean;\n  /** Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false. */\n  enableSoftDelete?: boolean;\n  /** softDelete data retention days. It accepts >=7 and <=90. */\n  softDeleteRetentionInDays?: number;\n  /** Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC. */\n  enableRbacAuthorization?: boolean;\n  /** The vault's create mode to indicate whether the vault need to be recovered or not. */\n  createMode?: CreateMode;\n  /** Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value. */\n  enablePurgeProtection?: boolean;\n  /** Rules governing the accessibility of the key vault from specific network locations. */\n  networkAcls?: NetworkRuleSet;\n  /** Provisioning state of the vault. */\n  provisioningState?: VaultProvisioningState;\n  /**\n   * List of private endpoint connections associated with the key vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnectionItem[];\n  /** Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules. */\n  publicNetworkAccess?: string;\n}\n\n/** SKU details */\nexport interface Sku {\n  /** SKU family name */\n  family: SkuFamily;\n  /** SKU name to specify whether the key vault is a standard vault or a premium vault. */\n  name: SkuName;\n}\n\n/** An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. */\nexport interface AccessPolicyEntry {\n  /** The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. */\n  tenantId: string;\n  /** The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. */\n  objectId: string;\n  /**  Application ID of the client making request on behalf of a principal */\n  applicationId?: string;\n  /** Permissions the identity has for keys, secrets and certificates. */\n  permissions: Permissions;\n}\n\n/** Permissions the identity has for keys, secrets, certificates and storage. */\nexport interface Permissions {\n  /** Permissions to keys */\n  keys?: KeyPermissions[];\n  /** Permissions to secrets */\n  secrets?: SecretPermissions[];\n  /** Permissions to certificates */\n  certificates?: CertificatePermissions[];\n  /** Permissions to storage accounts */\n  storage?: StoragePermissions[];\n}\n\n/** A set of rules governing the network accessibility of a vault. */\nexport interface NetworkRuleSet {\n  /** Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'. */\n  bypass?: NetworkRuleBypassOptions;\n  /** The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated. */\n  defaultAction?: NetworkRuleAction;\n  /** The list of IP address rules. */\n  ipRules?: IPRule[];\n  /** The list of virtual network rules. */\n  virtualNetworkRules?: VirtualNetworkRule[];\n}\n\n/** A rule governing the accessibility of a vault from a specific ip address or ip range. */\nexport interface IPRule {\n  /** An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78). */\n  value: string;\n}\n\n/** A rule governing the accessibility of a vault from a specific virtual network. */\nexport interface VirtualNetworkRule {\n  /** Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'. */\n  id: string;\n  /** Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured. */\n  ignoreMissingVnetServiceEndpoint?: boolean;\n}\n\n/** Private endpoint connection item. */\nexport interface PrivateEndpointConnectionItem {\n  /** Id of private endpoint connection. */\n  id?: string;\n  /** Modified whenever there is a change in the state of private endpoint connection. */\n  etag?: string;\n  /** Properties of the private endpoint object. */\n  privateEndpoint?: PrivateEndpoint;\n  /** Approval state of the private link connection. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /** Provisioning state of the private endpoint connection. */\n  provisioningState?: PrivateEndpointConnectionProvisioningState;\n}\n\n/** Private endpoint object properties. */\nexport interface PrivateEndpoint {\n  /**\n   * Full identifier of the private endpoint resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** An object that represents the approval state of the private link connection. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been approved, rejected or removed by the key vault owner. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval or rejection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionsRequired?: ActionsRequired;\n}\n\n/** Resource information with extended details. */\nexport interface Vault {\n  /**\n   * Fully qualified identifier of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Name of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Azure location of the key vault resource. */\n  location?: string;\n  /** Tags assigned to the key vault resource. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * System metadata for the key vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Properties of the vault */\n  properties: VaultProperties;\n}\n\n/** Metadata pertaining to creation and last modification of the key vault resource. */\nexport interface SystemData {\n  /** The identity that created the key vault resource. */\n  createdBy?: string;\n  /** The type of identity that created the key vault resource. */\n  createdByType?: IdentityType;\n  /** The timestamp of the key vault resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the key vault resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the key vault resource. */\n  lastModifiedByType?: IdentityType;\n  /** The timestamp of the key vault resource last modification (UTC). */\n  lastModifiedAt?: Date;\n}\n\n/** Parameters for creating or updating a vault */\nexport interface VaultPatchParameters {\n  /** The tags that will be assigned to the key vault. */\n  tags?: { [propertyName: string]: string };\n  /** Properties of the vault */\n  properties?: VaultPatchProperties;\n}\n\n/** Properties of the vault */\nexport interface VaultPatchProperties {\n  /** The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. */\n  tenantId?: string;\n  /** SKU details */\n  sku?: Sku;\n  /** An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. */\n  accessPolicies?: AccessPolicyEntry[];\n  /** Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault. */\n  enabledForDeployment?: boolean;\n  /** Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys. */\n  enabledForDiskEncryption?: boolean;\n  /** Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault. */\n  enabledForTemplateDeployment?: boolean;\n  /** Property to specify whether the 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false. */\n  enableSoftDelete?: boolean;\n  /** Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the value of this property will not change. */\n  enableRbacAuthorization?: boolean;\n  /** softDelete data retention days. It accepts >=7 and <=90. */\n  softDeleteRetentionInDays?: number;\n  /** The vault's create mode to indicate whether the vault need to be recovered or not. */\n  createMode?: CreateMode;\n  /** Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value. */\n  enablePurgeProtection?: boolean;\n  /** A collection of rules governing the accessibility of the vault from specific network locations. */\n  networkAcls?: NetworkRuleSet;\n  /** Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules. */\n  publicNetworkAccess?: string;\n}\n\n/** Parameters for updating the access policy in a vault */\nexport interface VaultAccessPolicyParameters {\n  /**\n   * The resource id of the access policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The resource name of the access policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource name of the access policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The resource type of the access policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** Properties of the access policy */\n  properties: VaultAccessPolicyProperties;\n}\n\n/** Properties of the vault access policy */\nexport interface VaultAccessPolicyProperties {\n  /** An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. */\n  accessPolicies: AccessPolicyEntry[];\n}\n\n/** List of vaults */\nexport interface VaultListResult {\n  /** The list of vaults. */\n  value?: Vault[];\n  /** The URL to get the next set of vaults. */\n  nextLink?: string;\n}\n\n/** List of vaults */\nexport interface DeletedVaultListResult {\n  /** The list of deleted vaults. */\n  value?: DeletedVault[];\n  /** The URL to get the next set of deleted vaults. */\n  nextLink?: string;\n}\n\n/** Deleted vault information with extended details. */\nexport interface DeletedVault {\n  /**\n   * The resource ID for the deleted key vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the key vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource type of the key vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Properties of the vault */\n  properties?: DeletedVaultProperties;\n}\n\n/** Properties of the deleted vault. */\nexport interface DeletedVaultProperties {\n  /**\n   * The resource id of the original vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vaultId?: string;\n  /**\n   * The location of the original vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The deleted date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionDate?: Date;\n  /**\n   * The scheduled purged date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scheduledPurgeDate?: Date;\n  /**\n   * Tags of the original vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tags?: { [propertyName: string]: string };\n  /**\n   * Purge protection status of the original vault.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purgeProtectionEnabled?: boolean;\n}\n\n/** List of vault resources. */\nexport interface ResourceListResult {\n  /** The list of vault resources. */\n  value?: Resource[];\n  /** The URL to get the next set of vault resources. */\n  nextLink?: string;\n}\n\n/** The parameters used to check the availability of the vault name. */\nexport interface VaultCheckNameAvailabilityParameters {\n  /** The vault name. */\n  name: string;\n  /** The type of resource, Microsoft.KeyVault/vaults */\n  type: \"Microsoft.KeyVault/vaults\";\n}\n\n/** The CheckNameAvailability operation response. */\nexport interface CheckNameAvailabilityResult {\n  /**\n   * A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nameAvailable?: boolean;\n  /**\n   * The reason that a vault name could not be used. The Reason element is only returned if NameAvailable is false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: Reason;\n  /**\n   * An error message explaining the Reason value in more detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** List of private endpoint connections. */\nexport interface PrivateEndpointConnectionListResult {\n  /** The list of private endpoint connections. */\n  value?: PrivateEndpointConnection[];\n  /** The URL to get the next set of private endpoint connections. */\n  nextLink?: string;\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /** Array of private link resources */\n  value?: PrivateLinkResource[];\n}\n\n/** Properties of the managed HSM Pool */\nexport interface ManagedHsmProperties {\n  /** The Azure Active Directory tenant ID that should be used for authenticating requests to the managed HSM pool. */\n  tenantId?: string;\n  /** Array of initial administrators object ids for this managed hsm pool. */\n  initialAdminObjectIds?: string[];\n  /**\n   * The URI of the managed hsm pool for performing operations on keys.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hsmUri?: string;\n  /** Property to specify whether the 'soft delete' functionality is enabled for this managed HSM pool. If it's not set to any value(true or false) when creating new managed HSM pool, it will be set to true by default. Once set to true, it cannot be reverted to false. */\n  enableSoftDelete?: boolean;\n  /** softDelete data retention days. It accepts >=7 and <=90. */\n  softDeleteRetentionInDays?: number;\n  /** Property specifying whether protection against purge is enabled for this managed HSM pool. Setting this property to true activates protection against purge for this managed HSM pool and its content - only the Managed HSM service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible. */\n  enablePurgeProtection?: boolean;\n  /** The create mode to indicate whether the resource is being created or is being recovered from a deleted resource. */\n  createMode?: CreateMode;\n  /**\n   * Resource Status Message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusMessage?: string;\n  /**\n   * Provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Rules governing the accessibility of the key vault from specific network locations. */\n  networkAcls?: MhsmNetworkRuleSet;\n  /**\n   * List of private endpoint connections associated with the managed hsm pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: MhsmPrivateEndpointConnectionItem[];\n  /** Control permission for data plane traffic coming from public networks while private endpoint is enabled. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /**\n   * The scheduled purge date in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scheduledPurgeDate?: Date;\n}\n\n/** A set of rules governing the network accessibility of a managed hsm pool. */\nexport interface MhsmNetworkRuleSet {\n  /** Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'. */\n  bypass?: NetworkRuleBypassOptions;\n  /** The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated. */\n  defaultAction?: NetworkRuleAction;\n  /** The list of IP address rules. */\n  ipRules?: MhsmipRule[];\n  /** The list of virtual network rules. */\n  virtualNetworkRules?: MhsmVirtualNetworkRule[];\n}\n\n/** A rule governing the accessibility of a managed hsm pool from a specific ip address or ip range. */\nexport interface MhsmipRule {\n  /** An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78). */\n  value: string;\n}\n\n/** A rule governing the accessibility of a managed hsm pool from a specific virtual network. */\nexport interface MhsmVirtualNetworkRule {\n  /** Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'. */\n  id: string;\n}\n\n/** Private endpoint connection item. */\nexport interface MhsmPrivateEndpointConnectionItem {\n  /** Properties of the private endpoint object. */\n  privateEndpoint?: MhsmPrivateEndpoint;\n  /** Approval state of the private link connection. */\n  privateLinkServiceConnectionState?: MhsmPrivateLinkServiceConnectionState;\n  /** Provisioning state of the private endpoint connection. */\n  provisioningState?: PrivateEndpointConnectionProvisioningState;\n}\n\n/** Private endpoint object properties. */\nexport interface MhsmPrivateEndpoint {\n  /**\n   * Full identifier of the private endpoint resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** An object that represents the approval state of the private link connection. */\nexport interface MhsmPrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been approved, rejected or removed by the key vault owner. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval or rejection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionsRequired?: ActionsRequired;\n}\n\n/** Managed HSM resource */\nexport interface ManagedHsmResource {\n  /**\n   * The Azure Resource Manager resource ID for the managed HSM Pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the managed HSM Pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource type of the managed HSM Pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The supported Azure location where the managed HSM Pool should be created. */\n  location?: string;\n  /** SKU details */\n  sku?: ManagedHsmSku;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Metadata pertaining to creation and last modification of the key vault resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** SKU details */\nexport interface ManagedHsmSku {\n  /** SKU Family of the managed HSM Pool */\n  family: ManagedHsmSkuFamily;\n  /** SKU of the managed HSM Pool */\n  name: ManagedHsmSkuName;\n}\n\n/** The error exception. */\nexport interface ManagedHsmError {\n  /**\n   * The server error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorModel;\n}\n\n/** The server error. */\nexport interface ErrorModel {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The inner error, contains a more specific error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly innerError?: ErrorModel;\n}\n\n/** List of managed HSM Pools */\nexport interface ManagedHsmListResult {\n  /** The list of managed HSM Pools. */\n  value?: ManagedHsm[];\n  /** The URL to get the next set of managed HSM Pools. */\n  nextLink?: string;\n}\n\n/** List of private endpoint connections associated with a managed HSM Pools */\nexport interface MhsmPrivateEndpointConnectionsListResult {\n  /** The private endpoint connection associated with a managed HSM Pools. */\n  value?: MhsmPrivateEndpointConnection[];\n  /** The URL to get the next set of managed HSM Pools. */\n  nextLink?: string;\n}\n\n/** List of deleted managed HSM Pools */\nexport interface DeletedManagedHsmListResult {\n  /** The list of deleted managed HSM Pools. */\n  value?: DeletedManagedHsm[];\n  /** The URL to get the next set of deleted managed HSM Pools. */\n  nextLink?: string;\n}\n\nexport interface DeletedManagedHsm {\n  /**\n   * The Azure Resource Manager resource ID for the deleted managed HSM Pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the managed HSM Pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource type of the managed HSM Pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Properties of the deleted managed HSM */\n  properties?: DeletedManagedHsmProperties;\n}\n\n/** Properties of the deleted managed HSM. */\nexport interface DeletedManagedHsmProperties {\n  /**\n   * The resource id of the original managed HSM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly mhsmId?: string;\n  /**\n   * The location of the original managed HSM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The deleted date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionDate?: Date;\n  /**\n   * The scheduled purged date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scheduledPurgeDate?: Date;\n  /**\n   * Purge protection status of the original managed HSM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly purgeProtectionEnabled?: boolean;\n  /**\n   * Tags of the original managed HSM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tags?: { [propertyName: string]: string };\n}\n\n/** A list of private link resources */\nexport interface MhsmPrivateLinkResourceListResult {\n  /** Array of private link resources */\n  value?: MhsmPrivateLinkResource[];\n}\n\n/** Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Storage operations supported by the Storage resource provider. */\n  value?: Operation[];\n  /** The URL to get the next set of operations. */\n  nextLink?: string;\n}\n\n/** Key Vault REST API operation definition. */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** Display metadata associated with the operation. */\n  display?: OperationDisplay;\n  /** The origin of operations. */\n  origin?: string;\n  /** Property to specify whether the action is a data action. */\n  isDataAction?: boolean;\n  /** One property of operation, include metric specifications. */\n  serviceSpecification?: ServiceSpecification;\n}\n\n/** Display metadata associated with the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft Key Vault. */\n  provider?: string;\n  /** Resource on which the operation is performed etc. */\n  resource?: string;\n  /** Type of operation: get, read, delete, etc. */\n  operation?: string;\n  /** Description of operation. */\n  description?: string;\n}\n\n/** One property of operation, include log specifications. */\nexport interface ServiceSpecification {\n  /** Log specifications of operation. */\n  logSpecifications?: LogSpecification[];\n  /** Metric specifications of operation. */\n  metricSpecifications?: MetricSpecification[];\n}\n\n/** Log specification of operation. */\nexport interface LogSpecification {\n  /** Name of log specification. */\n  name?: string;\n  /** Display name of log specification. */\n  displayName?: string;\n  /** Blob duration of specification. */\n  blobDuration?: string;\n}\n\n/** Metric specification of operation. */\nexport interface MetricSpecification {\n  /** Name of metric specification. */\n  name?: string;\n  /** Display name of metric specification. */\n  displayName?: string;\n  /** Display description of metric specification. */\n  displayDescription?: string;\n  /** The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'. */\n  unit?: string;\n  /** The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'. */\n  aggregationType?: string;\n  /** The supported aggregation types for the metrics. */\n  supportedAggregationTypes?: string[];\n  /** The supported time grain types for the metrics. */\n  supportedTimeGrainTypes?: string[];\n  /** The metric lock aggregation type. */\n  lockAggregationType?: string;\n  /** The dimensions of metric */\n  dimensions?: DimensionProperties[];\n  /** Property to specify whether to fill gap with zero. */\n  fillGapWithZero?: boolean;\n  /** The internal metric name. */\n  internalMetricName?: string;\n}\n\n/** Type of operation: get, read, delete, etc. */\nexport interface DimensionProperties {\n  /** Name of dimension. */\n  name?: string;\n  /** Display name of dimension. */\n  displayName?: string;\n  /** Property to specify whether the dimension should be exported for Shoebox. */\n  toBeExportedForShoebox?: boolean;\n}\n\n/** Parameters for creating or updating a secret */\nexport interface SecretCreateOrUpdateParameters {\n  /** The tags that will be assigned to the secret. */\n  tags?: { [propertyName: string]: string };\n  /** Properties of the secret */\n  properties: SecretProperties;\n}\n\n/** Properties of the secret */\nexport interface SecretProperties {\n  /** The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets. */\n  value?: string;\n  /** The content type of the secret. */\n  contentType?: string;\n  /** The attributes of the secret. */\n  attributes?: SecretAttributes;\n  /**\n   * The URI to retrieve the current version of the secret.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secretUri?: string;\n  /**\n   * The URI to retrieve the specific version of the secret.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secretUriWithVersion?: string;\n}\n\n/** The object attributes managed by the KeyVault service. */\nexport interface Attributes {\n  /** Determines whether the object is enabled. */\n  enabled?: boolean;\n  /** Not before date in seconds since 1970-01-01T00:00:00Z. */\n  notBefore?: Date;\n  /** Expiry date in seconds since 1970-01-01T00:00:00Z. */\n  expires?: Date;\n  /**\n   * Creation time in seconds since 1970-01-01T00:00:00Z.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n  /**\n   * Last updated time in seconds since 1970-01-01T00:00:00Z.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updated?: Date;\n}\n\n/** Parameters for patching a secret */\nexport interface SecretPatchParameters {\n  /** The tags that will be assigned to the secret. */\n  tags?: { [propertyName: string]: string };\n  /** Properties of the secret */\n  properties?: SecretPatchProperties;\n}\n\n/** Properties of the secret */\nexport interface SecretPatchProperties {\n  /** The value of the secret. */\n  value?: string;\n  /** The content type of the secret. */\n  contentType?: string;\n  /** The attributes of the secret. */\n  attributes?: SecretAttributes;\n}\n\n/** List of secrets */\nexport interface SecretListResult {\n  /** The list of secrets. */\n  value?: Secret[];\n  /** The URL to get the next set of secrets. */\n  nextLink?: string;\n}\n\n/** The key resource. */\nexport type Key = Resource & {\n  /** The attributes of the key. */\n  attributes?: KeyAttributes;\n  /** The type of the key. For valid values, see JsonWebKeyType. */\n  kty?: JsonWebKeyType;\n  keyOps?: JsonWebKeyOperation[];\n  /** The key size in bits. For example: 2048, 3072, or 4096 for RSA. */\n  keySize?: number;\n  /** The elliptic curve name. For valid values, see JsonWebKeyCurveName. */\n  curveName?: JsonWebKeyCurveName;\n  /**\n   * The URI to retrieve the current version of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyUri?: string;\n  /**\n   * The URI to retrieve the specific version of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyUriWithVersion?: string;\n};\n\n/** Private endpoint connection resource. */\nexport type PrivateEndpointConnection = Resource & {\n  /** Modified whenever there is a change in the state of private endpoint connection. */\n  etag?: string;\n  /** Properties of the private endpoint object. */\n  privateEndpoint?: PrivateEndpoint;\n  /** Approval state of the private link connection. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /** Provisioning state of the private endpoint connection. */\n  provisioningState?: PrivateEndpointConnectionProvisioningState;\n};\n\n/** A private link resource */\nexport type PrivateLinkResource = Resource & {\n  /**\n   * Group identifier of private link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * Required member names of private link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** Required DNS zone names of the the private link resource. */\n  requiredZoneNames?: string[];\n};\n\n/** Resource information with extended details. */\nexport type Secret = Resource & {\n  /** Properties of the secret */\n  properties: SecretProperties;\n};\n\n/** Resource information with extended details. */\nexport type ManagedHsm = ManagedHsmResource & {\n  /** Properties of the managed HSM */\n  properties?: ManagedHsmProperties;\n};\n\n/** Private endpoint connection resource. */\nexport type MhsmPrivateEndpointConnection = ManagedHsmResource & {\n  /** Modified whenever there is a change in the state of private endpoint connection. */\n  etag?: string;\n  /** Properties of the private endpoint object. */\n  privateEndpoint?: MhsmPrivateEndpoint;\n  /** Approval state of the private link connection. */\n  privateLinkServiceConnectionState?: MhsmPrivateLinkServiceConnectionState;\n  /** Provisioning state of the private endpoint connection. */\n  provisioningState?: PrivateEndpointConnectionProvisioningState;\n};\n\n/** A private link resource */\nexport type MhsmPrivateLinkResource = ManagedHsmResource & {\n  /**\n   * Group identifier of private link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * Required member names of private link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** Required DNS zone names of the the private link resource. */\n  requiredZoneNames?: string[];\n};\n\n/** The secret management attributes. */\nexport type SecretAttributes = Attributes & {};\n\n/** Defines headers for PrivateEndpointConnections_put operation. */\nexport interface PrivateEndpointConnectionsPutHeaders {\n  /** (specified only if operation does not finish synchronously) The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation. */\n  retryAfter?: number;\n  /** (specified only if operation does not finish synchronously) The URI to poll for completion status. The response of this URI may be synchronous or asynchronous. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for PrivateEndpointConnections_delete operation. */\nexport interface PrivateEndpointConnectionsDeleteHeaders {\n  /** The recommended number of seconds to wait before calling the URI specified in the location header. */\n  retryAfter?: number;\n  /** The URI to poll for completion status. */\n  location?: string;\n}\n\n/** Defines headers for MhsmPrivateEndpointConnections_put operation. */\nexport interface MhsmPrivateEndpointConnectionsPutHeaders {\n  /** (specified only if operation does not finish synchronously) The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation. */\n  retryAfter?: number;\n  /** (specified only if operation does not finish synchronously) The URI to poll for completion status. The response of this URI may be synchronous or asynchronous. */\n  azureAsyncOperation?: string;\n}\n\n/** Defines headers for MhsmPrivateEndpointConnections_delete operation. */\nexport interface MhsmPrivateEndpointConnectionsDeleteHeaders {\n  /** The recommended number of seconds to wait before calling the URI specified in the location header. */\n  retryAfter?: number;\n  /** The URI to poll for completion status. */\n  location?: string;\n}\n\n/** Known values of {@link DeletionRecoveryLevel} that the service accepts. */\nexport enum KnownDeletionRecoveryLevel {\n  Purgeable = \"Purgeable\",\n  RecoverablePurgeable = \"Recoverable+Purgeable\",\n  Recoverable = \"Recoverable\",\n  RecoverableProtectedSubscription = \"Recoverable+ProtectedSubscription\"\n}\n\n/**\n * Defines values for DeletionRecoveryLevel. \\\n * {@link KnownDeletionRecoveryLevel} can be used interchangeably with DeletionRecoveryLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Purgeable** \\\n * **Recoverable+Purgeable** \\\n * **Recoverable** \\\n * **Recoverable+ProtectedSubscription**\n */\nexport type DeletionRecoveryLevel = string;\n\n/** Known values of {@link JsonWebKeyType} that the service accepts. */\nexport enum KnownJsonWebKeyType {\n  EC = \"EC\",\n  ECHSM = \"EC-HSM\",\n  RSA = \"RSA\",\n  RSAHSM = \"RSA-HSM\"\n}\n\n/**\n * Defines values for JsonWebKeyType. \\\n * {@link KnownJsonWebKeyType} can be used interchangeably with JsonWebKeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EC** \\\n * **EC-HSM** \\\n * **RSA** \\\n * **RSA-HSM**\n */\nexport type JsonWebKeyType = string;\n\n/** Known values of {@link JsonWebKeyOperation} that the service accepts. */\nexport enum KnownJsonWebKeyOperation {\n  Encrypt = \"encrypt\",\n  Decrypt = \"decrypt\",\n  Sign = \"sign\",\n  Verify = \"verify\",\n  WrapKey = \"wrapKey\",\n  UnwrapKey = \"unwrapKey\",\n  Import = \"import\"\n}\n\n/**\n * Defines values for JsonWebKeyOperation. \\\n * {@link KnownJsonWebKeyOperation} can be used interchangeably with JsonWebKeyOperation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **encrypt** \\\n * **decrypt** \\\n * **sign** \\\n * **verify** \\\n * **wrapKey** \\\n * **unwrapKey** \\\n * **import**\n */\nexport type JsonWebKeyOperation = string;\n\n/** Known values of {@link JsonWebKeyCurveName} that the service accepts. */\nexport enum KnownJsonWebKeyCurveName {\n  P256 = \"P-256\",\n  P384 = \"P-384\",\n  P521 = \"P-521\",\n  P256K = \"P-256K\"\n}\n\n/**\n * Defines values for JsonWebKeyCurveName. \\\n * {@link KnownJsonWebKeyCurveName} can be used interchangeably with JsonWebKeyCurveName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **P-256** \\\n * **P-384** \\\n * **P-521** \\\n * **P-256K**\n */\nexport type JsonWebKeyCurveName = string;\n\n/** Known values of {@link SkuFamily} that the service accepts. */\nexport enum KnownSkuFamily {\n  A = \"A\"\n}\n\n/**\n * Defines values for SkuFamily. \\\n * {@link KnownSkuFamily} can be used interchangeably with SkuFamily,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **A**\n */\nexport type SkuFamily = string;\n\n/** Known values of {@link KeyPermissions} that the service accepts. */\nexport enum KnownKeyPermissions {\n  All = \"all\",\n  Encrypt = \"encrypt\",\n  Decrypt = \"decrypt\",\n  WrapKey = \"wrapKey\",\n  UnwrapKey = \"unwrapKey\",\n  Sign = \"sign\",\n  Verify = \"verify\",\n  Get = \"get\",\n  List = \"list\",\n  Create = \"create\",\n  Update = \"update\",\n  Import = \"import\",\n  Delete = \"delete\",\n  Backup = \"backup\",\n  Restore = \"restore\",\n  Recover = \"recover\",\n  Purge = \"purge\"\n}\n\n/**\n * Defines values for KeyPermissions. \\\n * {@link KnownKeyPermissions} can be used interchangeably with KeyPermissions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **all** \\\n * **encrypt** \\\n * **decrypt** \\\n * **wrapKey** \\\n * **unwrapKey** \\\n * **sign** \\\n * **verify** \\\n * **get** \\\n * **list** \\\n * **create** \\\n * **update** \\\n * **import** \\\n * **delete** \\\n * **backup** \\\n * **restore** \\\n * **recover** \\\n * **purge**\n */\nexport type KeyPermissions = string;\n\n/** Known values of {@link SecretPermissions} that the service accepts. */\nexport enum KnownSecretPermissions {\n  All = \"all\",\n  Get = \"get\",\n  List = \"list\",\n  Set = \"set\",\n  Delete = \"delete\",\n  Backup = \"backup\",\n  Restore = \"restore\",\n  Recover = \"recover\",\n  Purge = \"purge\"\n}\n\n/**\n * Defines values for SecretPermissions. \\\n * {@link KnownSecretPermissions} can be used interchangeably with SecretPermissions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **all** \\\n * **get** \\\n * **list** \\\n * **set** \\\n * **delete** \\\n * **backup** \\\n * **restore** \\\n * **recover** \\\n * **purge**\n */\nexport type SecretPermissions = string;\n\n/** Known values of {@link CertificatePermissions} that the service accepts. */\nexport enum KnownCertificatePermissions {\n  All = \"all\",\n  Get = \"get\",\n  List = \"list\",\n  Delete = \"delete\",\n  Create = \"create\",\n  Import = \"import\",\n  Update = \"update\",\n  Managecontacts = \"managecontacts\",\n  Getissuers = \"getissuers\",\n  Listissuers = \"listissuers\",\n  Setissuers = \"setissuers\",\n  Deleteissuers = \"deleteissuers\",\n  Manageissuers = \"manageissuers\",\n  Recover = \"recover\",\n  Purge = \"purge\",\n  Backup = \"backup\",\n  Restore = \"restore\"\n}\n\n/**\n * Defines values for CertificatePermissions. \\\n * {@link KnownCertificatePermissions} can be used interchangeably with CertificatePermissions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **all** \\\n * **get** \\\n * **list** \\\n * **delete** \\\n * **create** \\\n * **import** \\\n * **update** \\\n * **managecontacts** \\\n * **getissuers** \\\n * **listissuers** \\\n * **setissuers** \\\n * **deleteissuers** \\\n * **manageissuers** \\\n * **recover** \\\n * **purge** \\\n * **backup** \\\n * **restore**\n */\nexport type CertificatePermissions = string;\n\n/** Known values of {@link StoragePermissions} that the service accepts. */\nexport enum KnownStoragePermissions {\n  All = \"all\",\n  Get = \"get\",\n  List = \"list\",\n  Delete = \"delete\",\n  Set = \"set\",\n  Update = \"update\",\n  Regeneratekey = \"regeneratekey\",\n  Recover = \"recover\",\n  Purge = \"purge\",\n  Backup = \"backup\",\n  Restore = \"restore\",\n  Setsas = \"setsas\",\n  Listsas = \"listsas\",\n  Getsas = \"getsas\",\n  Deletesas = \"deletesas\"\n}\n\n/**\n * Defines values for StoragePermissions. \\\n * {@link KnownStoragePermissions} can be used interchangeably with StoragePermissions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **all** \\\n * **get** \\\n * **list** \\\n * **delete** \\\n * **set** \\\n * **update** \\\n * **regeneratekey** \\\n * **recover** \\\n * **purge** \\\n * **backup** \\\n * **restore** \\\n * **setsas** \\\n * **listsas** \\\n * **getsas** \\\n * **deletesas**\n */\nexport type StoragePermissions = string;\n\n/** Known values of {@link NetworkRuleBypassOptions} that the service accepts. */\nexport enum KnownNetworkRuleBypassOptions {\n  AzureServices = \"AzureServices\",\n  None = \"None\"\n}\n\n/**\n * Defines values for NetworkRuleBypassOptions. \\\n * {@link KnownNetworkRuleBypassOptions} can be used interchangeably with NetworkRuleBypassOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureServices** \\\n * **None**\n */\nexport type NetworkRuleBypassOptions = string;\n\n/** Known values of {@link NetworkRuleAction} that the service accepts. */\nexport enum KnownNetworkRuleAction {\n  Allow = \"Allow\",\n  Deny = \"Deny\"\n}\n\n/**\n * Defines values for NetworkRuleAction. \\\n * {@link KnownNetworkRuleAction} can be used interchangeably with NetworkRuleAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Allow** \\\n * **Deny**\n */\nexport type NetworkRuleAction = string;\n\n/** Known values of {@link VaultProvisioningState} that the service accepts. */\nexport enum KnownVaultProvisioningState {\n  Succeeded = \"Succeeded\",\n  RegisteringDns = \"RegisteringDns\"\n}\n\n/**\n * Defines values for VaultProvisioningState. \\\n * {@link KnownVaultProvisioningState} can be used interchangeably with VaultProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **RegisteringDns**\n */\nexport type VaultProvisioningState = string;\n\n/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */\nexport enum KnownPrivateEndpointServiceConnectionStatus {\n  Pending = \"Pending\",\n  Approved = \"Approved\",\n  Rejected = \"Rejected\",\n  Disconnected = \"Disconnected\"\n}\n\n/**\n * Defines values for PrivateEndpointServiceConnectionStatus. \\\n * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected** \\\n * **Disconnected**\n */\nexport type PrivateEndpointServiceConnectionStatus = string;\n\n/** Known values of {@link ActionsRequired} that the service accepts. */\nexport enum KnownActionsRequired {\n  None = \"None\"\n}\n\n/**\n * Defines values for ActionsRequired. \\\n * {@link KnownActionsRequired} can be used interchangeably with ActionsRequired,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**\n */\nexport type ActionsRequired = string;\n\n/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */\nexport enum KnownPrivateEndpointConnectionProvisioningState {\n  Succeeded = \"Succeeded\",\n  Creating = \"Creating\",\n  Updating = \"Updating\",\n  Deleting = \"Deleting\",\n  Failed = \"Failed\",\n  Disconnected = \"Disconnected\"\n}\n\n/**\n * Defines values for PrivateEndpointConnectionProvisioningState. \\\n * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Creating** \\\n * **Updating** \\\n * **Deleting** \\\n * **Failed** \\\n * **Disconnected**\n */\nexport type PrivateEndpointConnectionProvisioningState = string;\n\n/** Known values of {@link IdentityType} that the service accepts. */\nexport enum KnownIdentityType {\n  User = \"User\",\n  Application = \"Application\",\n  ManagedIdentity = \"ManagedIdentity\",\n  Key = \"Key\"\n}\n\n/**\n * Defines values for IdentityType. \\\n * {@link KnownIdentityType} can be used interchangeably with IdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type IdentityType = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** The managed HSM Pool has been full provisioned. */\n  Succeeded = \"Succeeded\",\n  /** The managed HSM Pool is currently being provisioned. */\n  Provisioning = \"Provisioning\",\n  /** Provisioning of the managed HSM Pool has failed. */\n  Failed = \"Failed\",\n  /** The managed HSM Pool is currently being updated. */\n  Updating = \"Updating\",\n  /** The managed HSM Pool is currently being deleted. */\n  Deleting = \"Deleting\",\n  /** The managed HSM pool is ready for normal use. */\n  Activated = \"Activated\",\n  /** The managed HSM pool is waiting for a security domain restore action. */\n  SecurityDomainRestore = \"SecurityDomainRestore\",\n  /** The managed HSM pool is being restored from full HSM backup. */\n  Restoring = \"Restoring\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded**: The managed HSM Pool has been full provisioned. \\\n * **Provisioning**: The managed HSM Pool is currently being provisioned. \\\n * **Failed**: Provisioning of the managed HSM Pool has failed. \\\n * **Updating**: The managed HSM Pool is currently being updated. \\\n * **Deleting**: The managed HSM Pool is currently being deleted. \\\n * **Activated**: The managed HSM pool is ready for normal use. \\\n * **SecurityDomainRestore**: The managed HSM pool is waiting for a security domain restore action. \\\n * **Restoring**: The managed HSM pool is being restored from full HSM backup.\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  Enabled = \"Enabled\",\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link ManagedHsmSkuFamily} that the service accepts. */\nexport enum KnownManagedHsmSkuFamily {\n  B = \"B\"\n}\n\n/**\n * Defines values for ManagedHsmSkuFamily. \\\n * {@link KnownManagedHsmSkuFamily} can be used interchangeably with ManagedHsmSkuFamily,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **B**\n */\nexport type ManagedHsmSkuFamily = string;\n/** Defines values for SkuName. */\nexport type SkuName = \"standard\" | \"premium\";\n/** Defines values for CreateMode. */\nexport type CreateMode = \"recover\" | \"default\";\n/** Defines values for AccessPolicyUpdateKind. */\nexport type AccessPolicyUpdateKind = \"add\" | \"replace\" | \"remove\";\n/** Defines values for Reason. */\nexport type Reason = \"AccountNameInvalid\" | \"AlreadyExists\";\n/** Defines values for ManagedHsmSkuName. */\nexport type ManagedHsmSkuName = \"Standard_B1\" | \"Custom_B32\";\n\n/** Optional parameters. */\nexport interface KeysCreateIfNotExistOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createIfNotExist operation. */\nexport type KeysCreateIfNotExistResponse = Key;\n\n/** Optional parameters. */\nexport interface KeysGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KeysGetResponse = Key;\n\n/** Optional parameters. */\nexport interface KeysListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type KeysListResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface KeysGetVersionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getVersion operation. */\nexport type KeysGetVersionResponse = Key;\n\n/** Optional parameters. */\nexport interface KeysListVersionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVersions operation. */\nexport type KeysListVersionsResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface KeysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type KeysListNextResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface KeysListVersionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listVersionsNext operation. */\nexport type KeysListVersionsNextResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface VaultsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VaultsCreateOrUpdateResponse = Vault;\n\n/** Optional parameters. */\nexport interface VaultsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type VaultsUpdateResponse = Vault;\n\n/** Optional parameters. */\nexport interface VaultsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface VaultsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VaultsGetResponse = Vault;\n\n/** Optional parameters. */\nexport interface VaultsUpdateAccessPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateAccessPolicy operation. */\nexport type VaultsUpdateAccessPolicyResponse = VaultAccessPolicyParameters;\n\n/** Optional parameters. */\nexport interface VaultsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VaultsListByResourceGroupResponse = VaultListResult;\n\n/** Optional parameters. */\nexport interface VaultsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type VaultsListBySubscriptionResponse = VaultListResult;\n\n/** Optional parameters. */\nexport interface VaultsListDeletedOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDeleted operation. */\nexport type VaultsListDeletedResponse = DeletedVaultListResult;\n\n/** Optional parameters. */\nexport interface VaultsGetDeletedOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDeleted operation. */\nexport type VaultsGetDeletedResponse = DeletedVault;\n\n/** Optional parameters. */\nexport interface VaultsPurgeDeletedOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VaultsListOptionalParams extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type VaultsListResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface VaultsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type VaultsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;\n\n/** Optional parameters. */\nexport interface VaultsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VaultsListByResourceGroupNextResponse = VaultListResult;\n\n/** Optional parameters. */\nexport interface VaultsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type VaultsListBySubscriptionNextResponse = VaultListResult;\n\n/** Optional parameters. */\nexport interface VaultsListDeletedNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDeletedNext operation. */\nexport type VaultsListDeletedNextResponse = DeletedVaultListResult;\n\n/** Optional parameters. */\nexport interface VaultsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listNext operation. */\nexport type VaultsListNextResponse = ResourceListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsPutOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type PrivateEndpointConnectionsPutResponse = PrivateEndpointConnectionsPutHeaders &\n  PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type PrivateEndpointConnectionsDeleteResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListByResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResource operation. */\nexport type PrivateEndpointConnectionsListByResourceResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListByResourceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceNext operation. */\nexport type PrivateEndpointConnectionsListByResourceNextResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListByVaultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVault operation. */\nexport type PrivateLinkResourcesListByVaultResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface ManagedHsmsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedHsmsCreateOrUpdateResponse = ManagedHsm;\n\n/** Optional parameters. */\nexport interface ManagedHsmsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ManagedHsmsUpdateResponse = ManagedHsm;\n\n/** Optional parameters. */\nexport interface ManagedHsmsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedHsmsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedHsmsGetResponse = ManagedHsm;\n\n/** Optional parameters. */\nexport interface ManagedHsmsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ManagedHsmsListByResourceGroupResponse = ManagedHsmListResult;\n\n/** Optional parameters. */\nexport interface ManagedHsmsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ManagedHsmsListBySubscriptionResponse = ManagedHsmListResult;\n\n/** Optional parameters. */\nexport interface ManagedHsmsListDeletedOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDeleted operation. */\nexport type ManagedHsmsListDeletedResponse = DeletedManagedHsmListResult;\n\n/** Optional parameters. */\nexport interface ManagedHsmsGetDeletedOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDeleted operation. */\nexport type ManagedHsmsGetDeletedResponse = DeletedManagedHsm;\n\n/** Optional parameters. */\nexport interface ManagedHsmsPurgeDeletedOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedHsmsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ManagedHsmsListByResourceGroupNextResponse = ManagedHsmListResult;\n\n/** Optional parameters. */\nexport interface ManagedHsmsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type ManagedHsmsListBySubscriptionNextResponse = ManagedHsmListResult;\n\n/** Optional parameters. */\nexport interface ManagedHsmsListDeletedNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDeletedNext operation. */\nexport type ManagedHsmsListDeletedNextResponse = DeletedManagedHsmListResult;\n\n/** Optional parameters. */\nexport interface MhsmPrivateEndpointConnectionsListByResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResource operation. */\nexport type MhsmPrivateEndpointConnectionsListByResourceResponse = MhsmPrivateEndpointConnectionsListResult;\n\n/** Optional parameters. */\nexport interface MhsmPrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type MhsmPrivateEndpointConnectionsGetResponse = MhsmPrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface MhsmPrivateEndpointConnectionsPutOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type MhsmPrivateEndpointConnectionsPutResponse = MhsmPrivateEndpointConnectionsPutHeaders &\n  MhsmPrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface MhsmPrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type MhsmPrivateEndpointConnectionsDeleteResponse = MhsmPrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface MhsmPrivateEndpointConnectionsListByResourceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceNext operation. */\nexport type MhsmPrivateEndpointConnectionsListByResourceNextResponse = MhsmPrivateEndpointConnectionsListResult;\n\n/** Optional parameters. */\nexport interface MhsmPrivateLinkResourcesListByMhsmResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByMhsmResource operation. */\nexport type MhsmPrivateLinkResourcesListByMhsmResourceResponse = MhsmPrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface SecretsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SecretsCreateOrUpdateResponse = Secret;\n\n/** Optional parameters. */\nexport interface SecretsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type SecretsUpdateResponse = Secret;\n\n/** Optional parameters. */\nexport interface SecretsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SecretsGetResponse = Secret;\n\n/** Optional parameters. */\nexport interface SecretsListOptionalParams extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the list operation. */\nexport type SecretsListResponse = SecretListResult;\n\n/** Optional parameters. */\nexport interface SecretsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return. */\n  top?: number;\n}\n\n/** Contains response data for the listNext operation. */\nexport type SecretsListNextResponse = SecretListResult;\n\n/** Optional parameters. */\nexport interface KeyVaultManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const KeyCreateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyCreateParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyProperties\",\n    modelProperties: {\n      attributes: {\n        serializedName: \"attributes\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyAttributes\"\n        }\n      },\n      kty: {\n        serializedName: \"kty\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyOps: {\n        serializedName: \"keyOps\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      keySize: {\n        serializedName: \"keySize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      curveName: {\n        serializedName: \"curveName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyUri: {\n        serializedName: \"keyUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyUriWithVersion: {\n        serializedName: \"keyUriWithVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyAttributes: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyAttributes\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      notBefore: {\n        serializedName: \"nbf\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      expires: {\n        serializedName: \"exp\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      created: {\n        serializedName: \"created\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      updated: {\n        serializedName: \"updated\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      recoveryLevel: {\n        serializedName: \"recoveryLevel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      exportable: {\n        serializedName: \"exportable\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudErrorBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Key\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultCreateOrUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultCreateOrUpdateParameters\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultProperties\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      accessPolicies: {\n        serializedName: \"accessPolicies\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AccessPolicyEntry\"\n            }\n          }\n        }\n      },\n      vaultUri: {\n        serializedName: \"vaultUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hsmPoolResourceId: {\n        serializedName: \"hsmPoolResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledForDeployment: {\n        serializedName: \"enabledForDeployment\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enabledForDiskEncryption: {\n        serializedName: \"enabledForDiskEncryption\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enabledForTemplateDeployment: {\n        serializedName: \"enabledForTemplateDeployment\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableSoftDelete: {\n        defaultValue: true,\n        serializedName: \"enableSoftDelete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      softDeleteRetentionInDays: {\n        defaultValue: 90,\n        serializedName: \"softDeleteRetentionInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enableRbacAuthorization: {\n        defaultValue: false,\n        serializedName: \"enableRbacAuthorization\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      createMode: {\n        serializedName: \"createMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"recover\", \"default\"]\n        }\n      },\n      enablePurgeProtection: {\n        serializedName: \"enablePurgeProtection\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkAcls: {\n        serializedName: \"networkAcls\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkRuleSet\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnectionItem\"\n            }\n          }\n        }\n      },\n      publicNetworkAccess: {\n        defaultValue: \"enabled\",\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      family: {\n        serializedName: \"family\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"standard\", \"premium\"]\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicyEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicyEntry\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      objectId: {\n        serializedName: \"objectId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      permissions: {\n        serializedName: \"permissions\",\n        type: {\n          name: \"Composite\",\n          className: \"Permissions\"\n        }\n      }\n    }\n  }\n};\n\nexport const Permissions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Permissions\",\n    modelProperties: {\n      keys: {\n        serializedName: \"keys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      certificates: {\n        serializedName: \"certificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      storage: {\n        serializedName: \"storage\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkRuleSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkRuleSet\",\n    modelProperties: {\n      bypass: {\n        serializedName: \"bypass\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultAction: {\n        serializedName: \"defaultAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipRules: {\n        serializedName: \"ipRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IPRule\"\n            }\n          }\n        }\n      },\n      virtualNetworkRules: {\n        serializedName: \"virtualNetworkRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualNetworkRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IPRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IPRule\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualNetworkRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualNetworkRule\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ignoreMissingVnetServiceEndpoint: {\n        serializedName: \"ignoreMissingVnetServiceEndpoint\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionItem\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Vault: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Vault\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultPatchParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultPatchParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultPatchProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultPatchProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultPatchProperties\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      accessPolicies: {\n        serializedName: \"accessPolicies\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AccessPolicyEntry\"\n            }\n          }\n        }\n      },\n      enabledForDeployment: {\n        serializedName: \"enabledForDeployment\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enabledForDiskEncryption: {\n        serializedName: \"enabledForDiskEncryption\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enabledForTemplateDeployment: {\n        serializedName: \"enabledForTemplateDeployment\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableSoftDelete: {\n        serializedName: \"enableSoftDelete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableRbacAuthorization: {\n        serializedName: \"enableRbacAuthorization\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      softDeleteRetentionInDays: {\n        serializedName: \"softDeleteRetentionInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      createMode: {\n        serializedName: \"createMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"recover\", \"default\"]\n        }\n      },\n      enablePurgeProtection: {\n        serializedName: \"enablePurgeProtection\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkAcls: {\n        serializedName: \"networkAcls\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkRuleSet\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultAccessPolicyParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultAccessPolicyParameters\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"VaultAccessPolicyProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultAccessPolicyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultAccessPolicyProperties\",\n    modelProperties: {\n      accessPolicies: {\n        serializedName: \"accessPolicies\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AccessPolicyEntry\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VaultListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Vault\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedVaultListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedVaultListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeletedVault\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedVault: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedVault\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeletedVaultProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedVaultProperties\",\n    modelProperties: {\n      vaultId: {\n        serializedName: \"vaultId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deletionDate: {\n        serializedName: \"deletionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      scheduledPurgeDate: {\n        serializedName: \"scheduledPurgeDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      purgeProtectionEnabled: {\n        serializedName: \"purgeProtectionEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Resource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultCheckNameAvailabilityParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultCheckNameAvailabilityParameters\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        defaultValue: \"Microsoft.KeyVault/vaults\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityResult\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"AccountNameInvalid\", \"AlreadyExists\"]\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedHsmProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedHsmProperties\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      initialAdminObjectIds: {\n        serializedName: \"initialAdminObjectIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      hsmUri: {\n        serializedName: \"hsmUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enableSoftDelete: {\n        defaultValue: true,\n        serializedName: \"enableSoftDelete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      softDeleteRetentionInDays: {\n        defaultValue: 90,\n        serializedName: \"softDeleteRetentionInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enablePurgeProtection: {\n        defaultValue: true,\n        serializedName: \"enablePurgeProtection\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      createMode: {\n        serializedName: \"createMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"recover\", \"default\"]\n        }\n      },\n      statusMessage: {\n        serializedName: \"statusMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkAcls: {\n        serializedName: \"networkAcls\",\n        type: {\n          name: \"Composite\",\n          className: \"MhsmNetworkRuleSet\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MhsmPrivateEndpointConnectionItem\"\n            }\n          }\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scheduledPurgeDate: {\n        serializedName: \"scheduledPurgeDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmNetworkRuleSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmNetworkRuleSet\",\n    modelProperties: {\n      bypass: {\n        serializedName: \"bypass\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultAction: {\n        serializedName: \"defaultAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipRules: {\n        serializedName: \"ipRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MhsmipRule\"\n            }\n          }\n        }\n      },\n      virtualNetworkRules: {\n        serializedName: \"virtualNetworkRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MhsmVirtualNetworkRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmipRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmipRule\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmVirtualNetworkRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmVirtualNetworkRule\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateEndpointConnectionItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateEndpointConnectionItem\",\n    modelProperties: {\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"MhsmPrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"MhsmPrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedHsmResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedHsmResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedHsmSku\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedHsmSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedHsmSku\",\n    modelProperties: {\n      family: {\n        serializedName: \"family\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Standard_B1\", \"Custom_B32\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedHsmError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedHsmError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      innerError: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedHsmListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedHsmListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedHsm\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateEndpointConnectionsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateEndpointConnectionsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MhsmPrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedManagedHsmListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedManagedHsmListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeletedManagedHsm\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedManagedHsm: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedManagedHsm\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeletedManagedHsmProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedManagedHsmProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedManagedHsmProperties\",\n    modelProperties: {\n      mhsmId: {\n        serializedName: \"mhsmId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deletionDate: {\n        serializedName: \"deletionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      scheduledPurgeDate: {\n        serializedName: \"scheduledPurgeDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      purgeProtectionEnabled: {\n        serializedName: \"purgeProtectionEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MhsmPrivateLinkResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      serviceSpecification: {\n        serializedName: \"properties.serviceSpecification\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceSpecification\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSpecification\",\n    modelProperties: {\n      logSpecifications: {\n        serializedName: \"logSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LogSpecification\"\n            }\n          }\n        }\n      },\n      metricSpecifications: {\n        serializedName: \"metricSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricSpecification\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LogSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobDuration: {\n        serializedName: \"blobDuration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregationType: {\n        serializedName: \"aggregationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedAggregationTypes: {\n        serializedName: \"supportedAggregationTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      supportedTimeGrainTypes: {\n        serializedName: \"supportedTimeGrainTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      lockAggregationType: {\n        serializedName: \"lockAggregationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DimensionProperties\"\n            }\n          }\n        }\n      },\n      fillGapWithZero: {\n        serializedName: \"fillGapWithZero\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      internalMetricName: {\n        serializedName: \"internalMetricName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DimensionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DimensionProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      toBeExportedForShoebox: {\n        serializedName: \"toBeExportedForShoebox\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretCreateOrUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretCreateOrUpdateParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretProperties\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"contentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      attributes: {\n        serializedName: \"attributes\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretAttributes\"\n        }\n      },\n      secretUri: {\n        serializedName: \"secretUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      secretUriWithVersion: {\n        serializedName: \"secretUriWithVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Attributes: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Attributes\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      notBefore: {\n        serializedName: \"nbf\",\n        type: {\n          name: \"UnixTime\"\n        }\n      },\n      expires: {\n        serializedName: \"exp\",\n        type: {\n          name: \"UnixTime\"\n        }\n      },\n      created: {\n        serializedName: \"created\",\n        readOnly: true,\n        type: {\n          name: \"UnixTime\"\n        }\n      },\n      updated: {\n        serializedName: \"updated\",\n        readOnly: true,\n        type: {\n          name: \"UnixTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretPatchParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretPatchParameters\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretPatchProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretPatchProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretPatchProperties\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"contentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      attributes: {\n        serializedName: \"attributes\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretAttributes\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Secret\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Key: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Key\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      attributes: {\n        serializedName: \"properties.attributes\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyAttributes\"\n        }\n      },\n      kty: {\n        serializedName: \"properties.kty\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyOps: {\n        serializedName: \"properties.keyOps\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      keySize: {\n        serializedName: \"properties.keySize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      curveName: {\n        serializedName: \"properties.curveName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyUri: {\n        serializedName: \"properties.keyUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyUriWithVersion: {\n        serializedName: \"properties.keyUriWithVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      groupId: {\n        serializedName: \"properties.groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"properties.requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"properties.requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Secret: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Secret\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedHsm: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedHsm\",\n    modelProperties: {\n      ...ManagedHsmResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedHsmProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateEndpointConnection\",\n    modelProperties: {\n      ...ManagedHsmResource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"MhsmPrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"MhsmPrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateLinkResource\",\n    modelProperties: {\n      ...ManagedHsmResource.type.modelProperties,\n      groupId: {\n        serializedName: \"properties.groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"properties.requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"properties.requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SecretAttributes: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretAttributes\",\n    modelProperties: {\n      ...Attributes.type.modelProperties\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionsPutHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionsPutHeaders\",\n    modelProperties: {\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionsDeleteHeaders\",\n    modelProperties: {\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateEndpointConnectionsPutHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateEndpointConnectionsPutHeaders\",\n    modelProperties: {\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MhsmPrivateEndpointConnectionsDeleteHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MhsmPrivateEndpointConnectionsDeleteHeaders\",\n    modelProperties: {\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  KeyCreateParameters as KeyCreateParametersMapper,\n  VaultCreateOrUpdateParameters as VaultCreateOrUpdateParametersMapper,\n  VaultPatchParameters as VaultPatchParametersMapper,\n  VaultAccessPolicyParameters as VaultAccessPolicyParametersMapper,\n  VaultCheckNameAvailabilityParameters as VaultCheckNameAvailabilityParametersMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  ManagedHsm as ManagedHsmMapper,\n  MhsmPrivateEndpointConnection as MhsmPrivateEndpointConnectionMapper,\n  SecretCreateOrUpdateParameters as SecretCreateOrUpdateParametersMapper,\n  SecretPatchParameters as SecretPatchParametersMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: KeyCreateParametersMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vaultName: OperationURLParameter = {\n  parameterPath: \"vaultName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9-]{3,24}$\")\n    },\n    serializedName: \"vaultName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const keyName: OperationURLParameter = {\n  parameterPath: \"keyName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9-]{1,127}$\")\n    },\n    serializedName: \"keyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const keyVersion: OperationURLParameter = {\n  parameterPath: \"keyVersion\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-fA-F0-9]{32}$\")\n    },\n    serializedName: \"keyVersion\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VaultCreateOrUpdateParametersMapper\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VaultPatchParametersMapper\n};\n\nexport const vaultName1: OperationURLParameter = {\n  parameterPath: \"vaultName\",\n  mapper: {\n    serializedName: \"vaultName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VaultAccessPolicyParametersMapper\n};\n\nexport const operationKind: OperationURLParameter = {\n  parameterPath: \"operationKind\",\n  mapper: {\n    serializedName: \"operationKind\",\n    required: true,\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"add\", \"replace\", \"remove\"]\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: \"filter\",\n  mapper: {\n    defaultValue: \"resourceType eq 'Microsoft.KeyVault/vaults'\",\n    isConstant: true,\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2015-11-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vaultName2: OperationParameter = {\n  parameterPath: \"vaultName\",\n  mapper: VaultCheckNameAvailabilityParametersMapper\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: PrivateEndpointConnectionMapper\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedHsmMapper\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties1: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: MhsmPrivateEndpointConnectionMapper\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SecretCreateOrUpdateParametersMapper\n};\n\nexport const secretName: OperationURLParameter = {\n  parameterPath: \"secretName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9-]{1,127}$\")\n    },\n    serializedName: \"secretName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SecretPatchParametersMapper\n};\n\nexport const secretName1: OperationURLParameter = {\n  parameterPath: \"secretName\",\n  mapper: {\n    serializedName: \"secretName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Keys } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport {\n  Key,\n  KeysListNextOptionalParams,\n  KeysListOptionalParams,\n  KeysListVersionsNextOptionalParams,\n  KeysListVersionsOptionalParams,\n  KeyCreateParameters,\n  KeysCreateIfNotExistOptionalParams,\n  KeysCreateIfNotExistResponse,\n  KeysGetOptionalParams,\n  KeysGetResponse,\n  KeysListResponse,\n  KeysGetVersionOptionalParams,\n  KeysGetVersionResponse,\n  KeysListVersionsResponse,\n  KeysListNextResponse,\n  KeysListVersionsNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Keys operations. */\nexport class KeysImpl implements Keys {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class Keys class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the keys in the specified key vault.\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the keys to be retrieved.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: KeysListOptionalParams\n  ): PagedAsyncIterableIterator<Key> {\n    const iter = this.listPagingAll(resourceGroupName, vaultName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, vaultName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: KeysListOptionalParams\n  ): AsyncIterableIterator<Key[]> {\n    let result = await this._list(resourceGroupName, vaultName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        vaultName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: KeysListOptionalParams\n  ): AsyncIterableIterator<Key> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      vaultName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the versions of the specified key in the specified key vault.\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the key versions to be retrieved.\n   * @param keyName The name of the key versions to be retrieved.\n   * @param options The options parameters.\n   */\n  public listVersions(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    options?: KeysListVersionsOptionalParams\n  ): PagedAsyncIterableIterator<Key> {\n    const iter = this.listVersionsPagingAll(\n      resourceGroupName,\n      vaultName,\n      keyName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listVersionsPagingPage(\n          resourceGroupName,\n          vaultName,\n          keyName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listVersionsPagingPage(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    options?: KeysListVersionsOptionalParams\n  ): AsyncIterableIterator<Key[]> {\n    let result = await this._listVersions(\n      resourceGroupName,\n      vaultName,\n      keyName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listVersionsNext(\n        resourceGroupName,\n        vaultName,\n        keyName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listVersionsPagingAll(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    options?: KeysListVersionsOptionalParams\n  ): AsyncIterableIterator<Key> {\n    for await (const page of this.listVersionsPagingPage(\n      resourceGroupName,\n      vaultName,\n      keyName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates the first version of a new key if it does not exist. If it already exists, then the existing\n   * key is returned without any write operations being performed. This API does not create subsequent\n   * versions, and does not update existing keys.\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the key vault which contains the key to be created.\n   * @param keyName The name of the key to be created.\n   * @param parameters The parameters used to create the specified key.\n   * @param options The options parameters.\n   */\n  createIfNotExist(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    parameters: KeyCreateParameters,\n    options?: KeysCreateIfNotExistOptionalParams\n  ): Promise<KeysCreateIfNotExistResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, keyName, parameters, options },\n      createIfNotExistOperationSpec\n    );\n  }\n\n  /**\n   * Gets the current version of the specified key from the specified key vault.\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the key to be retrieved.\n   * @param keyName The name of the key to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    options?: KeysGetOptionalParams\n  ): Promise<KeysGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, keyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists the keys in the specified key vault.\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the keys to be retrieved.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: KeysListOptionalParams\n  ): Promise<KeysListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified version of the specified key in the specified key vault.\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the key version to be retrieved.\n   * @param keyName The name of the key version to be retrieved.\n   * @param keyVersion The version of the key to be retrieved.\n   * @param options The options parameters.\n   */\n  getVersion(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    keyVersion: string,\n    options?: KeysGetVersionOptionalParams\n  ): Promise<KeysGetVersionResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, keyName, keyVersion, options },\n      getVersionOperationSpec\n    );\n  }\n\n  /**\n   * Lists the versions of the specified key in the specified key vault.\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the key versions to be retrieved.\n   * @param keyName The name of the key versions to be retrieved.\n   * @param options The options parameters.\n   */\n  private _listVersions(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    options?: KeysListVersionsOptionalParams\n  ): Promise<KeysListVersionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, keyName, options },\n      listVersionsOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the keys to be retrieved.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    vaultName: string,\n    nextLink: string,\n    options?: KeysListNextOptionalParams\n  ): Promise<KeysListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListVersionsNext\n   * @param resourceGroupName The name of the resource group which contains the specified key vault.\n   * @param vaultName The name of the vault which contains the key versions to be retrieved.\n   * @param keyName The name of the key versions to be retrieved.\n   * @param nextLink The nextLink from the previous successful call to the ListVersions method.\n   * @param options The options parameters.\n   */\n  private _listVersionsNext(\n    resourceGroupName: string,\n    vaultName: string,\n    keyName: string,\n    nextLink: string,\n    options?: KeysListVersionsNextOptionalParams\n  ): Promise<KeysListVersionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, keyName, nextLink, options },\n      listVersionsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createIfNotExistOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Key\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Key\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getVersionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}/versions/{keyVersion}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Key\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.keyName,\n    Parameters.keyVersion\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listVersionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listVersionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.keyName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Vaults } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Vault,\n  VaultsListByResourceGroupNextOptionalParams,\n  VaultsListByResourceGroupOptionalParams,\n  VaultsListBySubscriptionNextOptionalParams,\n  VaultsListBySubscriptionOptionalParams,\n  DeletedVault,\n  VaultsListDeletedNextOptionalParams,\n  VaultsListDeletedOptionalParams,\n  Resource,\n  VaultsListNextOptionalParams,\n  VaultsListOptionalParams,\n  VaultCreateOrUpdateParameters,\n  VaultsCreateOrUpdateOptionalParams,\n  VaultsCreateOrUpdateResponse,\n  VaultPatchParameters,\n  VaultsUpdateOptionalParams,\n  VaultsUpdateResponse,\n  VaultsDeleteOptionalParams,\n  VaultsGetOptionalParams,\n  VaultsGetResponse,\n  VaultAccessPolicyParameters,\n  AccessPolicyUpdateKind,\n  VaultsUpdateAccessPolicyOptionalParams,\n  VaultsUpdateAccessPolicyResponse,\n  VaultsListByResourceGroupResponse,\n  VaultsListBySubscriptionResponse,\n  VaultsListDeletedResponse,\n  VaultsGetDeletedOptionalParams,\n  VaultsGetDeletedResponse,\n  VaultsPurgeDeletedOptionalParams,\n  VaultsListResponse,\n  VaultCheckNameAvailabilityParameters,\n  VaultsCheckNameAvailabilityOptionalParams,\n  VaultsCheckNameAvailabilityResponse,\n  VaultsListByResourceGroupNextResponse,\n  VaultsListBySubscriptionNextResponse,\n  VaultsListDeletedNextResponse,\n  VaultsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Vaults operations. */\nexport class VaultsImpl implements Vaults {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class Vaults class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The List operation gets information about the vaults associated with the subscription and within the\n   * specified resource group.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Vault> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Vault[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Vault> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The List operation gets information about the vaults associated with the subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: VaultsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Vault> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: VaultsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Vault[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: VaultsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<Vault> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets information about the deleted vaults in a subscription.\n   * @param options The options parameters.\n   */\n  public listDeleted(\n    options?: VaultsListDeletedOptionalParams\n  ): PagedAsyncIterableIterator<DeletedVault> {\n    const iter = this.listDeletedPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listDeletedPagingPage(options);\n      }\n    };\n  }\n\n  private async *listDeletedPagingPage(\n    options?: VaultsListDeletedOptionalParams\n  ): AsyncIterableIterator<DeletedVault[]> {\n    let result = await this._listDeleted(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listDeletedNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listDeletedPagingAll(\n    options?: VaultsListDeletedOptionalParams\n  ): AsyncIterableIterator<DeletedVault> {\n    for await (const page of this.listDeletedPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The List operation gets information about the vaults associated with the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: VaultsListOptionalParams\n  ): PagedAsyncIterableIterator<Resource> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: VaultsListOptionalParams\n  ): AsyncIterableIterator<Resource[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: VaultsListOptionalParams\n  ): AsyncIterableIterator<Resource> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a key vault in the specified subscription.\n   * @param resourceGroupName The name of the Resource Group to which the server belongs.\n   * @param vaultName Name of the vault\n   * @param parameters Parameters to create or update the vault\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vaultName: string,\n    parameters: VaultCreateOrUpdateParameters,\n    options?: VaultsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VaultsCreateOrUpdateResponse>,\n      VaultsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VaultsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vaultName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a key vault in the specified subscription.\n   * @param resourceGroupName The name of the Resource Group to which the server belongs.\n   * @param vaultName Name of the vault\n   * @param parameters Parameters to create or update the vault\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vaultName: string,\n    parameters: VaultCreateOrUpdateParameters,\n    options?: VaultsCreateOrUpdateOptionalParams\n  ): Promise<VaultsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vaultName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a key vault in the specified subscription.\n   * @param resourceGroupName The name of the Resource Group to which the server belongs.\n   * @param vaultName Name of the vault\n   * @param parameters Parameters to patch the vault\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    vaultName: string,\n    parameters: VaultPatchParameters,\n    options?: VaultsUpdateOptionalParams\n  ): Promise<VaultsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified Azure key vault.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName The name of the vault to delete\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: VaultsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified Azure key vault.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName The name of the vault.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: VaultsGetOptionalParams\n  ): Promise<VaultsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update access policies in a key vault in the specified subscription.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName Name of the vault\n   * @param operationKind Name of the operation\n   * @param parameters Access policy to merge into the vault\n   * @param options The options parameters.\n   */\n  updateAccessPolicy(\n    resourceGroupName: string,\n    vaultName: string,\n    operationKind: AccessPolicyUpdateKind,\n    parameters: VaultAccessPolicyParameters,\n    options?: VaultsUpdateAccessPolicyOptionalParams\n  ): Promise<VaultsUpdateAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, operationKind, parameters, options },\n      updateAccessPolicyOperationSpec\n    );\n  }\n\n  /**\n   * The List operation gets information about the vaults associated with the subscription and within the\n   * specified resource group.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: VaultsListByResourceGroupOptionalParams\n  ): Promise<VaultsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * The List operation gets information about the vaults associated with the subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: VaultsListBySubscriptionOptionalParams\n  ): Promise<VaultsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets information about the deleted vaults in a subscription.\n   * @param options The options parameters.\n   */\n  private _listDeleted(\n    options?: VaultsListDeletedOptionalParams\n  ): Promise<VaultsListDeletedResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listDeletedOperationSpec\n    );\n  }\n\n  /**\n   * Gets the deleted Azure key vault.\n   * @param vaultName The name of the vault.\n   * @param location The location of the deleted vault.\n   * @param options The options parameters.\n   */\n  getDeleted(\n    vaultName: string,\n    location: string,\n    options?: VaultsGetDeletedOptionalParams\n  ): Promise<VaultsGetDeletedResponse> {\n    return this.client.sendOperationRequest(\n      { vaultName, location, options },\n      getDeletedOperationSpec\n    );\n  }\n\n  /**\n   * Permanently deletes the specified vault. aka Purges the deleted Azure key vault.\n   * @param vaultName The name of the soft-deleted vault.\n   * @param location The location of the soft-deleted vault.\n   * @param options The options parameters.\n   */\n  async beginPurgeDeleted(\n    vaultName: string,\n    location: string,\n    options?: VaultsPurgeDeletedOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { vaultName, location, options },\n      purgeDeletedOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Permanently deletes the specified vault. aka Purges the deleted Azure key vault.\n   * @param vaultName The name of the soft-deleted vault.\n   * @param location The location of the soft-deleted vault.\n   * @param options The options parameters.\n   */\n  async beginPurgeDeletedAndWait(\n    vaultName: string,\n    location: string,\n    options?: VaultsPurgeDeletedOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPurgeDeleted(vaultName, location, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The List operation gets information about the vaults associated with the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: VaultsListOptionalParams\n  ): Promise<VaultsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Checks that the vault name is valid and is not already in use.\n   * @param vaultName The name of the vault.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    vaultName: VaultCheckNameAvailabilityParameters,\n    options?: VaultsCheckNameAvailabilityOptionalParams\n  ): Promise<VaultsCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { vaultName, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: VaultsListByResourceGroupNextOptionalParams\n  ): Promise<VaultsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: VaultsListBySubscriptionNextOptionalParams\n  ): Promise<VaultsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListDeletedNext\n   * @param nextLink The nextLink from the previous successful call to the ListDeleted method.\n   * @param options The options parameters.\n   */\n  private _listDeletedNext(\n    nextLink: string,\n    options?: VaultsListDeletedNextOptionalParams\n  ): Promise<VaultsListDeletedNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listDeletedNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: VaultsListNextOptionalParams\n  ): Promise<VaultsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Vault\n    },\n    201: {\n      bodyMapper: Mappers.Vault\n    },\n    202: {\n      bodyMapper: Mappers.Vault\n    },\n    204: {\n      bodyMapper: Mappers.Vault\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Vault\n    },\n    201: {\n      bodyMapper: Mappers.Vault\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Vault\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/accessPolicies/{operationKind}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultAccessPolicyParameters\n    },\n    201: {\n      bodyMapper: Mappers.VaultAccessPolicyParameters\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.operationKind\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeletedOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedVaultListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeletedOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedVault\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.vaultName1,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst purgeDeletedOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.vaultName1,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vaultName2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VaultListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeletedNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedVaultListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsListByResourceNextOptionalParams,\n  PrivateEndpointConnectionsListByResourceOptionalParams,\n  PrivateEndpointConnectionsGetOptionalParams,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnectionsPutOptionalParams,\n  PrivateEndpointConnectionsPutResponse,\n  PrivateEndpointConnectionsDeleteOptionalParams,\n  PrivateEndpointConnectionsDeleteResponse,\n  PrivateEndpointConnectionsListByResourceResponse,\n  PrivateEndpointConnectionsListByResourceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpointConnections operations. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The List operation gets information about the private endpoint connections associated with the\n   * vault.\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param options The options parameters.\n   */\n  public listByResource(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateEndpointConnectionsListByResourceOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection> {\n    const iter = this.listByResourcePagingAll(\n      resourceGroupName,\n      vaultName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourcePagingPage(\n          resourceGroupName,\n          vaultName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByResourcePagingPage(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateEndpointConnectionsListByResourceOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection[]> {\n    let result = await this._listByResource(\n      resourceGroupName,\n      vaultName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceNext(\n        resourceGroupName,\n        vaultName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourcePagingAll(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateEndpointConnectionsListByResourceOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection> {\n    for await (const page of this.listByResourcePagingPage(\n      resourceGroupName,\n      vaultName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the specified private endpoint connection associated with the key vault.\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key\n   *                                      vault.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vaultName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, privateEndpointConnectionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates the specified private endpoint connection associated with the key vault.\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key\n   *                                      vault.\n   * @param properties The intended state of private endpoint connection.\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    vaultName: string,\n    privateEndpointConnectionName: string,\n    properties: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsPutOptionalParams\n  ): Promise<PrivateEndpointConnectionsPutResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        vaultName,\n        privateEndpointConnectionName,\n        properties,\n        options\n      },\n      putOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified private endpoint connection associated with the key vault.\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key\n   *                                      vault.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vaultName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PrivateEndpointConnectionsDeleteResponse>,\n      PrivateEndpointConnectionsDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PrivateEndpointConnectionsDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vaultName, privateEndpointConnectionName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes the specified private endpoint connection associated with the key vault.\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key\n   *                                      vault.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vaultName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<PrivateEndpointConnectionsDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vaultName,\n      privateEndpointConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The List operation gets information about the private endpoint connections associated with the\n   * vault.\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param options The options parameters.\n   */\n  private _listByResource(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateEndpointConnectionsListByResourceOptionalParams\n  ): Promise<PrivateEndpointConnectionsListByResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      listByResourceOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceNext\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param nextLink The nextLink from the previous successful call to the ListByResource method.\n   * @param options The options parameters.\n   */\n  private _listByResourceNext(\n    resourceGroupName: string,\n    vaultName: string,\n    nextLink: string,\n    options?: PrivateEndpointConnectionsListByResourceNextOptionalParams\n  ): Promise<PrivateEndpointConnectionsListByResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, nextLink, options },\n      listByResourceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection,\n      headersMapper: Mappers.PrivateEndpointConnectionsPutHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport {\n  PrivateLinkResourcesListByVaultOptionalParams,\n  PrivateLinkResourcesListByVaultResponse\n} from \"../models\";\n\n/** Class containing PrivateLinkResources operations. */\nexport class PrivateLinkResourcesImpl implements PrivateLinkResources {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the private link resources supported for the key vault.\n   * @param resourceGroupName Name of the resource group that contains the key vault.\n   * @param vaultName The name of the key vault.\n   * @param options The options parameters.\n   */\n  listByVault(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: PrivateLinkResourcesListByVaultOptionalParams\n  ): Promise<PrivateLinkResourcesListByVaultResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      listByVaultOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByVaultOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ManagedHsms } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedHsm,\n  ManagedHsmsListByResourceGroupNextOptionalParams,\n  ManagedHsmsListByResourceGroupOptionalParams,\n  ManagedHsmsListBySubscriptionNextOptionalParams,\n  ManagedHsmsListBySubscriptionOptionalParams,\n  DeletedManagedHsm,\n  ManagedHsmsListDeletedNextOptionalParams,\n  ManagedHsmsListDeletedOptionalParams,\n  ManagedHsmsCreateOrUpdateOptionalParams,\n  ManagedHsmsCreateOrUpdateResponse,\n  ManagedHsmsUpdateOptionalParams,\n  ManagedHsmsUpdateResponse,\n  ManagedHsmsDeleteOptionalParams,\n  ManagedHsmsGetOptionalParams,\n  ManagedHsmsGetResponse,\n  ManagedHsmsListByResourceGroupResponse,\n  ManagedHsmsListBySubscriptionResponse,\n  ManagedHsmsListDeletedResponse,\n  ManagedHsmsGetDeletedOptionalParams,\n  ManagedHsmsGetDeletedResponse,\n  ManagedHsmsPurgeDeletedOptionalParams,\n  ManagedHsmsListByResourceGroupNextResponse,\n  ManagedHsmsListBySubscriptionNextResponse,\n  ManagedHsmsListDeletedNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedHsms operations. */\nexport class ManagedHsmsImpl implements ManagedHsms {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedHsms class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The List operation gets information about the managed HSM Pools associated with the subscription and\n   * within the specified resource group.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ManagedHsmsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<ManagedHsm> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ManagedHsmsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ManagedHsm[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ManagedHsmsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ManagedHsm> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The List operation gets information about the managed HSM Pools associated with the subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ManagedHsmsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ManagedHsm> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ManagedHsmsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ManagedHsm[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ManagedHsmsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ManagedHsm> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The List operation gets information about the deleted managed HSMs associated with the subscription.\n   * @param options The options parameters.\n   */\n  public listDeleted(\n    options?: ManagedHsmsListDeletedOptionalParams\n  ): PagedAsyncIterableIterator<DeletedManagedHsm> {\n    const iter = this.listDeletedPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listDeletedPagingPage(options);\n      }\n    };\n  }\n\n  private async *listDeletedPagingPage(\n    options?: ManagedHsmsListDeletedOptionalParams\n  ): AsyncIterableIterator<DeletedManagedHsm[]> {\n    let result = await this._listDeleted(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listDeletedNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listDeletedPagingAll(\n    options?: ManagedHsmsListDeletedOptionalParams\n  ): AsyncIterableIterator<DeletedManagedHsm> {\n    for await (const page of this.listDeletedPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a managed HSM Pool in the specified subscription.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param parameters Parameters to create or update the managed HSM Pool\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    name: string,\n    parameters: ManagedHsm,\n    options?: ManagedHsmsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedHsmsCreateOrUpdateResponse>,\n      ManagedHsmsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedHsmsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a managed HSM Pool in the specified subscription.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param parameters Parameters to create or update the managed HSM Pool\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    name: string,\n    parameters: ManagedHsm,\n    options?: ManagedHsmsCreateOrUpdateOptionalParams\n  ): Promise<ManagedHsmsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      name,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a managed HSM Pool in the specified subscription.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param parameters Parameters to patch the managed HSM Pool\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    name: string,\n    parameters: ManagedHsm,\n    options?: ManagedHsmsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedHsmsUpdateResponse>,\n      ManagedHsmsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedHsmsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, parameters, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a managed HSM Pool in the specified subscription.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param parameters Parameters to patch the managed HSM Pool\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    name: string,\n    parameters: ManagedHsm,\n    options?: ManagedHsmsUpdateOptionalParams\n  ): Promise<ManagedHsmsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      name,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the specified managed HSM Pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name The name of the managed HSM Pool to delete\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    name: string,\n    options?: ManagedHsmsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes the specified managed HSM Pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name The name of the managed HSM Pool to delete\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    name: string,\n    options?: ManagedHsmsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, name, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the specified managed HSM Pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name The name of the managed HSM Pool.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    options?: ManagedHsmsGetOptionalParams\n  ): Promise<ManagedHsmsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The List operation gets information about the managed HSM Pools associated with the subscription and\n   * within the specified resource group.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ManagedHsmsListByResourceGroupOptionalParams\n  ): Promise<ManagedHsmsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * The List operation gets information about the managed HSM Pools associated with the subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ManagedHsmsListBySubscriptionOptionalParams\n  ): Promise<ManagedHsmsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * The List operation gets information about the deleted managed HSMs associated with the subscription.\n   * @param options The options parameters.\n   */\n  private _listDeleted(\n    options?: ManagedHsmsListDeletedOptionalParams\n  ): Promise<ManagedHsmsListDeletedResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listDeletedOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified deleted managed HSM.\n   * @param name The name of the deleted managed HSM.\n   * @param location The location of the deleted managed HSM.\n   * @param options The options parameters.\n   */\n  getDeleted(\n    name: string,\n    location: string,\n    options?: ManagedHsmsGetDeletedOptionalParams\n  ): Promise<ManagedHsmsGetDeletedResponse> {\n    return this.client.sendOperationRequest(\n      { name, location, options },\n      getDeletedOperationSpec\n    );\n  }\n\n  /**\n   * Permanently deletes the specified managed HSM.\n   * @param name The name of the soft-deleted managed HSM.\n   * @param location The location of the soft-deleted managed HSM.\n   * @param options The options parameters.\n   */\n  async beginPurgeDeleted(\n    name: string,\n    location: string,\n    options?: ManagedHsmsPurgeDeletedOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { name, location, options },\n      purgeDeletedOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Permanently deletes the specified managed HSM.\n   * @param name The name of the soft-deleted managed HSM.\n   * @param location The location of the soft-deleted managed HSM.\n   * @param options The options parameters.\n   */\n  async beginPurgeDeletedAndWait(\n    name: string,\n    location: string,\n    options?: ManagedHsmsPurgeDeletedOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPurgeDeleted(name, location, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ManagedHsmsListByResourceGroupNextOptionalParams\n  ): Promise<ManagedHsmsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: ManagedHsmsListBySubscriptionNextOptionalParams\n  ): Promise<ManagedHsmsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListDeletedNext\n   * @param nextLink The nextLink from the previous successful call to the ListDeleted method.\n   * @param options The options parameters.\n   */\n  private _listDeletedNext(\n    nextLink: string,\n    options?: ManagedHsmsListDeletedNextOptionalParams\n  ): Promise<ManagedHsmsListDeletedNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listDeletedNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    201: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    202: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    204: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    201: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    202: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    204: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedHsm\n    },\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedHsmListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedHsmListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeletedOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedManagedHSMs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedManagedHsmListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeletedOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedManagedHsm\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst purgeDeletedOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}/purge\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedHsmListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedHsmListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeletedNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedManagedHsmListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { MhsmPrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  MhsmPrivateEndpointConnection,\n  MhsmPrivateEndpointConnectionsListByResourceNextOptionalParams,\n  MhsmPrivateEndpointConnectionsListByResourceOptionalParams,\n  MhsmPrivateEndpointConnectionsListByResourceResponse,\n  MhsmPrivateEndpointConnectionsGetOptionalParams,\n  MhsmPrivateEndpointConnectionsGetResponse,\n  MhsmPrivateEndpointConnectionsPutOptionalParams,\n  MhsmPrivateEndpointConnectionsPutResponse,\n  MhsmPrivateEndpointConnectionsDeleteOptionalParams,\n  MhsmPrivateEndpointConnectionsDeleteResponse,\n  MhsmPrivateEndpointConnectionsListByResourceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing MhsmPrivateEndpointConnections operations. */\nexport class MhsmPrivateEndpointConnectionsImpl\n  implements MhsmPrivateEndpointConnections {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class MhsmPrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The List operation gets information about the private endpoint connections associated with the\n   * managed HSM Pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param options The options parameters.\n   */\n  public listByResource(\n    resourceGroupName: string,\n    name: string,\n    options?: MhsmPrivateEndpointConnectionsListByResourceOptionalParams\n  ): PagedAsyncIterableIterator<MhsmPrivateEndpointConnection> {\n    const iter = this.listByResourcePagingAll(resourceGroupName, name, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourcePagingPage(resourceGroupName, name, options);\n      }\n    };\n  }\n\n  private async *listByResourcePagingPage(\n    resourceGroupName: string,\n    name: string,\n    options?: MhsmPrivateEndpointConnectionsListByResourceOptionalParams\n  ): AsyncIterableIterator<MhsmPrivateEndpointConnection[]> {\n    let result = await this._listByResource(resourceGroupName, name, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceNext(\n        resourceGroupName,\n        name,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourcePagingAll(\n    resourceGroupName: string,\n    name: string,\n    options?: MhsmPrivateEndpointConnectionsListByResourceOptionalParams\n  ): AsyncIterableIterator<MhsmPrivateEndpointConnection> {\n    for await (const page of this.listByResourcePagingPage(\n      resourceGroupName,\n      name,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The List operation gets information about the private endpoint connections associated with the\n   * managed HSM Pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param options The options parameters.\n   */\n  private _listByResource(\n    resourceGroupName: string,\n    name: string,\n    options?: MhsmPrivateEndpointConnectionsListByResourceOptionalParams\n  ): Promise<MhsmPrivateEndpointConnectionsListByResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listByResourceOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified private endpoint connection associated with the managed HSM Pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the\n   *                                      managed hsm pool.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: MhsmPrivateEndpointConnectionsGetOptionalParams\n  ): Promise<MhsmPrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, privateEndpointConnectionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates the specified private endpoint connection associated with the managed hsm pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the\n   *                                      managed hsm pool.\n   * @param properties The intended state of private endpoint connection.\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    properties: MhsmPrivateEndpointConnection,\n    options?: MhsmPrivateEndpointConnectionsPutOptionalParams\n  ): Promise<MhsmPrivateEndpointConnectionsPutResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        name,\n        privateEndpointConnectionName,\n        properties,\n        options\n      },\n      putOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified private endpoint connection associated with the managed hsm pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the\n   *                                      managed hsm pool.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: MhsmPrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<MhsmPrivateEndpointConnectionsDeleteResponse>,\n      MhsmPrivateEndpointConnectionsDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<MhsmPrivateEndpointConnectionsDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, name, privateEndpointConnectionName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes the specified private endpoint connection associated with the managed hsm pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param privateEndpointConnectionName Name of the private endpoint connection associated with the\n   *                                      managed hsm pool.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    name: string,\n    privateEndpointConnectionName: string,\n    options?: MhsmPrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<MhsmPrivateEndpointConnectionsDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      name,\n      privateEndpointConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByResourceNext\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param nextLink The nextLink from the previous successful call to the ListByResource method.\n   * @param options The options parameters.\n   */\n  private _listByResourceNext(\n    resourceGroupName: string,\n    name: string,\n    nextLink: string,\n    options?: MhsmPrivateEndpointConnectionsListByResourceNextOptionalParams\n  ): Promise<MhsmPrivateEndpointConnectionsListByResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, nextLink, options },\n      listByResourceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnectionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateEndpointConnectionName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnection,\n      headersMapper: Mappers.MhsmPrivateEndpointConnectionsPutHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.properties1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateEndpointConnectionName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateEndpointConnectionName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MhsmPrivateEndpointConnectionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ManagedHsmError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MhsmPrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport {\n  MhsmPrivateLinkResourcesListByMhsmResourceOptionalParams,\n  MhsmPrivateLinkResourcesListByMhsmResourceResponse\n} from \"../models\";\n\n/** Class containing MhsmPrivateLinkResources operations. */\nexport class MhsmPrivateLinkResourcesImpl implements MhsmPrivateLinkResources {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class MhsmPrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the private link resources supported for the managed hsm pool.\n   * @param resourceGroupName Name of the resource group that contains the managed HSM pool.\n   * @param name Name of the managed HSM Pool\n   * @param options The options parameters.\n   */\n  listByMhsmResource(\n    resourceGroupName: string,\n    name: string,\n    options?: MhsmPrivateLinkResourcesListByMhsmResourceOptionalParams\n  ): Promise<MhsmPrivateLinkResourcesListByMhsmResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, name, options },\n      listByMhsmResourceOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByMhsmResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MhsmPrivateLinkResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.name\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Key Vault Rest API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Key Vault Rest API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.KeyVault/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Secrets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { KeyVaultManagementClient } from \"../keyVaultManagementClient\";\nimport {\n  Secret,\n  SecretsListNextOptionalParams,\n  SecretsListOptionalParams,\n  SecretCreateOrUpdateParameters,\n  SecretsCreateOrUpdateOptionalParams,\n  SecretsCreateOrUpdateResponse,\n  SecretPatchParameters,\n  SecretsUpdateOptionalParams,\n  SecretsUpdateResponse,\n  SecretsGetOptionalParams,\n  SecretsGetResponse,\n  SecretsListResponse,\n  SecretsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Secrets operations. */\nexport class SecretsImpl implements Secrets {\n  private readonly client: KeyVaultManagementClient;\n\n  /**\n   * Initialize a new instance of the class Secrets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: KeyVaultManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The List operation gets information about the secrets in a vault.  NOTE: This API is intended for\n   * internal use in ARM deployments. Users should use the data-plane REST service for interaction with\n   * vault secrets.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName The name of the vault.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: SecretsListOptionalParams\n  ): PagedAsyncIterableIterator<Secret> {\n    const iter = this.listPagingAll(resourceGroupName, vaultName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, vaultName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: SecretsListOptionalParams\n  ): AsyncIterableIterator<Secret[]> {\n    let result = await this._list(resourceGroupName, vaultName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        vaultName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: SecretsListOptionalParams\n  ): AsyncIterableIterator<Secret> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      vaultName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a secret in a key vault in the specified subscription.  NOTE: This API is intended\n   * for internal use in ARM deployments. Users should use the data-plane REST service for interaction\n   * with vault secrets.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName Name of the vault\n   * @param secretName Name of the secret\n   * @param parameters Parameters to create or update the secret\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    vaultName: string,\n    secretName: string,\n    parameters: SecretCreateOrUpdateParameters,\n    options?: SecretsCreateOrUpdateOptionalParams\n  ): Promise<SecretsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, secretName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Update a secret in the specified subscription.  NOTE: This API is intended for internal use in ARM\n   * deployments.  Users should use the data-plane REST service for interaction with vault secrets.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName Name of the vault\n   * @param secretName Name of the secret\n   * @param parameters Parameters to patch the secret\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    vaultName: string,\n    secretName: string,\n    parameters: SecretPatchParameters,\n    options?: SecretsUpdateOptionalParams\n  ): Promise<SecretsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, secretName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified secret.  NOTE: This API is intended for internal use in ARM deployments. Users\n   * should use the data-plane REST service for interaction with vault secrets.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName The name of the vault.\n   * @param secretName The name of the secret.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vaultName: string,\n    secretName: string,\n    options?: SecretsGetOptionalParams\n  ): Promise<SecretsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, secretName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The List operation gets information about the secrets in a vault.  NOTE: This API is intended for\n   * internal use in ARM deployments. Users should use the data-plane REST service for interaction with\n   * vault secrets.\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName The name of the vault.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    vaultName: string,\n    options?: SecretsListOptionalParams\n  ): Promise<SecretsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n   * @param vaultName The name of the vault.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    vaultName: string,\n    nextLink: string,\n    options?: SecretsListNextOptionalParams\n  ): Promise<SecretsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vaultName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Secret\n    },\n    201: {\n      bodyMapper: Mappers.Secret\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.secretName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Secret\n    },\n    201: {\n      bodyMapper: Mappers.Secret\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName,\n    Parameters.secretName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Secret\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName1,\n    Parameters.secretName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vaultName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecretListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.top],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.vaultName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  KeysImpl,\n  VaultsImpl,\n  PrivateEndpointConnectionsImpl,\n  PrivateLinkResourcesImpl,\n  ManagedHsmsImpl,\n  MhsmPrivateEndpointConnectionsImpl,\n  MhsmPrivateLinkResourcesImpl,\n  OperationsImpl,\n  SecretsImpl\n} from \"./operations\";\nimport {\n  Keys,\n  Vaults,\n  PrivateEndpointConnections,\n  PrivateLinkResources,\n  ManagedHsms,\n  MhsmPrivateEndpointConnections,\n  MhsmPrivateLinkResources,\n  Operations,\n  Secrets\n} from \"./operationsInterfaces\";\nimport { KeyVaultManagementClientOptionalParams } from \"./models\";\n\nexport class KeyVaultManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the KeyVaultManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.\n   *                       The subscription ID forms part of the URI for every service call.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: KeyVaultManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: KeyVaultManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-keyvault/2.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2021-10-01\";\n    this.keys = new KeysImpl(this);\n    this.vaults = new VaultsImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.managedHsms = new ManagedHsmsImpl(this);\n    this.mhsmPrivateEndpointConnections = new MhsmPrivateEndpointConnectionsImpl(\n      this\n    );\n    this.mhsmPrivateLinkResources = new MhsmPrivateLinkResourcesImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.secrets = new SecretsImpl(this);\n  }\n\n  keys: Keys;\n  vaults: Vaults;\n  privateEndpointConnections: PrivateEndpointConnections;\n  privateLinkResources: PrivateLinkResources;\n  managedHsms: ManagedHsms;\n  mhsmPrivateEndpointConnections: MhsmPrivateEndpointConnections;\n  mhsmPrivateLinkResources: MhsmPrivateLinkResources;\n  operations: Operations;\n  secrets: Secrets;\n}\n"],"names":["KnownDeletionRecoveryLevel","KnownJsonWebKeyType","KnownJsonWebKeyOperation","KnownJsonWebKeyCurveName","KnownSkuFamily","KnownKeyPermissions","KnownSecretPermissions","KnownCertificatePermissions","KnownStoragePermissions","KnownNetworkRuleBypassOptions","KnownNetworkRuleAction","KnownVaultProvisioningState","KnownPrivateEndpointServiceConnectionStatus","KnownActionsRequired","KnownPrivateEndpointConnectionProvisioningState","KnownIdentityType","KnownProvisioningState","KnownPublicNetworkAccess","KnownManagedHsmSkuFamily","KeyCreateParametersMapper","VaultCreateOrUpdateParametersMapper","VaultPatchParametersMapper","VaultAccessPolicyParametersMapper","VaultCheckNameAvailabilityParametersMapper","PrivateEndpointConnectionMapper","ManagedHsmMapper","MhsmPrivateEndpointConnectionMapper","SecretCreateOrUpdateParametersMapper","SecretPatchParametersMapper","__asyncValues","__asyncDelegator","coreClient.createSerializer","Mappers.Key","Mappers.CloudError","Parameters.parameters","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.vaultName","Parameters.keyName","Parameters.contentType","Parameters.accept","Mappers.KeyListResult","Parameters.keyVersion","Parameters.nextLink","LroEngine","getOperationSpec","listOperationSpec","listNextOperationSpec","serializer","Mappers.Vault","Parameters.parameters1","Parameters.parameters2","Parameters.vaultName1","Mappers.VaultAccessPolicyParameters","Parameters.parameters3","Parameters.operationKind","Mappers.VaultListResult","Parameters.top","Mappers.DeletedVaultListResult","Mappers.DeletedVault","Parameters.location","Mappers.ResourceListResult","Parameters.filter","Parameters.apiVersion1","Mappers.CheckNameAvailabilityResult","Parameters.vaultName2","deleteOperationSpec","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnectionName","Mappers.PrivateEndpointConnectionsPutHeaders","Parameters.properties","Mappers.PrivateEndpointConnectionListResult","Mappers.PrivateLinkResourceListResult","createOrUpdateOperationSpec","updateOperationSpec","listByResourceGroupOperationSpec","listBySubscriptionOperationSpec","listDeletedOperationSpec","getDeletedOperationSpec","purgeDeletedOperationSpec","listByResourceGroupNextOperationSpec","listBySubscriptionNextOperationSpec","listDeletedNextOperationSpec","Mappers.ManagedHsm","Mappers.ManagedHsmError","Parameters.parameters4","Parameters.name","Mappers.ManagedHsmListResult","Mappers.DeletedManagedHsmListResult","Mappers.DeletedManagedHsm","listByResourceOperationSpec","putOperationSpec","listByResourceNextOperationSpec","Mappers.MhsmPrivateEndpointConnectionsListResult","Mappers.MhsmPrivateEndpointConnection","Mappers.MhsmPrivateEndpointConnectionsPutHeaders","Parameters.properties1","Mappers.MhsmPrivateLinkResourceListResult","Mappers.OperationListResult","Mappers.Secret","Parameters.parameters5","Parameters.secretName","Parameters.parameters6","Parameters.secretName1","Mappers.SecretListResult","coreClient.ServiceClient"],"mappings":"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"}